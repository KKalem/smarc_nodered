[
    {
        "id": "8cc0dadb75774b52",
        "type": "tab",
        "label": "MQTT in, vehicle state, actuators",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "053268593fae8c42",
        "type": "tab",
        "label": "Map",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bd7de6c3e385f05f",
        "type": "tab",
        "label": "Easter",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "072468ee5a218dc0",
        "type": "tab",
        "label": "V2 Robot State",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "65c60c3b274f73e3",
        "type": "tab",
        "label": "V2 Map",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1301e8ab7fdd3e72",
        "type": "mqtt-broker",
        "name": "mqtt_broker",
        "broker": "broker",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "95aa286d35eafbda",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "71f95dd3ceeb2145",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Command and Conquer Subs",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "icon",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 40,
                "sy": 40,
                "gx": 2,
                "gy": 2,
                "cx": 2,
                "cy": 2,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "1417de57d250f31f",
        "type": "ui_group",
        "name": "State",
        "tab": "95aa286d35eafbda",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cd81d08b.eebb3",
        "type": "ui_group",
        "z": "8cc0dadb75774b52",
        "name": "Default",
        "tab": "b34078e6.e60df8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b34078e6.e60df8",
        "type": "ui_tab",
        "z": "8cc0dadb75774b52",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "102ceb2b72c23b34",
        "type": "ui_group",
        "name": "Map",
        "tab": "95aa286d35eafbda",
        "order": 2,
        "disp": false,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d95a7e5bd038651c",
        "type": "key-value-store",
        "filepath": "waypoints.json",
        "namespace": "",
        "name": "waypoints"
    },
    {
        "id": "52f0dbb4c9ed8309",
        "type": "ui_group",
        "name": "Security",
        "tab": "95aa286d35eafbda",
        "order": 5,
        "disp": true,
        "width": "3",
        "collapse": true,
        "className": ""
    },
    {
        "id": "53ba06c1420a4513",
        "type": "ui_tab",
        "name": "Globals",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f5a1a6343a549333",
        "type": "ui_group",
        "name": "Globals",
        "tab": "53ba06c1420a4513",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9dbddaa8775473fd",
        "type": "ui_group",
        "name": "Waypoint",
        "tab": "95aa286d35eafbda",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": true,
        "className": ""
    },
    {
        "id": "574bd822e17b1c3f",
        "type": "ui_group",
        "name": "Mission Plan",
        "tab": "95aa286d35eafbda",
        "order": 4,
        "disp": true,
        "width": "7",
        "collapse": true,
        "className": ""
    },
    {
        "id": "99b5f7c7e1f62814",
        "type": "key-value-store",
        "filepath": "mission_plans.json",
        "namespace": "",
        "name": "mission plans"
    },
    {
        "id": "9e2bac96.b321b",
        "type": "ui_group",
        "name": "S1",
        "tab": "62712bbf.888b94",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "62712bbf.888b94",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "014f9035e48813bb",
        "type": "ui_tab",
        "name": "V2",
        "icon": "gear",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a48b13904097fb6a",
        "type": "ui_group",
        "name": "Robot Info",
        "tab": "014f9035e48813bb",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9f2da61.3353758",
        "type": "ui_group",
        "name": "Flight",
        "tab": "d6d3c358.5fb46",
        "order": 1,
        "disp": true,
        "width": "20",
        "collapse": false
    },
    {
        "id": "d6d3c358.5fb46",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "81d4dedb195938c4",
        "type": "ui_group",
        "name": "BT State",
        "tab": "014f9035e48813bb",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "542b5325cf729b8f",
        "type": "ui_group",
        "name": "Map",
        "tab": "014f9035e48813bb",
        "order": 2,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a891e5f5f2effe35",
        "type": "ui_group",
        "name": "Missions",
        "tab": "014f9035e48813bb",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c68132315359e81c",
        "type": "ui_group",
        "name": "Tracks",
        "tab": "014f9035e48813bb",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ba1fb12713836940",
        "type": "ui_group",
        "name": "Helptext",
        "tab": "014f9035e48813bb",
        "order": 3,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6d01ec93.b1d374",
        "type": "ui_group",
        "name": "UserEntry",
        "tab": "5132060d.4cde48",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "dce9e7a2.d20c78",
        "type": "ui_group",
        "name": "Object detection",
        "tab": "5132060d.4cde48",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false
    },
    {
        "id": "5132060d.4cde48",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a517da34.afeac8",
        "type": "ui_group",
        "name": "Manual Control",
        "tab": "a312bb8e.67b4",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": true
    },
    {
        "id": "a312bb8e.67b4",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    },
    {
        "id": "6d93d1d6e9d2a07b",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "lat_lon",
        "topic": "smarc/+/dr/lat_lon",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 260,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "1a856d4522e1e254",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "Yaw",
        "topic": "smarc/+/dr/yaw",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 300,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "9b2d0437d1859a32",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "Depth",
        "topic": "smarc/+/dr/depth",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 420,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "1a815b3ddbbf0285",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "Roll",
        "topic": "smarc/+/dr/roll",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 340,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "e515c359bd2b65d3",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "Pitch",
        "topic": "smarc/+/dr/pitch",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 380,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "cec96d72fa5a1f3d",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "VBS_fb",
        "topic": "smarc/+/core/vbs_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 460,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "49b4a86719760597",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "LCG_fb",
        "topic": "smarc/+/core/lcg_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 500,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "b9def8576fb40145",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "T1_fb",
        "topic": "smarc/+/core/thruster1_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 540,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "1f47fb9bdf2432dc",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "T2_fb",
        "topic": "smarc/+/core/thruster2_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 580,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "600e8a4fd93b8b33",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "batt",
        "topic": "smarc/+/core/battery",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 620,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "19f8f48675c600ed",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "gps",
        "topic": "smarc/+/core/gps",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 660,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "84e9d8bb8aca3954",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "Altitude",
        "topic": "smarc/+/dr/altitude",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 700,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "28d38018bfd6084b",
        "type": "inject",
        "z": "8cc0dadb75774b52",
        "name": "0.2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "active_vehicle",
        "payloadType": "global",
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "8429b678ad11f94e",
                "4c8dc3f2305dd06a"
            ]
        ]
    },
    {
        "id": "75e2505923e210c8",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "goto_wp_goal",
        "topic": "smarc/+/bt/last_wp",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 740,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "48bd42de4f79dcdf",
        "type": "comment",
        "z": "8cc0dadb75774b52",
        "name": "goal obj",
        "info": "goal: object\n    waypoint: object\n        pose: object\n        goal_tolerance: 5\n        z_control_mode: 1\n        travel_altitude: 0\n        travel_depth: 0\n        speed_control_mode: 1\n        travel_rpm: 1000\n        travel_speed: 0\n        lat: 1.0166838140439685\n        lon: 0.199858858981976",
        "x": 310,
        "y": 740,
        "wires": []
    },
    {
        "id": "89a02e38feb8e62a",
        "type": "config",
        "z": "8cc0dadb75774b52",
        "name": "G waypoints",
        "properties": [
            {
                "p": "waypoints",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 710,
        "y": 240,
        "wires": []
    },
    {
        "id": "45e404335095cc6b",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "bt tip",
        "topic": "smarc/+/bt/tip",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 780,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "e4e7d91b635d63b1",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "bt tip",
        "func": "tip = msg.payload.tip;\nc = \"black\"\nswitch(tip.status){\n    case \"failure\":\n        c = \"red\"\n        break\n    case \"success\":\n        c = \"green\"\n        break\n    case \"running\":\n        c = \"blue\"\n        break\n}\n\ns = tip.name + \":\" + tip.message;\nvar m = {payload:s, strongcolor:c, color:c};\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1420,
        "wires": [
            [
                "64b3a0e8d8c4dd5e"
            ]
        ]
    },
    {
        "id": "947467be6e9b43e1",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "livewp enable",
        "topic": "smarc/+/bt/live_wp/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 820,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "2b0af13e81a43f9b",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "algae enable",
        "topic": "smarc/+/bt/algae_farm/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 860,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "8a73a400bdc80f26",
        "type": "config",
        "z": "8cc0dadb75774b52",
        "name": "G security",
        "properties": [
            {
                "p": "map_pw",
                "pt": "global",
                "to": "1",
                "tot": "str"
            },
            {
                "p": "map_pw_timeleft_secs",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "p": "disable_count",
                "pt": "global",
                "to": "0",
                "tot": "num"
            }
        ],
        "active": true,
        "x": 720,
        "y": 280,
        "wires": []
    },
    {
        "id": "58bfd1be028c15be",
        "type": "ui_led",
        "z": "8cc0dadb75774b52",
        "order": 5,
        "group": "9dbddaa8775473fd",
        "width": 4,
        "height": 1,
        "label": "ALGAE",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "algae",
        "x": 870,
        "y": 1460,
        "wires": []
    },
    {
        "id": "44a2505c433e9aef",
        "type": "change",
        "z": "8cc0dadb75774b52",
        "name": "algae farm enable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.algae_farm_enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1460,
        "wires": [
            [
                "58bfd1be028c15be"
            ]
        ]
    },
    {
        "id": "f1f9f9ebc0364948",
        "type": "ui_led",
        "z": "8cc0dadb75774b52",
        "order": 4,
        "group": "9dbddaa8775473fd",
        "width": 4,
        "height": 1,
        "label": "LIVE-WP",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "live",
        "x": 870,
        "y": 1500,
        "wires": []
    },
    {
        "id": "6a031635d274a714",
        "type": "change",
        "z": "8cc0dadb75774b52",
        "name": "livewp enable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.live_wp_enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1500,
        "wires": [
            [
                "f1f9f9ebc0364948"
            ]
        ]
    },
    {
        "id": "4027428873576c95",
        "type": "config",
        "z": "8cc0dadb75774b52",
        "name": "G Vehicles",
        "properties": [
            {
                "p": "vehicles",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 710,
        "y": 160,
        "wires": []
    },
    {
        "id": "a28e3fd079e64616",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "Register Vehicle",
        "func": "vehicles = global.get(\"vehicles\");\n\nparts = msg.topic.split('/')\nconst [smarc, msg_robot_name, ...topic_parts] = parts;\nmsg_mqtt_topic = topic_parts.join(\"/\")\n\nnew_vehicle = false\n\n// if first time seeing this robot\n    // only register if there is a heartbeat\nif(!(msg_robot_name in vehicles) && msg_mqtt_topic == \"bt/heartbeat\"){\n    // gotta make a clone. and this seems the easiest....\n    v = JSON.parse(JSON.stringify(global.get(\"vehicle_state_template\")));\n    v.basic_state.name = msg_robot_name;\n    v.basic_state.label = msg_robot_name;\n    v.basic_state.layer = msg_robot_name;\n    v.gps_fix.layer = msg_robot_name;\n    vehicles[msg_robot_name] = v\n    global.set(\"vehicles\", vehicles);\n    node.warn(\"Registered new vehicle \"+v.basic_state.name);\n    new_vehicle = true\n}\n\nmsg.name = msg_robot_name\nmsg.topic = msg_mqtt_topic\nmsg.new_vehicle = new_vehicle\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 580,
        "wires": [
            [
                "352a27f086708676",
                "fd9509825ed48013"
            ]
        ]
    },
    {
        "id": "fac0c95e2d7a78f8",
        "type": "config",
        "z": "8cc0dadb75774b52",
        "name": "G Vehicle State Template",
        "properties": [
            {
                "p": "vehicle_state_template",
                "pt": "global",
                "to": "{\"basic_state\":{\"name\":\"\",\"label\":\"\",\"lat\":null,\"lon\":null,\"heading\":0,\"roll\":0,\"pitch\":0,\"depth\":0,\"altitude\":0,\"vbs\":0,\"lcg\":0,\"tcg\":0,\"t1\":0,\"t2\":0,\"batt_v\":0,\"icon\":\"ship\",\"color\":\"yellow\",\"iconColor\":\"yellow\",\"layer\":\"Vehicle\"},\"gps_fix\":{\"name\":\"gps_fix\",\"label\":\"\",\"lat\":null,\"lon\":null,\"icon\":\"satellite\",\"color\":\"green\",\"iconColor\":\"green\",\"layer\":\"Vehicle\"},\"bt_state\":{\"tip\":{\"name\":\"???\",\"message\":\"\",\"status\":\"???\"},\"algae_farm_enable\":false,\"live_wp_enable\":false,\"gui_wp_enable\":false,\"current_wp\":{},\"current_plan\":{},\"last_heartbeat\":null}}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "352a27f086708676",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "update vehicle state",
        "func": "function to_deg(d){\n    deg = d * (180/Math.PI);\n    deg = deg%360;\n    return deg;\n}\n\nfunction to_northing(d){\n    h = Math.PI/2 - d;\n    return to_deg(h);\n}\n\nvs = global.get(\"vehicles\");\nif(!(msg.name in vs)){\n    //node.warn(\"Vehicle \"+msg.name+\" is not in the list?\")\n    return\n}\nv = vs[msg.name];\n\n\n/* Vehicle template:\n{\n    \"basic_state\":{\n        \"name\": \"\",\n        \"label\": \"\",\n        \"lat\": null,\n        \"lon\": null,\n        \"heading\": 0,\n        \"roll\": 0,\n        \"pitch\": 0,\n        \"depth\": 0,\n        \"altitude\": 0,\n        \"vbs\": 0,\n        \"lcg\": 0,\n        \"tcg\": 0,\n        \"t1\": 0,\n        \"t2\": 0,\n        \"batt_v\": 0,\n        \"icon\": \"ship\",\n        \"color\": \"yellow\",\n        \"iconColor\": \"yellow\",\n        \"layer\": \"Vehicle\"\n    },\n    \"gps_fix\": {\n        \"name\": \"gps_fix\",\n        \"label\": \"\",\n        \"lat\": null,\n        \"lon\": null,\n        \"icon\": \"satellite\",\n        \"color\": \"green\",\n        \"iconColor\": \"green\",\n        \"layer\": \"Vehicle\"\n    },\n    \"bt_state\": {\n        \"tip\": {\n            \"name\": \"???\",\n            \"message\": \"\"\n        },\n        \"algae_farm_enable\": false,\n        \"localization_enable\": false,\n        \"current_wp\": {},\n        \"current_plan\": {}\n    }\n}\n*/\nvar payload = msg.payload;\nswitch(msg.topic){\n    case \"dr/lat_lon\":\n        v.basic_state.lat = payload.latitude;\n        v.basic_state.lon = payload.longitude;\n        break;\n        \n    case \"dr/yaw\":\n        v.basic_state.heading = to_northing(payload.data);\n        break;\n        \n    case \"dr/roll\":\n        v.basic_state.roll = to_deg(payload.data);\n        break;\n        \n    case \"dr/pitch\":\n        v.basic_state.pitch = to_deg(payload.data);\n        break;\n        \n    case \"dr/depth\":\n        v.basic_state.depth = payload.data;\n        break;\n\n    case \"dr/altitude\":\n        v.basic_state.altitude = payload.data;\n        break;        \n        \n    case \"core/vbs_fb\":\n        v.basic_state.vbs = payload.value;\n        break;\n        \n    case \"core/lcg_fb\":\n        v.basic_state.lcg = payload.value;\n        break;\n        \n    case \"core/thruster1_fb\":\n        v.basic_state.t1 = payload.rpm.rpm;\n        break;\n        \n    case \"core/thruster2_fb\":\n        v.basic_state.t2 = payload.rpm.rpm;\n        break;\n        \n    case \"core/battery\":\n        v.basic_state.batt_v = payload.voltage;\n        break;\n        \n    case \"core/gps\":\n        v.gps_fix.lat = payload.latitude;\n        v.gps_fix.lon = payload.longitude;\n        v.gps_fix.name = v.basic_state.name + \"_gps_fix\"\n        break;\n        \n    case \"bt/last_wp\":\n        if(payload.pose.header.frame_id == \"utm\"){\n            v.bt_state.current_wp = payload;\n        }\n        break;\n        \n    case \"bt/tip\":\n        v.bt_state.tip.name = payload.name;\n        v.bt_state.tip.message = payload.message;\n        switch(payload.status){\n            case 0:\n                v.bt_state.tip.status = \"unknown\"\n                break\n            case 1:\n                v.bt_state.tip.status = \"invalid\"\n                break\n            case 2:\n                v.bt_state.tip.status = \"running\"\n                break\n            case 3:\n                v.bt_state.tip.status = \"success\"\n                break\n            case 4:\n                v.bt_state.tip.status = \"failure\"\n                break\n        }\n        break;\n        \n    case \"bt/live_wp/enable\":\n        v.bt_state.live_wp_enable = payload.data;\n        break;\n        \n    case \"bt/algae_farm/enable\":\n        v.bt_state.algae_farm_enable = payload.data;\n        break;\n        \n    case \"bt/gui_wp/enable\":\n        v.bt_state.gui_wp_enable = payload.data;\n        break;\n        \n    case \"bt/heartbeat\":\n        v.bt_state.last_heartbeat = Date.now()\n        break;\n        \n    case \"bt/mission_control\":\n        if(payload.command == 5){ // is_feedback\n            v.bt_state.current_plan = payload\n        }\n}\n\nvs[msg.name] = v;\n//node.warn(v.basic_state.name + \" <- \" + msg.topic + \"-\" + msg.name)\nglobal.set(\"vehicles\", vs);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "47b308426c2c1c2c",
        "type": "config",
        "z": "8cc0dadb75774b52",
        "name": "G active_vehicle",
        "properties": [
            {
                "p": "active_vehicle",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "8429b678ad11f94e",
        "type": "ui_text",
        "z": "8cc0dadb75774b52",
        "group": "1417de57d250f31f",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "active veh",
        "label": "Active vehicle:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 380,
        "y": 1080,
        "wires": []
    },
    {
        "id": "4c8dc3f2305dd06a",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "active_vehicle_basic_state",
        "func": "name = global.get(\"active_vehicle\");\nvs = global.get(\"vehicles\");\nif(name in vs){\n    v = vs[name];\n    return {payload:v.basic_state};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1120,
        "wires": [
            [
                "d8cdca46ac124119",
                "79d9ddbe6b73b50f"
            ]
        ]
    },
    {
        "id": "d8cdca46ac124119",
        "type": "split",
        "z": "8cc0dadb75774b52",
        "name": "split_keys",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "key",
        "x": 660,
        "y": 940,
        "wires": [
            [
                "bf04ca75f8f0d841"
            ]
        ]
    },
    {
        "id": "bf04ca75f8f0d841",
        "type": "switch",
        "z": "8cc0dadb75774b52",
        "name": "",
        "property": "key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "heading",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "roll",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pitch",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "vbs",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lcg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "tcg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "t1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "t2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "batt_v",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "depth",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "altitude",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 11,
        "x": 790,
        "y": 940,
        "wires": [
            [
                "68e37a7a4d467a49"
            ],
            [
                "9608a3f69f063504"
            ],
            [
                "be4fcbcdc106841b"
            ],
            [
                "9b160c7dc6cf0f42"
            ],
            [
                "b4896f88274e79eb"
            ],
            [
                "b89f97ecfd6f8bb4"
            ],
            [
                "1b309e82c6d130b9"
            ],
            [
                "eb781abcadeb5b67"
            ],
            [],
            [
                "f5a1927d0bd28c49"
            ],
            [
                "079ff2a8e8b0864f"
            ]
        ]
    },
    {
        "id": "68e37a7a4d467a49",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "Heading",
        "group": "1417de57d250f31f",
        "order": 5,
        "width": 2,
        "height": 2,
        "gtype": "compass",
        "title": "Northing",
        "label": "deg",
        "format": "{{value | number:1}}",
        "min": "-359",
        "max": "359",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1200,
        "y": 720,
        "wires": []
    },
    {
        "id": "be4fcbcdc106841b",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "Pitch",
        "group": "1417de57d250f31f",
        "order": 6,
        "width": 2,
        "height": 2,
        "gtype": "compass",
        "title": "Pitch",
        "label": "deg",
        "format": "{{value | number:1}}",
        "min": "-90",
        "max": "90",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1190,
        "y": 800,
        "wires": []
    },
    {
        "id": "9608a3f69f063504",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "Roll",
        "group": "1417de57d250f31f",
        "order": 7,
        "width": 2,
        "height": 2,
        "gtype": "compass",
        "title": "Roll",
        "label": "deg",
        "format": "{{value | number:1}}",
        "min": "-180",
        "max": "180",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1190,
        "y": 760,
        "wires": []
    },
    {
        "id": "9b160c7dc6cf0f42",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "VBS",
        "group": "1417de57d250f31f",
        "order": 8,
        "width": 4,
        "height": 4,
        "gtype": "wave",
        "title": "VBS",
        "label": "%",
        "format": "{{value | number:2}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 1190,
        "y": 840,
        "wires": []
    },
    {
        "id": "b4896f88274e79eb",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "LCG",
        "group": "1417de57d250f31f",
        "order": 9,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "LCG",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 1190,
        "y": 880,
        "wires": []
    },
    {
        "id": "1b309e82c6d130b9",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "T1",
        "group": "1417de57d250f31f",
        "order": 11,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "T1",
        "label": "rpm",
        "format": "{{value | number:1}}",
        "min": "-2000",
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "-800",
        "seg2": "800",
        "className": "",
        "x": 1190,
        "y": 960,
        "wires": []
    },
    {
        "id": "eb781abcadeb5b67",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "T2",
        "group": "1417de57d250f31f",
        "order": 12,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "T2",
        "label": "rpm",
        "format": "{{value | number:1}}",
        "min": "-2000",
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "-800",
        "seg2": "800",
        "className": "",
        "x": 1190,
        "y": 1000,
        "wires": []
    },
    {
        "id": "b89f97ecfd6f8bb4",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "TCG",
        "group": "1417de57d250f31f",
        "order": 10,
        "width": 2,
        "height": 2,
        "gtype": "gage",
        "title": "TCG",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 1190,
        "y": 920,
        "wires": []
    },
    {
        "id": "033ad9746b755359",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "",
        "group": "1417de57d250f31f",
        "order": 13,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Battery V",
        "label": "V",
        "format": "{{value | number:2}}",
        "min": "10",
        "max": "14",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "12",
        "seg2": "13",
        "className": "",
        "x": 1240,
        "y": 1040,
        "wires": []
    },
    {
        "id": "f5a1927d0bd28c49",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "prep depth 4 plot",
        "func": "msg.payload = -msg.payload;\nmsg.topic = \"depth\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 1120,
        "wires": [
            [
                "7e93394aa67a22c5"
            ]
        ]
    },
    {
        "id": "079ff2a8e8b0864f",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "prep alt 4 plot",
        "func": "msg.payload = -msg.payload;\nmsg.topic = \"alti\";\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 1160,
        "wires": [
            [
                "38ca092118fa2e3c"
            ]
        ]
    },
    {
        "id": "79d9ddbe6b73b50f",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "bottom",
        "func": "alt = msg.payload.altitude;\ndep = msg.payload.depth;\nbot = dep+alt;\nvar m = {\"payload\": -bot,\n\"topic\":\"bottom\"};\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1200,
        "wires": [
            [
                "579d1ecfcf970deb"
            ]
        ]
    },
    {
        "id": "1e97bca67b525bf1",
        "type": "ui_chart",
        "z": "8cc0dadb75774b52",
        "name": "alt depth",
        "group": "102ceb2b72c23b34",
        "order": 7,
        "width": 18,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "NONE",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#804040",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1360,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "7e93394aa67a22c5",
        "type": "delay",
        "z": "8cc0dadb75774b52",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1120,
        "wires": [
            [
                "1e97bca67b525bf1"
            ]
        ]
    },
    {
        "id": "38ca092118fa2e3c",
        "type": "delay",
        "z": "8cc0dadb75774b52",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1160,
        "wires": [
            [
                "1e97bca67b525bf1"
            ]
        ]
    },
    {
        "id": "579d1ecfcf970deb",
        "type": "delay",
        "z": "8cc0dadb75774b52",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1190,
        "y": 1200,
        "wires": [
            [
                "1e97bca67b525bf1"
            ]
        ]
    },
    {
        "id": "11888389b48776f8",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "active_vehicle_bt_state",
        "func": "name = global.get(\"active_vehicle\");\nvs = global.get(\"vehicles\");\nif(name in vs){\n    v = vs[name];\n    return {payload:v.bt_state};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1460,
        "wires": [
            [
                "e4e7d91b635d63b1",
                "44a2505c433e9aef",
                "6a031635d274a714",
                "97107647fbc41899",
                "24410997d80f5149",
                "3419610e604c77b1"
            ]
        ]
    },
    {
        "id": "ac77511e45a57bd7",
        "type": "inject",
        "z": "8cc0dadb75774b52",
        "name": "0.3s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 1460,
        "wires": [
            [
                "11888389b48776f8"
            ]
        ]
    },
    {
        "id": "97107647fbc41899",
        "type": "ui_text",
        "z": "8cc0dadb75774b52",
        "d": true,
        "group": "f5a1a6343a549333",
        "order": 1,
        "width": "5",
        "height": "18",
        "name": "",
        "label": "BT state",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "x": 640,
        "y": 1580,
        "wires": []
    },
    {
        "id": "64091fc4b58e9d7e",
        "type": "config",
        "z": "8cc0dadb75774b52",
        "name": "G Mission Plans",
        "properties": [
            {
                "p": "mission_plans",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 700,
        "y": 320,
        "wires": []
    },
    {
        "id": "0e26fcd18aabedb7",
        "type": "config",
        "z": "8cc0dadb75774b52",
        "name": "G GUI state",
        "properties": [
            {
                "p": "gui_state",
                "pt": "global",
                "to": "{\"selected_wp\":{},\"selected_plan\":{},\"planning_mode\":false,\"batt_v_minmax\":[-1,-1],\"draw_tracks\":false}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 710,
        "y": 360,
        "wires": []
    },
    {
        "id": "0b7292754967ad41",
        "type": "ui_switch",
        "z": "8cc0dadb75774b52",
        "name": "",
        "label": "GUI-WP",
        "tooltip": "Sends the AUV to the selected WP",
        "group": "9dbddaa8775473fd",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 620,
        "y": 1780,
        "wires": [
            [
                "a3520c2ebe8995c4"
            ]
        ]
    },
    {
        "id": "50c6de4ee1cfcdee",
        "type": "mqtt out",
        "z": "8cc0dadb75774b52",
        "name": "guiwp_enable",
        "topic": "",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1301e8ab7fdd3e72",
        "x": 720,
        "y": 1860,
        "wires": []
    },
    {
        "id": "a3520c2ebe8995c4",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "payload{data}",
        "func": "name = global.get(\"active_vehicle\");\nm = {\"payload\": {\"data\":msg.payload},\n    \"topic\": \"smarc/\"+name+\"/bt_cmd/gui_wp/enable\"\n};\nreturn m",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1820,
        "wires": [
            [
                "50c6de4ee1cfcdee"
            ]
        ]
    },
    {
        "id": "4b6203d899c22cfb",
        "type": "inject",
        "z": "8cc0dadb75774b52",
        "name": "0.3s",
        "props": [],
        "repeat": "0.3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 190,
        "y": 1740,
        "wires": [
            [
                "f83ff3091c4615eb"
            ]
        ]
    },
    {
        "id": "f83ff3091c4615eb",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "selected wp",
        "func": "gs = global.get(\"gui_state\")\nwp = gs.selected_wp\nif(wp){\n    return {payload:wp}\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 1780,
        "wires": [
            [
                "f494794aeb435526"
            ]
        ]
    },
    {
        "id": "d2cd5f598f37da47",
        "type": "mqtt out",
        "z": "8cc0dadb75774b52",
        "name": "guiwp_wp",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1301e8ab7fdd3e72",
        "x": 400,
        "y": 1980,
        "wires": []
    },
    {
        "id": "f494794aeb435526",
        "type": "switch",
        "z": "8cc0dadb75774b52",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 1820,
        "wires": [
            [
                "b2ebe8f261e2ee04"
            ]
        ]
    },
    {
        "id": "b02a0a564855195c",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "loc/wp topic",
        "func": "name = global.get(\"active_vehicle\");\nm = {\"payload\": msg.payload,\n    \"topic\": \"smarc/\"+name+\"/bt_cmd/gui_wp/wp\"\n};\nreturn m;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1940,
        "wires": [
            [
                "d2cd5f598f37da47"
            ]
        ]
    },
    {
        "id": "b2ebe8f261e2ee04",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "make_wp",
        "func": "wp = {\n  \"pose\": {\n    \"header\": {\n      \"seq\": 0,\n      \"stamp\": {\n        \"secs\": 0,\n        \"nsecs\": 0\n      },\n      \"frame_id\": \"latlon\"\n    },\n    \"pose\": {\n      \"position\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"z\": 0\n      },\n      \"orientation\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"z\": 0,\n        \"w\": 0\n      }\n    }\n  },\n  \"goal_tolerance\": 5,\n  \"z_control_mode\": 1, //depth\n  \"travel_altitude\": msg.payload.travel_altitude,\n  \"travel_depth\": msg.payload.travel_depth,\n  \"speed_control_mode\": msg.payload.speed_control_mode, //m/s\n  \"travel_rpm\": msg.payload.travel_rpm,\n  \"travel_speed\": msg.payload.travel_speed,\n  \"lat\": msg.payload.lat,\n  \"lon\": msg.payload.lon,\n  \"name\":msg.payload.name\n}\n\nm = {\"payload\":wp}\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1860,
        "wires": [
            [
                "470d4856d9b9ec12"
            ]
        ]
    },
    {
        "id": "470d4856d9b9ec12",
        "type": "switch",
        "z": "8cc0dadb75774b52",
        "name": "sam or lolo?",
        "property": "active_vehicle",
        "propertyType": "global",
        "rules": [
            {
                "t": "cont",
                "v": "sam",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "lolo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 1900,
        "wires": [
            [
                "b02a0a564855195c"
            ],
            [
                "b02a0a564855195c"
            ]
        ]
    },
    {
        "id": "263274d293ee9948",
        "type": "link in",
        "z": "8cc0dadb75774b52",
        "name": "",
        "links": [
            "7f714df460627f98",
            "69e7c18a81f1b55b"
        ],
        "x": 465,
        "y": 1740,
        "wires": [
            [
                "7667a55ed85fce91"
            ]
        ]
    },
    {
        "id": "e623a7f1b5efae8b",
        "type": "ui_button",
        "z": "8cc0dadb75774b52",
        "name": "send",
        "group": "574bd822e17b1c3f",
        "order": 5,
        "width": 7,
        "height": 1,
        "passthru": false,
        "label": "Send to vehicle",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-bath",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 2160,
        "wires": [
            [
                "fae9c985139be9fa"
            ]
        ]
    },
    {
        "id": "e8e2232722bf1c53",
        "type": "link in",
        "z": "8cc0dadb75774b52",
        "name": "",
        "links": [
            "7f714df460627f98",
            "69e7c18a81f1b55b"
        ],
        "x": 225,
        "y": 2160,
        "wires": [
            [
                "e623a7f1b5efae8b"
            ]
        ]
    },
    {
        "id": "ab0a5b9392c6ff65",
        "type": "mqtt out",
        "z": "8cc0dadb75774b52",
        "name": "mission_control",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1301e8ab7fdd3e72",
        "x": 740,
        "y": 2220,
        "wires": []
    },
    {
        "id": "fae9c985139be9fa",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "make mission control",
        "func": "name = global.get(\"active_vehicle\")\ngs = global.get(\"gui_state\")\nwps = global.get(\"waypoints\")\n\nif(gs.selected_plan){\n    proper_wps = []\n    for(var i in gs.selected_plan.wp_names){\n        wp_name = gs.selected_plan.wp_names[i]\n        wp = wps[wp_name]\n        if(wp){\n            wp_msg = {\n              \"pose\": {\n                \"header\": {\n                  \"seq\": 0,\n                  \"stamp\": {\n                    \"secs\": 0,\n                    \"nsecs\": 0\n                  },\n                  \"frame_id\": \"latlon\"\n                },\n                \"pose\": {\n                  \"position\": {\n                    \"x\": 0,\n                    \"y\": 0,\n                    \"z\": 0\n                  },\n                  \"orientation\": {\n                    \"x\": 0,\n                    \"y\": 0,\n                    \"z\": 0,\n                    \"w\": 0\n                  }\n                }\n              },\n              \"goal_tolerance\": 5,\n              \"z_control_mode\": 1, // depth\n              \"travel_altitude\": wp.travel_altitude,\n              \"travel_depth\": wp.travel_depth,\n              \"speed_control_mode\": wp.speed_control_mode,\n              \"travel_rpm\": wp.travel_rpm,\n              \"travel_speed\": wp.travel_speed,\n              \"lat\": wp.lat,\n              \"lon\": wp.lon,\n              \"name\":wp.name\n            }\n            proper_wps.push(wp_msg)\n        }\n    }\n    mission_control = {\n        name:gs.selected_plan.name,\n        command:4, //set plan\n        waypoints:proper_wps\n    }\n    m = {\n        payload: mission_control,\n        topic: \"smarc/\"+name+\"/bt_cmd/mission_control\"\n    }\n    return m\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2160,
        "wires": [
            [
                "ab0a5b9392c6ff65",
                "5107794bda2fabf9"
            ]
        ]
    },
    {
        "id": "5107794bda2fabf9",
        "type": "debug",
        "z": "8cc0dadb75774b52",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 2120,
        "wires": []
    },
    {
        "id": "f648bbe0c4e28b41",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "bt heartbeat",
        "topic": "smarc/+/bt/heartbeat",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 900,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "24410997d80f5149",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "secs since last heartbeat",
        "func": "bts = msg.payload\nlast = bts.last_heartbeat\nmillis = Date.now() - last  \nreturn {payload:millis/ 1000}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1380,
        "wires": [
            [
                "034dbf381bd93e09"
            ]
        ]
    },
    {
        "id": "1bdcd57c1547f4c2",
        "type": "ui_gauge",
        "z": "8cc0dadb75774b52",
        "name": "secs",
        "group": "1417de57d250f31f",
        "order": 3,
        "width": 1,
        "height": 1,
        "gtype": "gage",
        "title": "HB",
        "label": "s",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "0.4",
        "colors": [
            "#00ff00",
            "#ffff00",
            "#ff0000"
        ],
        "seg1": "0.3",
        "seg2": "",
        "className": "",
        "x": 1010,
        "y": 1400,
        "wires": []
    },
    {
        "id": "f9040e15e4c6f524",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "bt missioncontrol",
        "topic": "smarc/+/bt/mission_control",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 940,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "621f6f51348de540",
        "type": "link in",
        "z": "8cc0dadb75774b52",
        "name": "",
        "links": [
            "69e7c18a81f1b55b"
        ],
        "x": 215,
        "y": 2260,
        "wires": [
            [
                "cde1b92ecb0af08a",
                "147cbd7546fb94b1",
                "1151739119002b58",
                "554b8efc31d392a7"
            ]
        ]
    },
    {
        "id": "cde1b92ecb0af08a",
        "type": "ui_button",
        "z": "8cc0dadb75774b52",
        "name": "Start",
        "group": "574bd822e17b1c3f",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "Start the currently selected plan",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-play",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 2220,
        "wires": [
            [
                "f7f8b335cb411f88"
            ]
        ]
    },
    {
        "id": "f7f8b335cb411f88",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "make command",
        "func": "name = global.get(\"active_vehicle\")\ngs = global.get(\"gui_state\")\n\nif(gs.selected_plan){\n    mission_control = {\n        name:gs.selected_plan.name,\n        command:msg.payload //start plan\n    }\n    m = {\n        payload: mission_control,\n        topic: \"smarc/\"+name+\"/bt_cmd/mission_control\"\n    }\n    return m\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2220,
        "wires": [
            [
                "ab0a5b9392c6ff65"
            ]
        ]
    },
    {
        "id": "147cbd7546fb94b1",
        "type": "ui_button",
        "z": "8cc0dadb75774b52",
        "name": "Pause",
        "group": "574bd822e17b1c3f",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Pause",
        "tooltip": "Pause the currently selected plan",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "fa-pause",
        "payload": "2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 2300,
        "wires": [
            [
                "f7f8b335cb411f88"
            ]
        ]
    },
    {
        "id": "1151739119002b58",
        "type": "ui_button",
        "z": "8cc0dadb75774b52",
        "name": "Stop",
        "group": "574bd822e17b1c3f",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Cancel",
        "tooltip": "Stop the currently selected plan",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "fa-stop",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 2260,
        "wires": [
            [
                "f7f8b335cb411f88"
            ]
        ]
    },
    {
        "id": "554b8efc31d392a7",
        "type": "ui_button",
        "z": "8cc0dadb75774b52",
        "name": "Abort",
        "group": "1417de57d250f31f",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "ABORT",
        "tooltip": "Emergency stop, one-way street",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-eject",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 310,
        "y": 2340,
        "wires": [
            [
                "f7f8b335cb411f88"
            ]
        ]
    },
    {
        "id": "fd9509825ed48013",
        "type": "switch",
        "z": "8cc0dadb75774b52",
        "name": "new?",
        "property": "new_vehicle",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 710,
        "y": 620,
        "wires": [
            [
                "4615a84334505823"
            ]
        ]
    },
    {
        "id": "4731ad6ffdda22c4",
        "type": "ui_audio",
        "z": "8cc0dadb75774b52",
        "name": "",
        "group": "1417de57d250f31f",
        "voice": "urn:moz-tts:sapi:Microsoft Zira Desktop - English (United States)?en-US",
        "always": "",
        "x": 1060,
        "y": 640,
        "wires": []
    },
    {
        "id": "26e7ea65f9a11341",
        "type": "ui_toast",
        "z": "8cc0dadb75774b52",
        "position": "top left",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1080,
        "y": 600,
        "wires": []
    },
    {
        "id": "034dbf381bd93e09",
        "type": "switch",
        "z": "8cc0dadb75774b52",
        "name": "too late?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "10",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 1380,
        "wires": [
            [
                "f36fa4401ca841f5"
            ],
            [
                "1bdcd57c1547f4c2"
            ]
        ]
    },
    {
        "id": "cd8ad65ce7f7bef0",
        "type": "ui_audio",
        "z": "8cc0dadb75774b52",
        "name": "",
        "group": "1417de57d250f31f",
        "voice": "urn:moz-tts:sapi:Microsoft Zira Desktop - English (United States)?en-US",
        "always": "",
        "x": 1220,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f00b6b692ab70779",
        "type": "ui_toast",
        "z": "8cc0dadb75774b52",
        "position": "top left",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1240,
        "y": 1320,
        "wires": []
    },
    {
        "id": "f36fa4401ca841f5",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "remove active",
        "func": "name = global.get(\"active_vehicle\")\nvs = global.get(\"vehicles\")\nif(name in vs){\n    vs[name].bt_state.last_heartbeat = null\n    global.set(\"active_vehicle\", \"\")\n    msg.payload = \"Vehicle \"+ name + \" timed out\"\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1360,
        "wires": [
            [
                "cd8ad65ce7f7bef0",
                "f00b6b692ab70779"
            ]
        ]
    },
    {
        "id": "4615a84334505823",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "set active if first",
        "func": "current = global.get(\"active_vehicle\")\nif(current == \"\"){\n    global.set(\"active_vehicle\", msg.name)\n    m = \"First vehicle \"+msg.name+\" set as active\"\n}else{\n    m = \"New vehicle \"+msg.name\n}\nreturn {payload:m}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 620,
        "wires": [
            [
                "26e7ea65f9a11341",
                "4731ad6ffdda22c4",
                "07a1bbac5d3ab58e"
            ]
        ]
    },
    {
        "id": "7667a55ed85fce91",
        "type": "switch",
        "z": "8cc0dadb75774b52",
        "name": "sam or lolo?",
        "property": "active_vehicle",
        "propertyType": "global",
        "rules": [
            {
                "t": "cont",
                "v": "sam",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "lolo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 1740,
        "wires": [
            [
                "0b7292754967ad41"
            ],
            [
                "0b7292754967ad41"
            ]
        ]
    },
    {
        "id": "c043a32172c4ef31",
        "type": "mqtt in",
        "z": "8cc0dadb75774b52",
        "name": "guiwp enable",
        "topic": "smarc/+/bt/gui_wp/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 980,
        "wires": [
            [
                "a28e3fd079e64616"
            ]
        ]
    },
    {
        "id": "8f8b1d0d7ab4ce9b",
        "type": "ui_led",
        "z": "8cc0dadb75774b52",
        "order": 7,
        "group": "9dbddaa8775473fd",
        "width": 4,
        "height": 1,
        "label": "GUI-WP",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "gui",
        "x": 870,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3419610e604c77b1",
        "type": "change",
        "z": "8cc0dadb75774b52",
        "name": "guiwp enable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.gui_wp_enable",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1540,
        "wires": [
            [
                "8f8b1d0d7ab4ce9b"
            ]
        ]
    },
    {
        "id": "64b3a0e8d8c4dd5e",
        "type": "ui_text",
        "z": "8cc0dadb75774b52",
        "group": "1417de57d250f31f",
        "order": 14,
        "width": 6,
        "height": 5,
        "name": "Colored text",
        "label": "<font color= {{msg.strongcolor}} > BT Tip </font>",
        "format": "<font color= {{msg.color}} > {{msg.payload}} </font>",
        "layout": "col-center",
        "className": "",
        "x": 850,
        "y": 1420,
        "wires": []
    },
    {
        "id": "41213d1a752c77dd",
        "type": "function",
        "z": "8cc0dadb75774b52",
        "name": "adjust min/max",
        "func": "gui_st = global.get(\"gui_state\")\ng_minmax = gui_st.batt_v_minmax\ng_min = g_minmax[0]\ng_max = g_minmax[1]\n\n//node.warn(g_min+','+g_max+','+msg.payload)\n// 0, 14.5, 12.5\nif(g_min <= 0 || g_min > msg.payload){\n    g_min = msg.payload-2\n    if(g_min < 0){\n        g_min = 0\n    }\n}\nif(g_max == -1 || g_max < msg.payload){\n    g_max = msg.payload+2\n}\n\ngui_st.batt_v_minmax = [g_min, g_max]\n\nmsg.ui_control = {min:g_min ,max:g_max}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1040,
        "wires": [
            [
                "033ad9746b755359"
            ]
        ]
    },
    {
        "id": "07a1bbac5d3ab58e",
        "type": "link out",
        "z": "8cc0dadb75774b52",
        "name": "",
        "mode": "link",
        "links": [
            "f0807890835d67b1"
        ],
        "x": 975,
        "y": 680,
        "wires": []
    },
    {
        "id": "4f18c0fb5a5708dd",
        "type": "ui_worldmap",
        "z": "053268593fae8c42",
        "group": "102ceb2b72c23b34",
        "order": 6,
        "width": 18,
        "height": 12,
        "name": "",
        "lat": "58.25089840041283",
        "lon": "11.4500587783608",
        "zoom": "18",
        "layer": "EsriS",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "SN",
        "maplist": "EsriS,NatGeo",
        "mapname": "Bathy",
        "mapurl": "https://www.gebco.net/data_and_products/gebco_web_services/web_map_service/mapserv",
        "mapopt": "{ \"maxZoom\":22,\"attribution\":\"&copy; GEBCO\",\"format\":\"image/jpeg\",\"request\":\"getmap\",\"service\":\",\"layers\":\"gebco_latest_2_sub_ice_topo\"}",
        "mapwms": true,
        "x": 1020,
        "y": 240,
        "wires": []
    },
    {
        "id": "1c9e33661e87e2a3",
        "type": "worldmap-tracks",
        "z": "053268593fae8c42",
        "name": "",
        "depth": "10000",
        "layer": "combined",
        "smooth": false,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "528f627a90f6985c"
            ]
        ]
    },
    {
        "id": "24dfa000cb4c2933",
        "type": "comment",
        "z": "053268593fae8c42",
        "name": "special map icons",
        "info": "\n    plane : a jet plane icon that aligns with the heading of travel.\n    smallplane : a light aircraft icon that aligns with the heading of travel.\n    ship : a ship icon that aligns with the heading of travel.\n    car : a car icon that aligns with the heading of travel.\n    bus : a bus/coach icon that aligns with the heading of travel.\n    uav : a small uav like icon that aligns with the heading of travel.\n    helicopter : a small helicopter icon that aligns with the heading of travel.\n    arrow : a map GPS arrow type pointer that aligns with the heading of travel.\n    wind : a wind arrow that points in the direction the wind is coming FROM.\n    satellite : a small satellite icon.\n    iss : a slightly larger icon for the ISS.\n    locate : a 4 corner outline to locate a point without obscuring it.\n    friend : pseudo NATO style blue rectangle. (see NATO SIDC option below)\n    hostile : pseudo NATO style red circle.\n    neutral : pseudo NATO style green square.\n    unknown : pseudo NATO style yellow square.\n    earthquake : black circle - diameter proportional to msg.mag.\n",
        "x": 1190,
        "y": 240,
        "wires": []
    },
    {
        "id": "9cad79d0410d02e9",
        "type": "worldmap in",
        "z": "053268593fae8c42",
        "name": "",
        "path": "/worldmap",
        "events": "connect,disconnect,point,layer,bounds,files,draw,other",
        "x": 120,
        "y": 1020,
        "wires": [
            [
                "8f6b288d88b67fa8"
            ]
        ]
    },
    {
        "id": "8f6b288d88b67fa8",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "point",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "move",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "delete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "click",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 250,
        "y": 1020,
        "wires": [
            [
                "c9cfb47d68f70e8f"
            ],
            [
                "fc9170fe8371dff0"
            ],
            [
                "007b0ba19f255f0f"
            ],
            [
                "0f02de0042b627c1",
                "3f1101a0eff94520",
                "efb303bf3091ae28"
            ],
            [],
            []
        ]
    },
    {
        "id": "10f6a18739e64d25",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "make_wp",
        "func": "wp = {\n  \"pose\": {\n    \"header\": {\n      \"seq\": 0,\n      \"stamp\": {\n        \"secs\": 0,\n        \"nsecs\": 0\n      },\n      \"frame_id\": \"latlon\"\n    },\n    \"pose\": {\n      \"position\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"z\": 0\n      },\n      \"orientation\": {\n        \"x\": 0,\n        \"y\": 0,\n        \"z\": 0,\n        \"w\": 0\n      }\n    }\n  },\n  \"goal_tolerance\": 5,\n  \"z_control_mode\": 1, //depth\n  \"travel_altitude\": -1,\n  \"travel_depth\": 0,\n  \"speed_control_mode\": 1, //m/s\n  \"travel_rpm\": 200,\n  \"travel_speed\": 1,\n  \"lat\": msg.payload.lat,\n  \"lon\": msg.payload.lon,\n  \"name\":msg.payload.name\n}\n\nwps = global.get(\"waypoints\");\nif(wp.name in wps){\n    wp = wps[wp.name]\n    node.send([null, {payload:\"WP name needs to be unique\"}])\n}\n\nwps[wp.name] = wp;    \nglobal.set(\"waypoints\", wps)\n\nreturn [{payload:wp}, null]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 860,
        "wires": [
            [
                "c2a1d87a52c8ad5f"
            ],
            [
                "22b33628c3c58200"
            ]
        ]
    },
    {
        "id": "3fa36be91868d6c6",
        "type": "key-value-write",
        "z": "053268593fae8c42",
        "store": "d95a7e5bd038651c",
        "action": "set",
        "key": "",
        "keyvalue": "",
        "name": "save_wps",
        "x": 1080,
        "y": 1020,
        "wires": [
            [
                "74385683b57e28cf"
            ]
        ]
    },
    {
        "id": "547e0b3649d6ffca",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "deploy and repeat",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1150,
        "y": 2360,
        "wires": [
            [
                "7964fafb17064262"
            ]
        ]
    },
    {
        "id": "7964fafb17064262",
        "type": "key-value-read",
        "z": "053268593fae8c42",
        "store": "d95a7e5bd038651c",
        "key": "waypoints",
        "name": "",
        "x": 1450,
        "y": 2360,
        "wires": [
            [
                "50041808f3208548",
                "92e6032ec1defa71"
            ]
        ]
    },
    {
        "id": "76e6c4863dc8bccd",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "save_wps",
        "func": "wps = global.get(\"waypoints\");\nwp_names = Object.keys(wps);\nm = {\n    \"payload\":wps,\n    \"topic\":\"waypoints\",\n    \"options\":wp_names\n};\nreturn m",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1020,
        "wires": [
            [
                "3fa36be91868d6c6"
            ]
        ]
    },
    {
        "id": "50041808f3208548",
        "type": "split",
        "z": "053268593fae8c42",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1650,
        "y": 2400,
        "wires": [
            [
                "9f71b89c95e41a5d"
            ]
        ]
    },
    {
        "id": "baf8ce41441c9d88",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "links": [
            "0fa2c8c468d4d8e5",
            "8368a65f786f7dcd",
            "8df26b2177e029fc",
            "92f10e36cbc8e2ae",
            "cf60302a5d14ae55",
            "fe6676f1a71e7f3c",
            "e6fb258dd75c7fb6"
        ],
        "x": 935,
        "y": 280,
        "wires": [
            [
                "4f18c0fb5a5708dd"
            ]
        ]
    },
    {
        "id": "211ae464662df16b",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "update_latlon",
        "func": "wps = global.get(\"waypoints\");\newp = wps[msg.payload.name]\nif(ewp){\n    ewp.lat = msg.payload.lat;\n    ewp.lon = msg.payload.lon;\n    wps[msg.payload.name] = ewp;\n}\nreturn {\"payload\":ewp};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 960,
        "wires": [
            [
                "c2a1d87a52c8ad5f",
                "073be28f85ca8d84"
            ]
        ]
    },
    {
        "id": "2843237506ede5ef",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "delete_wp",
        "func": "wps = global.get(\"waypoints\");\ndelete wps[msg.payload.name]\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1040,
        "wires": [
            [
                "c2a1d87a52c8ad5f",
                "073be28f85ca8d84"
            ]
        ]
    },
    {
        "id": "92e6032ec1defa71",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "waypoints",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 2360,
        "wires": [
            [
                "e25583298eb669eb"
            ]
        ]
    },
    {
        "id": "9f71b89c95e41a5d",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1770,
        "y": 2400,
        "wires": [
            [
                "137e36108b790425"
            ]
        ]
    },
    {
        "id": "e602c5202df1e782",
        "type": "delay",
        "z": "053268593fae8c42",
        "d": true,
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 150,
        "y": 2060,
        "wires": [
            [
                "37222f493c892ad1"
            ]
        ]
    },
    {
        "id": "ba746c64ba29a192",
        "type": "ui_toast",
        "z": "053268593fae8c42",
        "d": true,
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 470,
        "y": 2060,
        "wires": [
            [
                "d55c1ec10465de34"
            ]
        ]
    },
    {
        "id": "c9cfb47d68f70e8f",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "pw?",
        "property": "pwok",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 900,
        "wires": [
            [
                "10f6a18739e64d25"
            ],
            [
                "c75d8b8be81fe89b"
            ]
        ]
    },
    {
        "id": "fc9170fe8371dff0",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "pw?",
        "property": "pwok",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 1000,
        "wires": [
            [
                "211ae464662df16b"
            ],
            [
                "c75d8b8be81fe89b"
            ]
        ]
    },
    {
        "id": "007b0ba19f255f0f",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "pw?",
        "property": "pwok",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "2843237506ede5ef"
            ],
            [
                "c75d8b8be81fe89b"
            ]
        ]
    },
    {
        "id": "37222f493c892ad1",
        "type": "change",
        "z": "053268593fae8c42",
        "d": true,
        "name": "\"password?\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Enter password to access controls",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 2060,
        "wires": [
            [
                "ba746c64ba29a192"
            ]
        ]
    },
    {
        "id": "65555c354e02cfdc",
        "type": "ui_text_input",
        "z": "053268593fae8c42",
        "name": "pw",
        "label": "password",
        "tooltip": "",
        "group": "102ceb2b72c23b34",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "mode": "password",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 490,
        "y": 2120,
        "wires": [
            [
                "d55c1ec10465de34"
            ]
        ]
    },
    {
        "id": "9d84ea38e5210dd7",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "set pwok true",
        "rules": [
            {
                "t": "set",
                "p": "pwok",
                "pt": "global",
                "to": "true",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Map enabled",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeout_mins",
                "pt": "msg",
                "to": "10",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "draggable",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 2060,
        "wires": [
            [
                "f08a47ed118769f3",
                "624f95947dc58e5f"
            ]
        ]
    },
    {
        "id": "b7c3154386a72406",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "pw check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "map_pw",
                "vt": "global"
            },
            {
                "t": "neq",
                "v": "map_pw",
                "vt": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 2080,
        "wires": [
            [
                "9d84ea38e5210dd7"
            ],
            [
                "3ec3347d6067c419"
            ]
        ]
    },
    {
        "id": "3ec3347d6067c419",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "set pwok false",
        "rules": [
            {
                "t": "set",
                "p": "pwok",
                "pt": "global",
                "to": "false",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Map disabled",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "draggable",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 2100,
        "wires": [
            [
                "bab232ef7fa82868",
                "624f95947dc58e5f"
            ]
        ]
    },
    {
        "id": "be1a5ec559a8edde",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 2000,
        "wires": [
            [
                "d55c1ec10465de34"
            ]
        ]
    },
    {
        "id": "28df211206fb16e0",
        "type": "ui_toast",
        "z": "053268593fae8c42",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1340,
        "y": 2000,
        "wires": []
    },
    {
        "id": "ea43639de7a04cea",
        "type": "ui_button",
        "z": "053268593fae8c42",
        "name": "",
        "group": "102ceb2b72c23b34",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Disable",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-unlink",
        "payload": "false",
        "payloadType": "bool",
        "topic": "enabled",
        "topicType": "msg",
        "x": 480,
        "y": 2160,
        "wires": [
            [
                "0178fd4504665c1a",
                "d55c1ec10465de34"
            ]
        ]
    },
    {
        "id": "c1115a2bf9022cb5",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "timeout",
        "mode": "link",
        "links": [
            "920f18f7fde63004"
        ],
        "x": 1975,
        "y": 2000,
        "wires": []
    },
    {
        "id": "920f18f7fde63004",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "reset pwok",
        "links": [
            "c1115a2bf9022cb5"
        ],
        "x": 785,
        "y": 2120,
        "wires": [
            [
                "3ec3347d6067c419",
                "0178fd4504665c1a"
            ]
        ]
    },
    {
        "id": "e75ec8b1aa81a80d",
        "type": "ui_audio",
        "z": "053268593fae8c42",
        "name": "",
        "group": "52f0dbb4c9ed8309",
        "voice": "urn:moz-tts:sapi:Microsoft Zira Desktop - English (United States)?en-US",
        "always": true,
        "x": 1920,
        "y": 2080,
        "wires": []
    },
    {
        "id": "38e98b260a655b0e",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "\"timeout\"",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "timeout",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 2040,
        "wires": [
            [
                "e75ec8b1aa81a80d"
            ]
        ]
    },
    {
        "id": "2eb52eecf1e71e8b",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "countdown",
        "func": "num_mins = msg.timeout_mins;\nnum_secs = 60 * num_mins;\n\nm = {ui_control:{min:0,max:num_secs}}\nnode.send(m);\n\nglobal.set(\"map_pw_timeleft_secs\", num_secs);\n\n//for(let i=num_secs-1; i>=0; i--){\n//    setTimeout(function(){\n//    m = {\"payload\":i};\n//    node.send(m);\n//    }, (num_secs-i+1)*1000);\n//}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1550,
        "y": 2060,
        "wires": [
            [
                "05340e93def7b266"
            ]
        ]
    },
    {
        "id": "05340e93def7b266",
        "type": "ui_gauge",
        "z": "053268593fae8c42",
        "name": "",
        "group": "102ceb2b72c23b34",
        "order": 3,
        "width": 3,
        "height": 1,
        "gtype": "gage",
        "title": "",
        "label": "s",
        "format": "{{value}}",
        "min": 0,
        "max": "15",
        "colors": [
            "#ff0000",
            "#e6e600",
            "#80ff80"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1690,
        "y": 2040,
        "wires": []
    },
    {
        "id": "6247d3c32514cf3e",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "=0",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1860,
        "y": 2000,
        "wires": [
            [
                "38e98b260a655b0e",
                "c1115a2bf9022cb5"
            ]
        ]
    },
    {
        "id": "029cf5874fd028a5",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "timeleft",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "map_pw_timeleft_secs",
        "payloadType": "global",
        "x": 1560,
        "y": 2020,
        "wires": [
            [
                "05340e93def7b266",
                "a2b3c3a060d22110"
            ]
        ]
    },
    {
        "id": "a2b3c3a060d22110",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "decrement",
        "func": "r = global.get(\"map_pw_timeleft_secs\");\nif(r>=0){\n    r --;\n}\nglobal.set(\"map_pw_timeleft_secs\", r);\n\n\nreturn {\"payload\":r};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 2000,
        "wires": [
            [
                "6247d3c32514cf3e"
            ]
        ]
    },
    {
        "id": "dd9b8ed5c013799a",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "reset timer",
        "rules": [
            {
                "t": "set",
                "p": "map_pw_timeleft_secs",
                "pt": "global",
                "to": "-1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1550,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "1389b54b1ebff7bb",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "set wps draggabiliy",
        "func": "wps = global.get(\"waypoints\");\nnew_wps = {}\nfor(var wp_name in wps){\n    wp = wps[wp_name];\n    wp.draggable = msg.draggable;\n    new_wps[wp_name] = wp;\n}\nglobal.set(\"waypoints\", new_wps);\nreturn {\"payload\":new_wps}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 2420,
        "wires": [
            [
                "50041808f3208548"
            ]
        ]
    },
    {
        "id": "9445ca58a93ea152",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "ask_pw_popup",
        "links": [
            "c75d8b8be81fe89b"
        ],
        "x": 35,
        "y": 2080,
        "wires": [
            [
                "e602c5202df1e782",
                "d55c1ec10465de34"
            ]
        ]
    },
    {
        "id": "c75d8b8be81fe89b",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "9445ca58a93ea152"
        ],
        "x": 615,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f08a47ed118769f3",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "pwok_true",
        "mode": "link",
        "links": [
            "891af3daa0ae6f90",
            "0ab91e732def560c",
            "8de80de2eabfe326",
            "f682e02af47e8b56",
            "90a0dda9096a59fd",
            "0acc7386f78be75f",
            "2a5ad2f755ea0b9a",
            "0e046a83464d2a91",
            "735db8bb0cd0a42f",
            "d7c13a8b2c014042"
        ],
        "x": 1035,
        "y": 2040,
        "wires": []
    },
    {
        "id": "891af3daa0ae6f90",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "f08a47ed118769f3"
        ],
        "x": 1445,
        "y": 2060,
        "wires": [
            [
                "2eb52eecf1e71e8b"
            ]
        ]
    },
    {
        "id": "8de80de2eabfe326",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "f08a47ed118769f3"
        ],
        "x": 1125,
        "y": 2060,
        "wires": [
            [
                "e4507c760789e21f"
            ]
        ]
    },
    {
        "id": "f682e02af47e8b56",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "f08a47ed118769f3"
        ],
        "x": 1265,
        "y": 2400,
        "wires": [
            [
                "1389b54b1ebff7bb"
            ]
        ]
    },
    {
        "id": "bab232ef7fa82868",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "pwok_false",
        "mode": "link",
        "links": [
            "94dda05906aa624f",
            "22f5e52f436484c1",
            "51cb8dbb280a964e",
            "166e37e5141398e1",
            "38461b3fb77e1eb1",
            "3af2c4de239a81f6",
            "0e046a83464d2a91",
            "306a265baa490b08",
            "5f71a25149b27072"
        ],
        "x": 1045,
        "y": 2120,
        "wires": []
    },
    {
        "id": "94dda05906aa624f",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "bab232ef7fa82868"
        ],
        "x": 1265,
        "y": 2440,
        "wires": [
            [
                "1389b54b1ebff7bb"
            ]
        ]
    },
    {
        "id": "22f5e52f436484c1",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "bab232ef7fa82868"
        ],
        "x": 1445,
        "y": 2100,
        "wires": [
            [
                "dd9b8ed5c013799a"
            ]
        ]
    },
    {
        "id": "51cb8dbb280a964e",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "bab232ef7fa82868"
        ],
        "x": 1125,
        "y": 2100,
        "wires": [
            [
                "e4507c760789e21f"
            ]
        ]
    },
    {
        "id": "3f1101a0eff94520",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "select wp",
        "func": "wps = global.get(\"waypoints\");\nwp = wps[msg.payload.name];\n\nif(wp){\n    gs = global.get(\"gui_state\")\n    gs.selected_wp = wp\n    return {selected:wp.name}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1180,
        "wires": [
            [
                "5e8a7b5813f43e9e"
            ]
        ]
    },
    {
        "id": "214ac3ccca3f6176",
        "type": "ui_form",
        "z": "053268593fae8c42",
        "name": "",
        "label": "WP Info",
        "group": "9dbddaa8775473fd",
        "order": 2,
        "width": 4,
        "height": 1,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Depth",
                "value": "depth",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Spd | RPM",
                "value": "speed_control_mode",
                "type": "switch",
                "required": true,
                "rows": null
            },
            {
                "label": "Speed",
                "value": "speed",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "RPM",
                "value": "rpm",
                "type": "number",
                "required": false,
                "rows": null
            },
            {
                "label": "lat,lon",
                "value": "lat_lon",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "depth": "",
            "speed_control_mode": false,
            "speed": "",
            "rpm": "",
            "lat_lon": ""
        },
        "payload": "",
        "submit": "Save",
        "cancel": "Clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 1520,
        "y": 1160,
        "wires": [
            [
                "77ca400a3f744748"
            ]
        ]
    },
    {
        "id": "fc3e3c9d40e35894",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "fill_wp_form",
        "func": "wps = global.get(\"waypoints\");\nswp = wps[msg.payload]\n\n\nif(swp){\n  form = {\n    \"name\":swp.name,\n    \"speed\":swp.travel_speed,\n    \"rpm\":swp.travel_rpm,\n    \"speed_control_mode\":swp.speed_control_mode==1,\n    \"depth\":swp.travel_depth,\n    \"lat_lon\":swp.lat+\",\"+swp.lon\n    };  \n\n}else{\n    form = {\n    \"name\":\"unknown\",\n    \"speed\":0,\n    \"rpm\":0,\n    \"speed_control_mode\":0,\n    \"depth\":0,\n    \"lat_lon\":\"0,0\"\n    };\n}\n\nm = {\"payload\":form}\nreturn m",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1140,
        "wires": [
            [
                "214ac3ccca3f6176"
            ]
        ]
    },
    {
        "id": "c30f35ff507bcc2d",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "check pw",
        "props": [
            {
                "p": "enabled",
                "v": "pwok",
                "vt": "global"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1250,
        "y": 1180,
        "wires": [
            [
                "0641aa72216c69a0"
            ]
        ]
    },
    {
        "id": "0641aa72216c69a0",
        "type": "rbe",
        "z": "053268593fae8c42",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "enabled",
        "topi": "topic",
        "x": 1390,
        "y": 1180,
        "wires": [
            [
                "214ac3ccca3f6176"
            ]
        ]
    },
    {
        "id": "77ca400a3f744748",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "update wp details",
        "func": "wps = global.get(\"waypoints\");\newp = wps[msg.payload.name]\n\n\nif(ewp){\n    ewp.travel_depth = msg.payload.depth;\n    ewp.travel_rpm = msg.payload.rpm;\n    ewp.travel_speed = msg.payload.speed;\n    if(msg.payload.speed_control_mode){\n        ewp.speed_control_mode = 1 //rpm\n    }else{\n        ewp.speed_control_mode = 2 //m/s\n    }\n    // parse the lat lon into separate fields\n    latlon_list = msg.payload.lat_lon.split(\",\")\n    ewp.lat = parseFloat(latlon_list[0])\n    ewp.lon = parseFloat(latlon_list[1])\n    \n    \n    \n    wps[msg.payload.name] = ewp;\n}\nreturn {\"payload\":ewp.name};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 1200,
        "wires": [
            [
                "a4d0edd5f6d3f0a0",
                "584b9c424a1e9278"
            ]
        ]
    },
    {
        "id": "834ba7b8da81e656",
        "type": "ui_audio",
        "z": "053268593fae8c42",
        "name": "",
        "group": "52f0dbb4c9ed8309",
        "voice": "urn:moz-tts:sapi:Microsoft Zira Desktop - English (United States)?en-US",
        "always": "",
        "x": 1280,
        "y": 2120,
        "wires": []
    },
    {
        "id": "3af2c4de239a81f6",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "bab232ef7fa82868"
        ],
        "x": 35,
        "y": 2120,
        "wires": [
            [
                "6a6e48514015c5df"
            ]
        ]
    },
    {
        "id": "72ed74f562cb318d",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "empty payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 2120,
        "wires": [
            [
                "65555c354e02cfdc"
            ]
        ]
    },
    {
        "id": "06a8c629f9645980",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "deploy",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 2160,
        "wires": [
            [
                "72ed74f562cb318d"
            ]
        ]
    },
    {
        "id": "203068020888ce36",
        "type": "ui_dropdown",
        "z": "053268593fae8c42",
        "name": "",
        "label": "",
        "tooltip": "Select a WP to modify the details of",
        "place": "Select WP",
        "group": "9dbddaa8775473fd",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1340,
        "y": 1100,
        "wires": [
            [
                "fc3e3c9d40e35894",
                "ed39d8735dea7a7d"
            ]
        ]
    },
    {
        "id": "c943b10b45b886d8",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "list wp names",
        "func": "wps = global.get(\"waypoints\");\nreturn {\"options\":Object.keys(wps)};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1060,
        "wires": [
            [
                "203068020888ce36"
            ]
        ]
    },
    {
        "id": "74385683b57e28cf",
        "type": "delay",
        "z": "053268593fae8c42",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1230,
        "y": 1020,
        "wires": [
            [
                "c943b10b45b886d8"
            ]
        ]
    },
    {
        "id": "dbfd8356d288e016",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "save_wps",
        "links": [
            "a4d0edd5f6d3f0a0",
            "c2a1d87a52c8ad5f",
            "e25583298eb669eb",
            "f361f910baa3973e"
        ],
        "x": 845,
        "y": 1020,
        "wires": [
            [
                "76e6c4863dc8bccd"
            ]
        ]
    },
    {
        "id": "dd7344e296dcc72d",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "make_wp_icon",
        "links": [
            "137e36108b790425",
            "5e8a7b5813f43e9e",
            "a4d0edd5f6d3f0a0",
            "c2a1d87a52c8ad5f",
            "f361f910baa3973e",
            "08be73627b96f7a9"
        ],
        "x": 45,
        "y": 100,
        "wires": [
            [
                "63e3ec36451352d2"
            ]
        ]
    },
    {
        "id": "c2a1d87a52c8ad5f",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "dbfd8356d288e016",
            "dd7344e296dcc72d"
        ],
        "x": 675,
        "y": 960,
        "wires": []
    },
    {
        "id": "a4d0edd5f6d3f0a0",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "dbfd8356d288e016",
            "dd7344e296dcc72d"
        ],
        "x": 1695,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e25583298eb669eb",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "dbfd8356d288e016"
        ],
        "x": 1855,
        "y": 2360,
        "wires": []
    },
    {
        "id": "137e36108b790425",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "dd7344e296dcc72d"
        ],
        "x": 1855,
        "y": 2400,
        "wires": []
    },
    {
        "id": "0683e325bc09b55b",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "read_wp_db",
        "links": [
            "624f95947dc58e5f"
        ],
        "x": 1365,
        "y": 2320,
        "wires": [
            [
                "7964fafb17064262"
            ]
        ]
    },
    {
        "id": "624f95947dc58e5f",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "0683e325bc09b55b"
        ],
        "x": 1085,
        "y": 2080,
        "wires": []
    },
    {
        "id": "264b9e88b1732183",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "tracks",
        "links": [
            "30e3822ebf7d0303",
            "c5d05a53263ed5f1",
            "8044d7b5c55205ac",
            "7b64e449f6226ff4",
            "09e56f333fdbfc2d",
            "5d5faa63758bafc3"
        ],
        "x": 625,
        "y": 80,
        "wires": [
            [
                "1c9e33661e87e2a3"
            ]
        ]
    },
    {
        "id": "e4507c760789e21f",
        "type": "delay",
        "z": "053268593fae8c42",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "0.5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1240,
        "y": 2080,
        "wires": [
            [
                "834ba7b8da81e656",
                "fe4d43a455cf7caa"
            ]
        ]
    },
    {
        "id": "2c83add42a3bdde3",
        "type": "split",
        "z": "053268593fae8c42",
        "name": "split vehicles",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "vehicle_name",
        "x": 210,
        "y": 360,
        "wires": [
            [
                "7f2cc14f03a77094",
                "f1433ab5d1a6ece3"
            ]
        ]
    },
    {
        "id": "520daee9221efb72",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "vehicles",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "vehicles",
        "payloadType": "global",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "2c83add42a3bdde3"
            ]
        ]
    },
    {
        "id": "7f2cc14f03a77094",
        "type": "split",
        "z": "053268593fae8c42",
        "name": "split veh. fields",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "key",
        "x": 260,
        "y": 400,
        "wires": [
            [
                "2cc25083356d8871"
            ]
        ]
    },
    {
        "id": "2cc25083356d8871",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "basic_state",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "gps_fix",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bt_state",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 460,
        "wires": [
            [
                "54110e815560e134"
            ],
            [
                "0e72ec8eee3e7b51"
            ],
            [
                "56b9b2bbfe507431"
            ]
        ]
    },
    {
        "id": "c00d8f6aa8f79659",
        "type": "ui_switch",
        "z": "053268593fae8c42",
        "name": "",
        "label": "Follow vehicle",
        "tooltip": "Re-center the map on the vehicle as it moves around",
        "group": "102ceb2b72c23b34",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 740,
        "y": 400,
        "wires": [
            [
                "b403e35eb5cac8c3"
            ]
        ]
    },
    {
        "id": "0aa6bd7787fe04f0",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "center_map_on_vehicle",
        "func": "vs = global.get(\"vehicles\");\nname = global.get(\"active_vehicle\");\nif(name in vs){\n    v = vs[name];\n    m = {\"payload\": {\n        \"command\":{\n            \"lat\": v.basic_state.lat,\n            \"lon\": v.basic_state.lon\n        }\n    }}\n    return m;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 400,
        "wires": [
            [
                "a695f0fb45d734a0"
            ]
        ]
    },
    {
        "id": "b403e35eb5cac8c3",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 890,
        "y": 400,
        "wires": [
            [
                "0aa6bd7787fe04f0"
            ]
        ]
    },
    {
        "id": "54110e815560e134",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "lat>0?",
        "property": "payload.lat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0.05",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 420,
        "wires": [
            [
                "c00d8f6aa8f79659",
                "0fa2c8c468d4d8e5",
                "5d5faa63758bafc3"
            ]
        ]
    },
    {
        "id": "0fa2c8c468d4d8e5",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "mode": "link",
        "links": [
            "baf8ce41441c9d88"
        ],
        "x": 675,
        "y": 460,
        "wires": []
    },
    {
        "id": "f1d43b7ac71a7066",
        "type": "rbe",
        "z": "053268593fae8c42",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 590,
        "y": 500,
        "wires": [
            [
                "0fa2c8c468d4d8e5",
                "5d5faa63758bafc3"
            ]
        ]
    },
    {
        "id": "0e72ec8eee3e7b51",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "lat>0?",
        "property": "payload.lat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0.05",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 500,
        "wires": [
            [
                "f1d43b7ac71a7066"
            ]
        ]
    },
    {
        "id": "8368a65f786f7dcd",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "mode": "link",
        "links": [
            "baf8ce41441c9d88"
        ],
        "x": 1415,
        "y": 400,
        "wires": []
    },
    {
        "id": "a695f0fb45d734a0",
        "type": "delay",
        "z": "053268593fae8c42",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 1300,
        "y": 400,
        "wires": [
            [
                "8368a65f786f7dcd"
            ]
        ]
    },
    {
        "id": "1c9ea8600fae7e05",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "enable/disable marker r-click",
        "func": "pwok = global.get(\"pwok\");\nmsg.payload = {\"command\":{\n    \"hiderightclick\":!pwok,\n}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 2140,
        "wires": [
            [
                "cf60302a5d14ae55"
            ]
        ]
    },
    {
        "id": "0e046a83464d2a91",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "bab232ef7fa82868",
            "f08a47ed118769f3"
        ],
        "x": 1445,
        "y": 2140,
        "wires": [
            [
                "1c9ea8600fae7e05"
            ]
        ]
    },
    {
        "id": "cf60302a5d14ae55",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "mode": "link",
        "links": [
            "baf8ce41441c9d88"
        ],
        "x": 1755,
        "y": 2140,
        "wires": []
    },
    {
        "id": "0f02de0042b627c1",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "->name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1140,
        "wires": [
            [
                "fc3e3c9d40e35894"
            ]
        ]
    },
    {
        "id": "f1433ab5d1a6ece3",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "line to current_wp",
        "func": "basic_s = msg.payload.basic_state\nbt_s = msg.payload.bt_state\n\nname = basic_s.name\np1 = [basic_s.lat, basic_s.lon]\ntry{\n    p2 = [bt_s.current_wp.lat, bt_s.current_wp.lon]\n}catch{\n    return\n}\n\nline = {name:name + \"_target\",\n        layer: basic_s.layer,\n        line:[p1,p2],\n        color:\"orange\",\n        weight:2.5,\n        editable:false,\n        clickable:false,\n        dashArray:\"1,8\"\n}\n\nreturn {payload:line}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 320,
        "wires": [
            [
                "8df26b2177e029fc"
            ]
        ]
    },
    {
        "id": "8df26b2177e029fc",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "mode": "link",
        "links": [
            "baf8ce41441c9d88"
        ],
        "x": 515,
        "y": 320,
        "wires": []
    },
    {
        "id": "5d6d95ba2130c00a",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "make_waypoint_icon",
        "func": "var icon = \"fa-eject\";\nif(msg.payload.travel_depth > 0){\n   icon = \"fa-arrow-down\";\n}\nif(msg.payload.travel_depth < 0){\n   icon = \"fa-arrow-up\";\n}\nif(msg.payload.travel_depth == 0){\n   icon = \"fa-strikethrough\";\n}\n\npopup = \"\"\nif(msg.payload.speed_control_mode == 1){\n    popup += msg.payload.travel_rpm + \" RPM<br>\"\n}else{\n    popup += msg.payload.travel_speed + \"m/s<br>\"\n}\n\nif(msg.payload.z_control_mode == 1){\n    popup += msg.payload.travel_depth + \" m depth<br>\"\n}else{\n    popup += msg.payload.travel_altitude + \" m altitude<br>\"\n}\n\n\ncolor = \"yellow\"\ngs = global.get(\"gui_state\");\nif(msg.payload.name == gs.selected_wp.name){\n   color = \"cyan\"\n}\n\n\nvar m = {\n    name:msg.payload.name,\n    label:msg.payload.name,\n    iconColor:color,\n    icon:icon,\n    draggable:true,\n    layer:\"Waypoints\",\n    lat:msg.payload.lat,\n    lon:msg.payload.lon,\n    depth:msg.payload.travel_depth,\n    alti:msg.payload.travel_altitude,\n    speed:msg.payload.travel_speed,\n    rpms:msg.payload.travel_rpm,\n    popup:popup,\n    popped:false\n}\n\nreturn {payload:m};\n    \n    ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            [
                "4f18c0fb5a5708dd"
            ]
        ]
    },
    {
        "id": "9f822780235be5cc",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "waypoints",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "waypoints",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 100,
        "wires": [
            [
                "d0142bd7055ffa41"
            ]
        ]
    },
    {
        "id": "d0142bd7055ffa41",
        "type": "split",
        "z": "053268593fae8c42",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "a52d314697435418"
            ]
        ]
    },
    {
        "id": "5e8a7b5813f43e9e",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "dd7344e296dcc72d"
        ],
        "x": 535,
        "y": 1180,
        "wires": []
    },
    {
        "id": "22b33628c3c58200",
        "type": "ui_toast",
        "z": "053268593fae8c42",
        "position": "top right",
        "displayTime": "2",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "\"already exists\"",
        "x": 720,
        "y": 860,
        "wires": []
    },
    {
        "id": "a52d314697435418",
        "type": "rbe",
        "z": "053268593fae8c42",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 350,
        "y": 180,
        "wires": [
            [
                "5d6d95ba2130c00a"
            ]
        ]
    },
    {
        "id": "3c852826087dd02f",
        "type": "ui_switch",
        "z": "053268593fae8c42",
        "name": "plnng mode",
        "label": "Planning Mode",
        "tooltip": "ON: Clicking on the map will add the WP to the currently selected mission plan",
        "group": "574bd822e17b1c3f",
        "order": 9,
        "width": 7,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1270,
        "y": 1860,
        "wires": [
            [
                "54592d18da8ed258"
            ]
        ]
    },
    {
        "id": "54592d18da8ed258",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "set G planning mode",
        "rules": [
            {
                "t": "set",
                "p": "gui_state.planning_mode",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "32bd8cc69fc20aed",
        "type": "ui_list",
        "z": "053268593fae8c42",
        "group": "574bd822e17b1c3f",
        "name": "list of plans",
        "order": 6,
        "width": 7,
        "height": 5,
        "lineType": "three",
        "actionType": "click",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1350,
        "y": 1640,
        "wires": [
            [
                "9a013e31e30e32c9"
            ]
        ]
    },
    {
        "id": "ce5e1970adcba729",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "List mission plans",
        "func": "list = []\nplans = global.get(\"mission_plans\")\ng_wps = global.get(\"waypoints\")\ngui_state = global.get(\"gui_state\")\nselected_name = gui_state.selected_plan.name\n\nfor(const name in plans){\n    p = plans[name]\n    plan_item = {title:name}\n    if(selected_name == name){\n        plan_item.icon_name = 'fa-eye'\n    }\n    wp_names = p.wp_names\n    descr = \"\"\n    for(const wp_id in wp_names){\n        if(wp_id > 0){\n            descr += \" -> \"\n        }\n        try{\n            descr += g_wps[wp_names[wp_id]].name\n        }catch{\n            descr += wp_names[wp_id] + \"(?)\"\n        }\n    }\n    plan_item.description = descr\n    list.push(plan_item)\n}\nreturn {payload:list}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1640,
        "wires": [
            [
                "32bd8cc69fc20aed"
            ]
        ]
    },
    {
        "id": "9a013e31e30e32c9",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "select and return plan",
        "func": "gs = global.get(\"gui_state\")\nmplans = global.get(\"mission_plans\")\nmplan = mplans[msg.payload.title]\ngs.selected_plan = mplan\n\nreturn {payload:mplan}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1640,
        "wires": [
            [
                "eb83eaebf50e928f"
            ]
        ]
    },
    {
        "id": "975505ece598254d",
        "type": "ui_text",
        "z": "053268593fae8c42",
        "group": "574bd822e17b1c3f",
        "order": 1,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Selected plan:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1420,
        "y": 1700,
        "wires": []
    },
    {
        "id": "3ec0329f836e4cca",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "nameof",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 1680,
        "wires": [
            [
                "975505ece598254d"
            ]
        ]
    },
    {
        "id": "8274f86612af6ff5",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "draw selected plan on map",
        "func": "wps = global.get(\"waypoints\")\nplans = global.get(\"mission_plans\")\ngui_state = global.get(\"gui_state\")\nif(!(gui_state.selected_plan)){\n    return null\n}\nplan = plans[gui_state.selected_plan.name]\n\nif(plan){\n    pts = []\n    for(const i in plan.wp_names){\n        wp_name = plan.wp_names[i]\n        wp = wps[wp_name]\n        try{\n            pts.push([wp.lat, wp.lon])\n        }catch{\n            // eh...\n        }\n    }\n    line = {name:\"selected_plan\",\n            layer:\"MissionPlan\",\n            line:pts,\n            color:\"cyan\",\n            weight:2.5,\n            editable:false,\n            clickable:false,\n            dashArray:\"5,5\"\n    }\n    \n    return {payload:line}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1600,
        "wires": [
            [
                "92f10e36cbc8e2ae"
            ]
        ]
    },
    {
        "id": "92f10e36cbc8e2ae",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "mode": "link",
        "links": [
            "baf8ce41441c9d88"
        ],
        "x": 1355,
        "y": 1600,
        "wires": []
    },
    {
        "id": "a947c2e94adb46a7",
        "type": "ui_button",
        "z": "053268593fae8c42",
        "name": "",
        "group": "574bd822e17b1c3f",
        "order": 7,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "New plan",
        "tooltip": "Create a new empty mission plan, use planning mode to add WPs to it",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-map",
        "payload": "Enter a name for the new plan",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 1560,
        "wires": [
            [
                "c13b50f1d69e6267"
            ]
        ]
    },
    {
        "id": "24c5c8426e0521dd",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "add empty mission plan",
        "func": "plans = global.get(\"mission_plans\")\n\nplans[msg.payload] = {    \n    name:msg.payload,\n    wp_names:[]\n}\n\nreturn {payload:null}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1640,
        "wires": [
            [
                "cc670b3fea45f7f4"
            ]
        ]
    },
    {
        "id": "5d4b8e531a20c041",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "deploy",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.2",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 1680,
        "wires": [
            [
                "cc670b3fea45f7f4"
            ]
        ]
    },
    {
        "id": "c13b50f1d69e6267",
        "type": "ui_toast",
        "z": "053268593fae8c42",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 230,
        "y": 1600,
        "wires": [
            [
                "17e186169ef4980f"
            ]
        ]
    },
    {
        "id": "17e186169ef4980f",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 1600,
        "wires": [
            [],
            [
                "f011eaacb0688e5c"
            ]
        ]
    },
    {
        "id": "02bb6feb11b95e75",
        "type": "ui_list",
        "z": "053268593fae8c42",
        "group": "574bd822e17b1c3f",
        "name": "list of wps",
        "order": 10,
        "width": 7,
        "height": 9,
        "lineType": "three",
        "actionType": "menu",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1340,
        "y": 1560,
        "wires": [
            [
                "41b5dfe833d95518"
            ]
        ]
    },
    {
        "id": "80d32b7e64a0e969",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "make waypoint list",
        "func": "gs = global.get(\"gui_state\")\nif(!(gs.selected_plan)){\n    return null\n}\n\ngwps = global.get(\"waypoints\")\nswp_names = gs.selected_plan.wp_names\n\nlist_items = []\n\nfor(var i in swp_names){\n    wp_name = swp_names[i]\n    wp = gwps[wp_name]\n    \n    // title needs to be unique, otherwise\n    // we cant distinguish between repeated WPs in a plan\n    title = i + \" : \" + wp_name\n    \n    if(wp){\n        if(wp.travel_depth > 0){\n            icon = \"fa-arrow-down\";\n        }\n        if(wp.travel_depth < 0){\n            icon = \"fa-arrow-up\";\n        }\n        if(wp.travel_depth == 0){\n            icon = \"fa-strikethrough\";\n        }\n        \n        if(wp.speed_control_mode == 1){\n            descr = wp.travel_rpm + \" RPM, \"\n        }else{\n            descr = wp.travel_speed + \"m/s, \"\n        }\n        \n        if(wp.z_control_mode == 1){\n            descr +=wp.travel_depth + \" m depth\"\n        }else{\n            descr += wp.travel_altitude + \" m alti\"\n        }\n        \n        wp_item = {\n            title:title,\n            description:descr,\n            icon_name:icon\n        }\n    }else{\n        wp_item = {\n            title:title+\"(?)\",\n            description:\"unknown wp\",\n            icon_name:\"fa-question\"\n        }\n    }\n    wp_item.menu = [\"Delete\", \"Move up\", \"Move down\"]\n    list_items.push(wp_item)\n}\n\nreturn {payload:list_items}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 1560,
        "wires": [
            [
                "02bb6feb11b95e75"
            ]
        ]
    },
    {
        "id": "efb303bf3091ae28",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "planning mode?",
        "property": "gui_state.planning_mode",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 460,
        "y": 1220,
        "wires": [
            [
                "38892f3fc3f9c01f"
            ]
        ]
    },
    {
        "id": "38892f3fc3f9c01f",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "add wp to selected plan",
        "func": "wps = global.get(\"waypoints\")\nwp = wps[msg.payload.name]\n\ngs = global.get(\"gui_state\")\n\nnode.warn(\"adding wp?\")\ngs.selected_plan.wp_names.push(wp.name)\n\n\nreturn {payload:gs.selected_plan.name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1220,
        "wires": [
            [
                "23cae1380a7e60df"
            ]
        ]
    },
    {
        "id": "54fb9d3ca092bf2f",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "deploy",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "enabled",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "false",
        "payloadType": "jsonata",
        "x": 1110,
        "y": 1860,
        "wires": [
            [
                "3c852826087dd02f",
                "d27bc1c16d11bdae"
            ]
        ]
    },
    {
        "id": "41b5dfe833d95518",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "modify plan",
        "func": "parts = msg.payload.title.split(\" : \")\nindex = parseInt(parts[0])\nname = parts[1]\n\n\naction = msg.payload.selected\n\ngui_state = global.get(\"gui_state\")\nselected_plan = gui_state.selected_plan\n\naffected_wp_name = selected_plan.wp_names[0]\n\nswitch(action){\n    case \"Delete\":\n        deleted = selected_plan.wp_names.splice(index,1)\n        break\n    case \"Move up\":\n        // swap with index-1\n        if(index >= 1){\n            temp = selected_plan.wp_names[index-1]\n            selected_plan.wp_names[index-1] = selected_plan.wp_names[index]\n            selected_plan.wp_names[index] = temp\n        }\n        break\n    case \"Move down\":\n        // swap with index+1\n        if(index < selected_plan.wp_names.length){\n            temp = selected_plan.wp_names[index+1]\n            selected_plan.wp_names[index+1] = selected_plan.wp_names[index]\n            selected_plan.wp_names[index] = temp\n        }\n        break\n}\n\nreturn {payload:null}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 1560,
        "wires": [
            [
                "154fa47a92c360fa"
            ]
        ]
    },
    {
        "id": "f5866b2daa9f585f",
        "type": "comment",
        "z": "053268593fae8c42",
        "name": "this prevents an infinte loop?",
        "info": "",
        "x": 1280,
        "y": 980,
        "wires": []
    },
    {
        "id": "3bb272bc24f28449",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "update_plans_in_gui",
        "links": [
            "23cae1380a7e60df",
            "154fa47a92c360fa",
            "eb83eaebf50e928f",
            "cc670b3fea45f7f4",
            "c23cb78714756aea",
            "073be28f85ca8d84",
            "584b9c424a1e9278",
            "9219571f4cc06895"
        ],
        "x": 1025,
        "y": 1660,
        "wires": [
            [
                "80d32b7e64a0e969",
                "8274f86612af6ff5",
                "ce5e1970adcba729",
                "10ae7fa4e2f02829",
                "fc28244fe5dc2758"
            ]
        ]
    },
    {
        "id": "23cae1380a7e60df",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "3bb272bc24f28449",
            "cfae73f99e2134fa"
        ],
        "x": 815,
        "y": 1220,
        "wires": []
    },
    {
        "id": "154fa47a92c360fa",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "3bb272bc24f28449",
            "cfae73f99e2134fa"
        ],
        "x": 1595,
        "y": 1560,
        "wires": []
    },
    {
        "id": "eb83eaebf50e928f",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "3bb272bc24f28449",
            "cfae73f99e2134fa"
        ],
        "x": 1705,
        "y": 1640,
        "wires": []
    },
    {
        "id": "cc670b3fea45f7f4",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "3bb272bc24f28449",
            "cfae73f99e2134fa"
        ],
        "x": 815,
        "y": 1660,
        "wires": []
    },
    {
        "id": "bbdcfc8d9896be61",
        "type": "ui_button",
        "z": "053268593fae8c42",
        "name": "",
        "group": "574bd822e17b1c3f",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-trash",
        "payload": "Are you sure?",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 1800,
        "wires": [
            [
                "2587760c6ccd7ee9"
            ]
        ]
    },
    {
        "id": "2587760c6ccd7ee9",
        "type": "ui_toast",
        "z": "053268593fae8c42",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Yes",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 290,
        "y": 1840,
        "wires": [
            [
                "f78ba83f81dcab8b"
            ]
        ]
    },
    {
        "id": "f78ba83f81dcab8b",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 1840,
        "wires": [
            [],
            [
                "6b8ed8a3ec84bf81"
            ]
        ]
    },
    {
        "id": "6b8ed8a3ec84bf81",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "delete selected plan",
        "func": "plans = global.get(\"mission_plans\")\ngui_state = global.get(\"gui_state\")\nselected = gui_state.selected_plan\n\ngui_state.selected_plan = null\ndelete plans[selected.name]\n\nreturn {payload:null}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1880,
        "wires": [
            [
                "c23cb78714756aea"
            ]
        ]
    },
    {
        "id": "c23cb78714756aea",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "3bb272bc24f28449",
            "cfae73f99e2134fa"
        ],
        "x": 675,
        "y": 1880,
        "wires": []
    },
    {
        "id": "10ae7fa4e2f02829",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 1700,
        "wires": [
            [
                "3ec0329f836e4cca"
            ],
            [
                "e0d54c26f2a24952"
            ]
        ]
    },
    {
        "id": "e0d54c26f2a24952",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "none",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "<NONE>",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 1720,
        "wires": [
            [
                "975505ece598254d"
            ]
        ]
    },
    {
        "id": "073be28f85ca8d84",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "3bb272bc24f28449"
        ],
        "x": 675,
        "y": 1020,
        "wires": []
    },
    {
        "id": "584b9c424a1e9278",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "3bb272bc24f28449",
            "cfae73f99e2134fa"
        ],
        "x": 1695,
        "y": 1220,
        "wires": []
    },
    {
        "id": "f011eaacb0688e5c",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "mission_plans",
        "propertyType": "global",
        "rules": [
            {
                "t": "hask",
                "v": "payload",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1640,
        "wires": [
            [
                "4240a0e4c4ab6663"
            ],
            [
                "24c5c8426e0521dd"
            ]
        ]
    },
    {
        "id": "4240a0e4c4ab6663",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "Reset plan?",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Reset plan?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 1520,
        "wires": [
            [
                "abd8e5c1d6660c95"
            ]
        ]
    },
    {
        "id": "abd8e5c1d6660c95",
        "type": "ui_toast",
        "z": "053268593fae8c42",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Reset plan",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 550,
        "y": 1560,
        "wires": [
            [
                "967894d02181c3ab"
            ]
        ]
    },
    {
        "id": "967894d02181c3ab",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Cancel",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1600,
        "wires": [
            [],
            [
                "24c5c8426e0521dd"
            ]
        ]
    },
    {
        "id": "50bcdfd5a4dd1e73",
        "type": "key-value-write",
        "z": "053268593fae8c42",
        "store": "99b5f7c7e1f62814",
        "action": "set",
        "key": "mission_plans",
        "keyvalue": "",
        "name": "save plans",
        "x": 1270,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "d27bc1c16d11bdae",
        "type": "key-value-read",
        "z": "053268593fae8c42",
        "store": "99b5f7c7e1f62814",
        "key": "mission_plans",
        "name": "read plans",
        "x": 1270,
        "y": 1820,
        "wires": [
            [
                "e1628432fd9095d1"
            ]
        ]
    },
    {
        "id": "e1628432fd9095d1",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "set mission plans",
        "rules": [
            {
                "t": "set",
                "p": "mission_plans",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1450,
        "y": 1820,
        "wires": [
            [
                "9219571f4cc06895"
            ]
        ]
    },
    {
        "id": "9219571f4cc06895",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "3bb272bc24f28449",
            "cfae73f99e2134fa"
        ],
        "x": 1575,
        "y": 1820,
        "wires": []
    },
    {
        "id": "fc28244fe5dc2758",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "plans",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mission_plans",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 1760,
        "wires": [
            [
                "50bcdfd5a4dd1e73"
            ]
        ]
    },
    {
        "id": "6be233359c49e07c",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "7f714df460627f98",
            "69e7c18a81f1b55b"
        ],
        "x": 65,
        "y": 1560,
        "wires": [
            [
                "a947c2e94adb46a7"
            ]
        ]
    },
    {
        "id": "80d6287c45de6bfd",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "7f714df460627f98",
            "69e7c18a81f1b55b"
        ],
        "x": 165,
        "y": 1800,
        "wires": [
            [
                "bbdcfc8d9896be61"
            ]
        ]
    },
    {
        "id": "57522fb44699f76c",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "7f714df460627f98",
            "69e7c18a81f1b55b"
        ],
        "x": 1145,
        "y": 1900,
        "wires": [
            [
                "3c852826087dd02f"
            ]
        ]
    },
    {
        "id": "3a1f387033d536c4",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "08424e560c7a93a0",
            "3689a5d35bef9b91"
        ],
        "x": 1245,
        "y": 1520,
        "wires": [
            [
                "02bb6feb11b95e75"
            ]
        ]
    },
    {
        "id": "43d1411ba4b74c6a",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "disable on startup",
        "props": [
            {
                "p": "enabled",
                "v": "false",
                "vt": "jsonata"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "jsonata",
        "x": 390,
        "y": 2440,
        "wires": [
            [
                "69e7c18a81f1b55b"
            ]
        ]
    },
    {
        "id": "b58b554b9b7f6d41",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "check",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 2380,
        "wires": [
            [
                "f7a8f0eb207edea5"
            ]
        ]
    },
    {
        "id": "f7a8f0eb207edea5",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "pw?",
        "property": "pwok",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 2380,
        "wires": [
            [
                "25340677e61fe9f8"
            ],
            [
                "ea15ee49ae9cef2d"
            ]
        ]
    },
    {
        "id": "25340677e61fe9f8",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2360,
        "wires": [
            [
                "69e7c18a81f1b55b"
            ]
        ]
    },
    {
        "id": "ea15ee49ae9cef2d",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "disable, turn off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 2400,
        "wires": [
            [
                "69e7c18a81f1b55b"
            ]
        ]
    },
    {
        "id": "69e7c18a81f1b55b",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "password_enable/disable buttons",
        "mode": "link",
        "links": [
            "57522fb44699f76c",
            "6be233359c49e07c",
            "80d6287c45de6bfd",
            "263274d293ee9948",
            "0524ef035c7f07a6",
            "e8e2232722bf1c53",
            "31078d5c1f2c258e",
            "621f6f51348de540",
            "52a61453cb205ade"
        ],
        "x": 555,
        "y": 2400,
        "wires": []
    },
    {
        "id": "3689a5d35bef9b91",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "password_enable/disable forms",
        "mode": "link",
        "links": [
            "3a1f387033d536c4"
        ],
        "x": 1055,
        "y": 2180,
        "wires": []
    },
    {
        "id": "83e804f15e3b47ed",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "deploy",
        "props": [
            {
                "p": "enabled",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 710,
        "y": 2220,
        "wires": [
            [
                "0178fd4504665c1a"
            ]
        ]
    },
    {
        "id": "d7c13a8b2c014042",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "",
        "links": [
            "f08a47ed118769f3"
        ],
        "x": 825,
        "y": 2220,
        "wires": [
            [
                "bf0893aa3153bd28"
            ]
        ]
    },
    {
        "id": "0178fd4504665c1a",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "enabled false",
        "func": "return {enabled:false}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2180,
        "wires": [
            [
                "3689a5d35bef9b91"
            ]
        ]
    },
    {
        "id": "bf0893aa3153bd28",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "enabled true",
        "func": "return {enabled:true}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2220,
        "wires": [
            [
                "3689a5d35bef9b91",
                "e1efa0ab37a525e1"
            ]
        ]
    },
    {
        "id": "739887f18150422f",
        "type": "comment",
        "z": "053268593fae8c42",
        "name": "functions, because i dont want payloads and such here, just the enabled signal",
        "info": "",
        "x": 830,
        "y": 2260,
        "wires": []
    },
    {
        "id": "5fa0a01fe9fd0b6a",
        "type": "ui_dropdown",
        "z": "053268593fae8c42",
        "name": "vehicle_select",
        "label": "Vehicle",
        "tooltip": "Select a vehicle to control and stuff",
        "place": "Select a vehicle",
        "group": "1417de57d250f31f",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 220,
        "y": 2640,
        "wires": [
            [
                "cc4c4f87612a2c55"
            ]
        ]
    },
    {
        "id": "cc4c4f87612a2c55",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "set active vehicle",
        "rules": [
            {
                "t": "set",
                "p": "active_vehicle",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 2680,
        "wires": [
            []
        ]
    },
    {
        "id": "014a2eed30078dbd",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 2560,
        "wires": [
            [
                "aa9a2c14dd1b54d6"
            ]
        ]
    },
    {
        "id": "aa9a2c14dd1b54d6",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "vehicle_names",
        "func": "vs = global.get(\"vehicles\")\nnames = Object.keys(vs)\nactive_names = []\nfor(var v_name of names){\n    v = vs[v_name]\n    if(v.bt_state.last_heartbeat){\n        active_names.push(v.basic_state.name)\n    }\n}\nreturn {options:active_names}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 2600,
        "wires": [
            [
                "5fa0a01fe9fd0b6a"
            ]
        ]
    },
    {
        "id": "56b9b2bbfe507431",
        "type": "split",
        "z": "053268593fae8c42",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "key",
        "x": 470,
        "y": 620,
        "wires": [
            [
                "c403355878a0b092"
            ]
        ]
    },
    {
        "id": "c403355878a0b092",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "",
        "property": "key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "current_plan",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "current_wp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 590,
        "y": 620,
        "wires": [
            [
                "516a5f3a55a9fa1a"
            ],
            [],
            []
        ]
    },
    {
        "id": "9bf83a1ca45f0473",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "lines for current plan",
        "func": "wps = msg.payload.waypoints\npoints = []\nfor(var i in wps){\n        points.push([wps[i].lat, wps[i].lon])\n}\n\nswitch(msg.payload.plan_state){\n    case 0: //running\n        c = \"orange\"\n        w = 2\n        break\n    case 1: // stopped\n        c = \"red\"\n        w = 1\n        break\n    case 2: // paused\n        c = \"orange\"\n        w = 1\n        break\n    case 3: // emergency\n        c = \"red\"\n        w = 0.1\n        break\n    case 4: // received\n        c = \"yellow\"\n        w = 2\n        break\n}\n\nline = {name: msg.vehicle_name+\"_current_plan\",\n        layer: msg.vehicle_name,\n        line:points,\n        color:c,\n        weight:w,\n        editable:false,\n        clickable:false,\n        dashArray:\"1,8,5,8\"\n}\nreturn {payload:line}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 600,
        "wires": [
            [
                "fe6676f1a71e7f3c"
            ]
        ]
    },
    {
        "id": "fe6676f1a71e7f3c",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "mode": "link",
        "links": [
            "baf8ce41441c9d88"
        ],
        "x": 1035,
        "y": 600,
        "wires": []
    },
    {
        "id": "5d5faa63758bafc3",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "mode": "link",
        "links": [
            "264b9e88b1732183"
        ],
        "x": 745,
        "y": 460,
        "wires": []
    },
    {
        "id": "516a5f3a55a9fa1a",
        "type": "rbe",
        "z": "053268593fae8c42",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 600,
        "wires": [
            [
                "9bf83a1ca45f0473"
            ]
        ]
    },
    {
        "id": "0ffddf9874f15a8e",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "disable_button",
        "links": [
            "6a1f8dffeaecbbdf",
            "e1efa0ab37a525e1"
        ],
        "x": 385,
        "y": 2160,
        "wires": [
            [
                "ea43639de7a04cea"
            ]
        ]
    },
    {
        "id": "e1efa0ab37a525e1",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "disable_disable",
        "mode": "link",
        "links": [
            "0ffddf9874f15a8e"
        ],
        "x": 1055,
        "y": 2220,
        "wires": []
    },
    {
        "id": "f0807890835d67b1",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "center_map_on_active_veh",
        "links": [
            "07a1bbac5d3ab58e"
        ],
        "x": 925,
        "y": 360,
        "wires": [
            [
                "0aa6bd7787fe04f0"
            ]
        ]
    },
    {
        "id": "6a6e48514015c5df",
        "type": "delay",
        "z": "053268593fae8c42",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 150,
        "y": 2120,
        "wires": [
            [
                "72ed74f562cb318d"
            ]
        ]
    },
    {
        "id": "d55c1ec10465de34",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "to pw check",
        "mode": "link",
        "links": [
            "8b6b68495542c5ee"
        ],
        "x": 605,
        "y": 2100,
        "wires": []
    },
    {
        "id": "8b6b68495542c5ee",
        "type": "link in",
        "z": "053268593fae8c42",
        "name": "pw check",
        "links": [
            "d55c1ec10465de34"
        ],
        "x": 605,
        "y": 2040,
        "wires": [
            [
                "db1ccf5a30da00f2"
            ]
        ]
    },
    {
        "id": "db1ccf5a30da00f2",
        "type": "delay",
        "z": "053268593fae8c42",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 710,
        "y": 2040,
        "wires": [
            [
                "b7c3154386a72406"
            ]
        ]
    },
    {
        "id": "63e3ec36451352d2",
        "type": "delay",
        "z": "053268593fae8c42",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 150,
        "y": 100,
        "wires": [
            [
                "9f822780235be5cc"
            ]
        ]
    },
    {
        "id": "e48b9fee7192cb74",
        "type": "ui_switch",
        "z": "053268593fae8c42",
        "name": "",
        "label": "Draw tracks",
        "tooltip": "This will increase download rates for everyone!",
        "group": "102ceb2b72c23b34",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 610,
        "y": 40,
        "wires": [
            [
                "d4f2e6688f0fac02"
            ]
        ]
    },
    {
        "id": "528f627a90f6985c",
        "type": "switch",
        "z": "053268593fae8c42",
        "name": "draw_tracks?",
        "property": "gui_state.draw_tracks",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 850,
        "y": 80,
        "wires": [
            [
                "6ff93a577bba20e1"
            ]
        ]
    },
    {
        "id": "d4f2e6688f0fac02",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "set gui_state.draw_tracks",
        "rules": [
            {
                "t": "set",
                "p": "gui_state.draw_tracks",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6ff93a577bba20e1",
        "type": "delay",
        "z": "053268593fae8c42",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "0.2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 900,
        "y": 120,
        "wires": [
            [
                "4f18c0fb5a5708dd"
            ]
        ]
    },
    {
        "id": "fe4d43a455cf7caa",
        "type": "change",
        "z": "053268593fae8c42",
        "name": "empty topic",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 2040,
        "wires": [
            [
                "28df211206fb16e0"
            ]
        ]
    },
    {
        "id": "cbdcee08271b0f6d",
        "type": "ui_button",
        "z": "053268593fae8c42",
        "name": "",
        "group": "9dbddaa8775473fd",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Center in map",
        "tooltip": "Center map on selected WP",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1740,
        "y": 1060,
        "wires": [
            [
                "d88ab4d85af725de"
            ]
        ]
    },
    {
        "id": "d88ab4d85af725de",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "center on selected_wp",
        "func": "gui_state = global.get(\"gui_state\")\nswp = gui_state.selected_wp\n\n\nm = {\"payload\": {\n        \"command\":{\n            \"lat\": swp.lat,\n            \"lon\": swp.lon\n        }\n    }}\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 1100,
        "wires": [
            [
                "e6fb258dd75c7fb6"
            ]
        ]
    },
    {
        "id": "e6fb258dd75c7fb6",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "worldmap",
        "mode": "link",
        "links": [
            "baf8ce41441c9d88"
        ],
        "x": 1925,
        "y": 1060,
        "wires": []
    },
    {
        "id": "ed39d8735dea7a7d",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "set selected_wp",
        "func": "gui_state = global.get(\"gui_state\")\nwps = global.get(\"waypoints\")\n\nswp = wps[msg.payload]\ngui_state.selected_wp = swp\nreturn {selected:swp.name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1100,
        "wires": [
            [
                "08be73627b96f7a9"
            ]
        ]
    },
    {
        "id": "35c02c549ee1fceb",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "num",
        "x": 1090,
        "y": 1060,
        "wires": [
            [
                "c943b10b45b886d8"
            ]
        ]
    },
    {
        "id": "08be73627b96f7a9",
        "type": "link out",
        "z": "053268593fae8c42",
        "name": "",
        "mode": "link",
        "links": [
            "dd7344e296dcc72d"
        ],
        "x": 1655,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d30c28fa7b54aaac",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "deploy 1s",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 1160,
        "y": 80,
        "wires": [
            [
                "9ed8b9724ce7aa14"
            ]
        ]
    },
    {
        "id": "9ed8b9724ce7aa14",
        "type": "function",
        "z": "053268593fae8c42",
        "name": "make new base layer",
        "func": "msg = {payload:{command:{}}};\n// msg.payload.command.map = {\n//     \"name\":\"SWE-Chart\",\n//     \"url\":\"https://pasjon.eniro.se/#map={z}/{x}/{y}.png\",\n//     \"opt\":{ \"maxZoom\":22, \"attribution\":\"&copy; Eniro\" }\n// };\n\n\n\n\n// msg.payload.command.map = {\n//     \"name\":\"EMODnetBathy\", \n//     \"url\":\"https://ows.emodnet-bathymetry.eu/wms\",\n//     \"opt\":{ \"maxZoom\":22,\n//             \"attribution\":\"&copy; EMODnet\",\n//             \"format\":\"image/png\",\n//             \"layers\":\"mean_multicolour\"\n//     },\n//     \"wms\":true\n// };\n\n// this works as a http request from this container\n// http://mapserver/?MAP=/etc/mapserver/sweden.map&SERVICE=WMS&REQUEST=Getmap&VERSION=1.1.1&LAYERS=CONTOUR&srs=EPSG:4326&BBOX=9.0,54.0,26.0,69.0&FORMAT=png&WIDTH=2000&HEIGHT=1100&STYLES=default\nmsg.payload.command.map = {\n    \"overlay\":\"Bathy\", \n    \"url\":\"http://nodered.blue-robots.com/mapserver\",\n    \"opt\":{ \n        \"map\":\"/etc/mapserver/sweden.map\",\n        \"layers\":\"CONTOUR\",\n        \"format\":\"image/png\",\n        \"service\":\"wms\",\n        \"transparent\":true\n    },\n    \"wms\":true\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 80,
        "wires": [
            [
                "4f18c0fb5a5708dd",
                "a31946469861cdfe"
            ]
        ]
    },
    {
        "id": "42b3be555d274617",
        "type": "inject",
        "z": "053268593fae8c42",
        "name": "deploy",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "9f822780235be5cc"
            ]
        ]
    },
    {
        "id": "a31946469861cdfe",
        "type": "debug",
        "z": "053268593fae8c42",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 160,
        "wires": []
    },
    {
        "id": "6ef706bf96c3bc5d",
        "type": "function",
        "z": "bd7de6c3e385f05f",
        "name": "increment disable count",
        "func": "r = global.get(\"disable_count\");\nr ++;\nglobal.set(\"disable_count\", r);\n\n\nif(r%20 == 0){\n    return {\"payload\":\"thatsenough\"};\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 140,
        "wires": [
            [
                "97d0c84d2b1a91da"
            ]
        ]
    },
    {
        "id": "97d0c84d2b1a91da",
        "type": "switch",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "property": "disable_count",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "20",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "30",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "40",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "b6e91a4522354871"
            ],
            [
                "0d67abcb7ba85ce3"
            ],
            [
                "31ad09d9905e3658"
            ]
        ]
    },
    {
        "id": "b6e91a4522354871",
        "type": "change",
        "z": "bd7de6c3e385f05f",
        "name": "navy seal",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "I would read you the entire navy seal copy pasta if I wasn't tamed a little. Consider yourself lucky!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 100,
        "wires": [
            [
                "05b65ee59cc1ade5"
            ]
        ]
    },
    {
        "id": "05b65ee59cc1ade5",
        "type": "ui_audio",
        "z": "bd7de6c3e385f05f",
        "d": true,
        "name": "",
        "group": "52f0dbb4c9ed8309",
        "voice": "urn:moz-tts:sapi:Microsoft Zira Desktop - English (United States)?en-US",
        "always": "",
        "x": 980,
        "y": 140,
        "wires": []
    },
    {
        "id": "559c9f52a6df82fb",
        "type": "function",
        "z": "bd7de6c3e385f05f",
        "name": "reset enough count?",
        "func": "\nglobal.set(\"disable_count\", 0);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "38c7a0234b03c09b",
        "type": "comment",
        "z": "bd7de6c3e385f05f",
        "name": "easter egg",
        "info": "",
        "x": 160,
        "y": 160,
        "wires": []
    },
    {
        "id": "735db8bb0cd0a42f",
        "type": "link in",
        "z": "bd7de6c3e385f05f",
        "d": true,
        "name": "",
        "links": [
            "f08a47ed118769f3"
        ],
        "x": 265,
        "y": 180,
        "wires": [
            [
                "559c9f52a6df82fb"
            ]
        ]
    },
    {
        "id": "306a265baa490b08",
        "type": "link in",
        "z": "bd7de6c3e385f05f",
        "d": true,
        "name": "",
        "links": [
            "bab232ef7fa82868"
        ],
        "x": 265,
        "y": 140,
        "wires": [
            [
                "6ef706bf96c3bc5d"
            ]
        ]
    },
    {
        "id": "4883b3b5db86634e",
        "type": "http request",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "nodered.blue-robots.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "basic",
        "senderr": false,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "9c952b35afe52c7e"
            ]
        ]
    },
    {
        "id": "de88b118f331d16e",
        "type": "inject",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "deploy",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "4883b3b5db86634e"
            ]
        ]
    },
    {
        "id": "9c952b35afe52c7e",
        "type": "switch",
        "z": "bd7de6c3e385f05f",
        "name": "cannot get /?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Cannot GET /",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 400,
        "wires": [
            [
                "accdcf3a24aed5c5"
            ],
            [
                "642380897225ef31"
            ]
        ]
    },
    {
        "id": "f8984d76cbfd5967",
        "type": "ui_led",
        "z": "bd7de6c3e385f05f",
        "order": 8,
        "group": "9dbddaa8775473fd",
        "width": 4,
        "height": 1,
        "label": "F5?",
        "labelPlacement": "left",
        "labelAlignment": "right",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "f5?",
        "x": 930,
        "y": 400,
        "wires": []
    },
    {
        "id": "accdcf3a24aed5c5",
        "type": "change",
        "z": "bd7de6c3e385f05f",
        "name": "cant :(",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "http",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 380,
        "wires": [
            [
                "f8984d76cbfd5967",
                "9698a4e720d89bc4"
            ]
        ]
    },
    {
        "id": "642380897225ef31",
        "type": "change",
        "z": "bd7de6c3e385f05f",
        "name": "can :)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "http",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 420,
        "wires": [
            [
                "f8984d76cbfd5967",
                "9698a4e720d89bc4"
            ]
        ]
    },
    {
        "id": "9698a4e720d89bc4",
        "type": "debug",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 320,
        "wires": []
    },
    {
        "id": "4de56f10827f5127",
        "type": "ui_ui_control",
        "z": "bd7de6c3e385f05f",
        "d": true,
        "name": "connection?",
        "events": "connect",
        "x": 230,
        "y": 560,
        "wires": [
            [
                "4883b3b5db86634e",
                "0fb1ad03ef52c031",
                "9811d075c2958931"
            ]
        ]
    },
    {
        "id": "0fb1ad03ef52c031",
        "type": "debug",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 720,
        "wires": []
    },
    {
        "id": "9811d075c2958931",
        "type": "change",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "new_connect",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "cefa3896251d42e3",
        "type": "inject",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 6-22 * * *",
        "once": false,
        "onceDelay": "1",
        "topic": "regular",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 440,
        "wires": [
            [
                "4883b3b5db86634e"
            ]
        ]
    },
    {
        "id": "0d67abcb7ba85ce3",
        "type": "change",
        "z": "bd7de6c3e385f05f",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No seriously, stop it. I will disable the button if you keep this up.",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 140,
        "wires": [
            [
                "05b65ee59cc1ade5"
            ]
        ]
    },
    {
        "id": "31ad09d9905e3658",
        "type": "change",
        "z": "bd7de6c3e385f05f",
        "name": "disabled",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Okay, no more button for you. Disable disabled until further notice.",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 180,
        "wires": [
            [
                "05b65ee59cc1ade5",
                "6a1f8dffeaecbbdf"
            ]
        ]
    },
    {
        "id": "6a1f8dffeaecbbdf",
        "type": "link out",
        "z": "bd7de6c3e385f05f",
        "name": "disable_disable",
        "mode": "link",
        "links": [
            "0ffddf9874f15a8e"
        ],
        "x": 925,
        "y": 200,
        "wires": []
    },
    {
        "id": "ce2b69173c28d8d1",
        "type": "http request",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://mapserver/?MAP=/etc/mapserver/sweden.map&SERVICE=WMS&REQUEST=Getmap&VERSION=1.1.1&LAYERS=CONTOUR&srs=EPSG:4326&BBOX=9.0,54.0,26.0,69.0&FORMAT=png&WIDTH=2000&HEIGHT=1100&STYLES=default",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 810,
        "y": 800,
        "wires": [
            [
                "90c9f56afdfc8620"
            ]
        ]
    },
    {
        "id": "1aac06b73691a3f2",
        "type": "inject",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 620,
        "y": 800,
        "wires": [
            [
                "ce2b69173c28d8d1"
            ]
        ]
    },
    {
        "id": "90c9f56afdfc8620",
        "type": "debug",
        "z": "bd7de6c3e385f05f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "a04b59e608979f6a",
        "type": "ui_list",
        "z": "072468ee5a218dc0",
        "group": "a48b13904097fb6a",
        "name": "List of robots",
        "order": 1,
        "width": 6,
        "height": 1,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 630,
        "y": 1060,
        "wires": [
            [
                "8d60954c80270a11"
            ]
        ]
    },
    {
        "id": "b17ab9737c48ebe8",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "make ui_list config from robot_states",
        "func": "list_config = []\nrobot_states = global.get(\"robot_states\")\nfor(const robot_name in robot_states){\n    robot_state = robot_states[robot_name]\n    since_last_update = (Date.now() - robot_state.last_update)/1000\n    \n    if(since_last_update > 10*60){\n        description_str = \"⌚ >10m ago\"\n    }else{\n        description_str = \"⌚ \"+ since_last_update.toFixed(2) + \"s ago\"\n    }\n    \n    \n    if(since_last_update > 10*60){\n        icon = 'fa-deaf'\n        color = 'grey'\n    }else{\n        icon = 'fa-feed'\n        color = 'black'\n    }\n    \n    if(robot_state.gui.selected){\n        icon = 'fa-eye'\n        color = 'orange'\n    }\n    \n    \n    list_item = {\n        title: \"<font color=\" + color +\">\" + robot_name,\n        description: \"<font color=\" + color +\">\" + description_str,\n        icon_name: icon\n    }\n    list_config.push(list_item)\n}\nreturn {payload:list_config}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1060,
        "wires": [
            [
                "a04b59e608979f6a"
            ]
        ]
    },
    {
        "id": "4a4d95ebe5f4a0a2",
        "type": "inject",
        "z": "072468ee5a218dc0",
        "name": "0.2",
        "props": [],
        "repeat": "0.2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "573d0d0f99f72b4b"
            ]
        ]
    },
    {
        "id": "8d60954c80270a11",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "select robot",
        "func": "robot_states = global.get(\"robot_states\")\n\n// set all to false\nfor(const robot_name in robot_states){\n    robot_states[robot_name].gui.selected = false\n}\n\n// set clicked to true\ntitle = msg.payload.title\n// strip the html color part\nclicked_robot_name = title.slice(title.indexOf(\">\")+1)\n\nrobot_states[clicked_robot_name].gui.selected = true\nglobal.set(\"robot_states\", robot_states)\nglobal.set(\"gui.selected_robot_name\", clicked_robot_name)\n",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0a4f4cb54557ce2f",
        "type": "ui_template",
        "z": "072468ee5a218dc0",
        "group": "9f2da61.3353758",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<link rel=\"stylesheet\" href=\"/flight/css/flightindicators.css\"/>\n<script src=\"/flight/js/jquery.flightindicators.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1060,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "2e8781f4b35114a4",
        "type": "ui_template",
        "z": "072468ee5a218dc0",
        "group": "a48b13904097fb6a",
        "name": "Roll, Pitch, Heading",
        "order": 2,
        "width": 6,
        "height": 5,
        "format": "<!--<div><span id=\"attitude\"></span><span id=\"heading\"></span></div> -->\n<div><span id=\"attitude\"></span></div><!--<span id=\"heading\"></span></div> -->\n\n<script>\n(function(scope) {\n    var options = {\n    \tsize : 180,\t\t\t\t// Sets the size in pixels of the indicator (square)\n    \troll : 0,\t\t\t\t// Roll angle in degrees for an attitude indicator\n    \tpitch : 0,\t\t\t\t// Pitch angle in degrees for an attitude indicator\n    \theading: 0,\t\t\t\t// Heading angle in degrees for an heading indicator\n    \tvario: 0,\t\t\t\t// Variometer in 1000 feets/min for the variometer indicator\n    \tairspeed: 0,\t\t\t// Air speed in knots for an air speed indicator\n    \taltitude: 0,\t\t\t// Altitude in feets for an altimeter indicator\n    \tpressure: 1000,\t\t\t// Pressure in hPa for an altimeter indicator\n    \tshowBox : false,\t\t\t// Sets if the outer squared box is visible or not (true or false)\n    \timg_directory : '/flight/img/'\t// The directory where the images are saved to\n    }\n    var atti = $.flightIndicator('#attitude', 'attitude',options);\n    var heading = $.flightIndicator('#heading', 'heading',options);\n    var speed = $.flightIndicator('#airspeed', 'airspeed',options);\n    scope.$watch('msg', function(msg) {\n        if (msg) {\n          if(msg.topic == \"roll\"){\n              atti.setRoll(msg.payload)\n          }\n          if(msg.topic == \"pitch\"){\n              atti.setPitch(-msg.payload)\n          }\n          if(msg.topic == \"heading\"){\n              heading.setHeading(msg.payload)\n          }\n          if(msg.topic == \"speed\"){\n              speed.setAirSpeed(msg.payload)\n          }\n          \n        }\n  });\n})(scope);\n\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "c375e4a5e57177ab",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "[roll, pitch, heading]",
        "func": "if(msg){\n    return [\n        {topic:\"roll\", payload:msg.base.roll},\n        {topic:\"pitch\", payload:msg.base.pitch},\n        {topic:\"heading\", payload:msg.base.heading}\n        ]\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 520,
        "wires": [
            [
                "2e8781f4b35114a4"
            ],
            [
                "2e8781f4b35114a4"
            ],
            [
                "2e8781f4b35114a4"
            ]
        ]
    },
    {
        "id": "971e5bcf85bd8530",
        "type": "inject",
        "z": "072468ee5a218dc0",
        "name": "1",
        "props": [],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 1060,
        "wires": [
            [
                "b17ab9737c48ebe8"
            ]
        ]
    },
    {
        "id": "573d0d0f99f72b4b",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "Selected Robot State",
        "func": "gui_state = global.get(\"gui\")\nselected_robot_name = gui_state.selected_robot_name\nrobot_states = global.get(\"robot_states\")\n\nif(!(selected_robot_name in robot_states)){\n    return\n}\n\nreturn robot_states[selected_robot_name]\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 520,
        "wires": [
            [
                "c375e4a5e57177ab",
                "216163265f4ce78b",
                "7d7f737ccec8bdd1",
                "8346958d8c2ff728",
                "5ccaf5f3bf5ae5cf",
                "828367982cce7ef2"
            ]
        ]
    },
    {
        "id": "216163265f4ce78b",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "[vbs, lcg, tcg]",
        "func": "if(msg){\n    return [\n        {topic:\"vbs\", payload:msg.base.vbs},\n        {topic:\"lcg\", payload:msg.base.lcg},\n        {topic:\"tcg\", payload:msg.base.tcg},\n        ]\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 600,
        "wires": [
            [
                "4e4363d933c20d6c"
            ],
            [
                "656a52f66d5d0bda"
            ],
            [
                "d0bc35b89669966d"
            ]
        ]
    },
    {
        "id": "7d7f737ccec8bdd1",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "[T1, T2]",
        "func": "if(msg){\n    return [\n        {topic:\"t1\", payload:msg.base.t1},\n        {topic:\"t2\", payload:msg.base.t2}\n        ]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 700,
        "wires": [
            [
                "edb7322d84e1824d"
            ],
            [
                "5c9b93966cd3ce1c"
            ]
        ]
    },
    {
        "id": "4e4363d933c20d6c",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "VBS",
        "group": "a48b13904097fb6a",
        "order": 5,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "VBS",
        "label": "%",
        "format": "{{value | number:2}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 850,
        "y": 560,
        "wires": []
    },
    {
        "id": "656a52f66d5d0bda",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "LCG",
        "group": "a48b13904097fb6a",
        "order": 6,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "LCG",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "edb7322d84e1824d",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "T1",
        "group": "a48b13904097fb6a",
        "order": 3,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "T1",
        "label": "rpm",
        "format": "{{value | number:1}}",
        "min": "-2000",
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "-800",
        "seg2": "800",
        "className": "",
        "x": 850,
        "y": 680,
        "wires": []
    },
    {
        "id": "5c9b93966cd3ce1c",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "T2",
        "group": "a48b13904097fb6a",
        "order": 4,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "T2",
        "label": "rpm",
        "format": "{{value | number:1}}",
        "min": "-2000",
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "-800",
        "seg2": "800",
        "className": "",
        "x": 850,
        "y": 720,
        "wires": []
    },
    {
        "id": "d0bc35b89669966d",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "TCG",
        "group": "a48b13904097fb6a",
        "order": 8,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "TCG",
        "label": "%",
        "format": "{{value | number:1}}",
        "min": "0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "30",
        "seg2": "60",
        "className": "",
        "x": 850,
        "y": 640,
        "wires": []
    },
    {
        "id": "8346958d8c2ff728",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "BT Tip Log",
        "func": "// \"bt\": {\n//             \"tip\": {\n//                 \"name\": \"???\",\n//                 \"message\": \"\",\n//                 \"status\": \"???\"\n//             },\n//             \"algae_farm_enable\": false,\n//             \"live_wp_enable\": false,\n//             \"gui_wp_enable\": false,\n//             \"current_wp\": {},\n//             \"current_plan\": {},\n//             \"last_heartbeat\": null\n//         },\n\nfunction make_tip_str(tip){\n    c = \"black\"\n    icon = \"\"\n    switch(tip.status){\n        case \"failure\":\n            c = \"red\"\n            icon = \"❌\"\n            break\n        case \"success\":\n            c = \"green\"\n            icon = \"✅\"\n            break\n        case \"running\":\n            c = \"blue\"\n            icon = \"⚙️\"\n            break\n    }\n    \n    tip_type = tip.name.slice(0,1)\n    tip_name = tip.name.slice(2)\n    \n    t = \"\"\n    if(tip.time > 10){\n        t = new Date(tip.time).toTimeString().slice(0,8)\n    }\n    \n    title = icon + \" <font color=\" + c + \">\" + tip_name\n    msg = \"<font color=\" + c +\">[\" + t + \"] \" + tip.message\n    \n    return [title, msg];\n}\n\n// dont do anything if the robot we got is not selected\nif(!(msg.gui.selected)){\n    return\n}\n\ncurrent_tip = msg.bt.tip;\n\n\n// get the current log, make sure its length matches the value \n// set in the gui and then put it back into global context\ngui_state = global.get(\"gui\")\ntips = msg.gui.bt_tip_log\ntip_log_len = gui_state.bt_tip_log_len\n// too short\nwhile(tips.length < tip_log_len){\n    tips.push({\n        name:\"\",\n        message:\"\",\n        status:\"\",\n        time:\"\"\n    })\n}\n// too long\nif(tips.length > tip_log_len){\n    tips = tips.slice(0,tip_log_len)\n}\n\nlast_tip = tips[0]\nif(last_tip){\n    if (!(last_tip.name == current_tip.name && last_tip.status == current_tip.status)){\n        // something meaningful have changed, shift things around\n        for(let i=tips.length-1; i>0; i--){\n            tips[i] = tips[i-1]\n        }\n    }\n}\n// otherwise just update the top\ntips[0] = current_tip\ntips[0].time = Date.now()\n\n//finally update the log with the latest state of the log\nglobal.set(\"robot_states['\"+msg.base.name+\"'].gui.bt_tip_log\", tips)\n\nouts = []\nfor(let i=0; i<tips.length; i++){\n    r = make_tip_str(tips[i])\n    list_item = {\n        title: r[0],\n        description: r[1]\n    }\n    outs.push(list_item)\n}\n\nreturn {payload:outs};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 900,
        "wires": [
            [
                "93832a52fddd1fe6"
            ]
        ]
    },
    {
        "id": "c50d772c522ec5c1",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "lat_lon",
        "topic": "smarc/+/dr/lat_lon",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 60,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "d8a229ed73bf1a50",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Yaw",
        "topic": "smarc/+/dr/yaw",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "d933ebc2598c89a7",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Depth",
        "topic": "smarc/+/dr/depth",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 100,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "ce5f3fc1415b3d44",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Roll",
        "topic": "smarc/+/dr/roll",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "f1f6aa8630b2459f",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Pitch",
        "topic": "smarc/+/dr/pitch",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "6bc6d108042d5433",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "VBS_fb",
        "topic": "smarc/+/core/vbs_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "1e257bc81da80283",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "LCG_fb",
        "topic": "smarc/+/core/lcg_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 180,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "cb767c1ced5d8bfa",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "T1_fb",
        "topic": "smarc/+/core/thruster1_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 140,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "b7d61f1afee897a8",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "T2_fb",
        "topic": "smarc/+/core/thruster2_fb",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "5ab4d2fba4e40e73",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "batt",
        "topic": "smarc/+/core/battery",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "3ef59b0e6f35a957",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "gps",
        "topic": "smarc/+/core/gps",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 100,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "88437af12ac3ebb4",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "Altitude",
        "topic": "smarc/+/dr/altitude",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "5c17640c744c8c15",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "goto_wp_goal",
        "topic": "smarc/+/bt/last_wp",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 260,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "73e7fa1d9b7b8bc2",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "bt tip",
        "topic": "smarc/+/bt/tip",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "1447262162547810",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "livewp enable",
        "topic": "smarc/+/bt/live_wp/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "9fdc56fc7a754fcd",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "algae enable",
        "topic": "smarc/+/bt/algae_farm/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "a0a635a67725ceec",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "bt heartbeat",
        "topic": "smarc/+/bt/heartbeat",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 490,
        "y": 260,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "16ac9c75fa3b93ca",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "bt missioncontrol",
        "topic": "smarc/+/bt/mission_control",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 540,
        "y": 300,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "2a5530edfa53f040",
        "type": "mqtt in",
        "z": "072468ee5a218dc0",
        "name": "guiwp enable",
        "topic": "smarc/+/bt/gui_wp/enable",
        "qos": "0",
        "datatype": "json",
        "broker": "1301e8ab7fdd3e72",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 650,
        "y": 260,
        "wires": [
            [
                "e58d020e0faf117d"
            ]
        ]
    },
    {
        "id": "e58d020e0faf117d",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "update robot state",
        "func": "function to_deg(d){\n    deg = d * (180/Math.PI);\n    deg = deg%360;\n    return deg;\n}\n\nfunction to_northing(d){\n    h = Math.PI/2 - d;\n    return to_deg(h);\n}\n\nfunction new_robot_state(robot_name){\n    return {\n        \"last_update\":0,\n        \"base\": {\n            \"name\": robot_name,\n            \"lat\": null,\n            \"lon\": null,\n            \"heading\": 0,\n            \"roll\": 0,\n            \"pitch\": 0,\n            \"depth\": 0,\n            \"altitude\": 0,\n            \"vbs\": 0,\n            \"lcg\": 0,\n            \"tcg\": 0,\n            \"t1\": 0,\n            \"t2\": 0,\n            \"batt_v\": 0,\n            \"gps_lat\": null,\n            \"gps_lon\": null\n        },\n        \"bt\": {\n            \"tip\": {\n                \"name\": \"???\",\n                \"message\": \"\",\n                \"status\": \"???\"\n            },\n            \"algae_farm_enable\": false,\n            \"live_wp_enable\": false,\n            \"gui_wp_enable\": false,\n            \"current_wp\": {},\n            \"current_plan\": {},\n            \"last_heartbeat\": null,\n        },\n        \"gui\": {\n            \"selected\": false,\n            \"is_old\":false,\n            \"bt_tip_log\":[],\n            \"batt_v_minmax\":[9999,-1],\n            \"dr\":{\n                \"name\": robot_name,\n                \"label\": robot_name,\n                \"tooltip\": robot_name,\n                \"lat\": null,\n                \"lon\": null,\n                \"heading\": 0,\n                \"layer\": robot_name,\n                \"icon\": \"ship\",\n                \"color\": \"yellow\",\n                \"iconColor\": \"yellow\"\n            },\n            \"gps\":{\n                \"name\": robot_name+\"_gps\",\n                \"tooltip\": robot_name,\n                \"lat\": null,\n                \"lon\": null,\n                \"layer\": robot_name,\n                \"icon\": \"satellite\",\n                \"color\": \"green\",\n                \"iconColor\": \"green\",\n            },\n        }\n    }\n}\n\n// each mqtt_in node also emits the entire topic\n// so we can switch robot name and which topic it is coming from\nconst [smarc, robot_name, ...topic_parts] = msg.topic.split('/');\nmqtt_topic = topic_parts.join(\"/\")\n\n// then try to get this robot from the list of vehicles\n// if its not there, construct an empty state object\nrobot_states = global.get(\"robot_states\")\n\nif(!(robot_states)){\n    global.set(\"robot_states\", {})\n}\n\nif(!(robot_name in robot_states)){\n    robot_states[robot_name] = new_robot_state(robot_name)\n}\n\nrobot_state = robot_states[robot_name]\n\n\nrobot_state.last_update = Date.now()\n\npayload = msg.payload\nswitch(mqtt_topic){\n    case \"dr/lat_lon\":\n        robot_state.base.lat = payload.latitude;\n        robot_state.base.lon = payload.longitude;\n        robot_state.gui.dr.lat = payload.latitude;\n        robot_state.gui.dr.lon = payload.longitude;\n        break;\n        \n    case \"dr/yaw\":\n        hdg = to_northing(payload.data)\n        robot_state.base.heading = hdg;\n        robot_state.gui.dr.heading = hdg;\n        break;\n        \n    case \"dr/roll\":\n        robot_state.base.roll = to_deg(payload.data);\n        break;\n        \n    case \"dr/pitch\":\n        robot_state.base.pitch = to_deg(payload.data);\n        break;\n        \n    case \"dr/depth\":\n        robot_state.base.depth = payload.data;\n        break;\n\n    case \"dr/altitude\":\n        robot_state.base.altitude = payload.data;\n        break;        \n        \n    case \"core/vbs_fb\":\n        robot_state.base.vbs = payload.value;\n        break;\n        \n    case \"core/lcg_fb\":\n        robot_state.base.lcg = payload.value;\n        break;\n        \n    case \"core/thruster1_fb\":\n        robot_state.base.t1 = payload.rpm.rpm;\n        break;\n        \n    case \"core/thruster2_fb\":\n        robot_state.base.t2 = payload.rpm.rpm;\n        break;\n        \n    case \"core/battery\":\n        robot_state.base.batt_v = payload.voltage;\n        break;\n        \n    case \"core/gps\":\n        robot_state.base.gps_lat = payload.latitude;\n        robot_state.base.gps_lon = payload.longitude;\n        robot_state.gui.gps.lat = payload.latitude;\n        robot_state.gui.gps.lon = payload.longitude;\n        break;\n        \n    case \"bt/last_wp\":\n        robot_state.bt.current_wp = payload;\n        break;\n        \n    case \"bt/tip\":\n        robot_state.bt.tip.name = payload.name;\n        robot_state.bt.tip.message = payload.message;\n        status_str = {\n            0:\"unknown\",\n            1:\"invalid\",\n            2:\"running\",\n            3:\"success\",\n            4:\"failure\"\n        }\n        robot_state.bt.tip.status = status_str[payload.status]\n        break;\n        \n    case \"bt/live_wp/enable\":\n        robot_state.bt.live_wp_enable = payload.data;\n        break;\n        \n    case \"bt/algae_farm/enable\":\n        robot_state.bt.algae_farm_enable = payload.data;\n        break;\n        \n    case \"bt/gui_wp/enable\":\n        robot_state.bt.gui_wp_enable = payload.data;\n        break;\n        \n    case \"bt/heartbeat\":\n        robot_state.bt.last_heartbeat = Date.now()\n        break;\n        \n    case \"bt/mission_control\":\n        if(payload.command == 5){ // is_feedback\n            robot_state.bt.current_plan = payload\n        }\n}",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 160,
        "wires": []
    },
    {
        "id": "93832a52fddd1fe6",
        "type": "ui_list",
        "z": "072468ee5a218dc0",
        "group": "81d4dedb195938c4",
        "name": "BT Log",
        "order": 1,
        "width": 6,
        "height": 3,
        "lineType": "three",
        "actionType": "none",
        "allowHTML": true,
        "outputs": 0,
        "topic": "",
        "x": 860,
        "y": 900,
        "wires": []
    },
    {
        "id": "268c9d6ea03e8ef2",
        "type": "ui_numeric",
        "z": "072468ee5a218dc0",
        "name": "",
        "label": "BT Log Len",
        "tooltip": "",
        "group": "81d4dedb195938c4",
        "order": 2,
        "width": 0,
        "height": 0,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "20",
        "step": 1,
        "className": "",
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "850a3a74ca62d541"
            ]
        ]
    },
    {
        "id": "850a3a74ca62d541",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gui.bt_tip_log_len",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "2ad1bf5fcff4a626",
        "type": "inject",
        "z": "072468ee5a218dc0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "gui.bt_tip_log_len",
        "payloadType": "global",
        "x": 230,
        "y": 1100,
        "wires": [
            [
                "268c9d6ea03e8ef2"
            ]
        ]
    },
    {
        "id": "9a4668d9403279bb",
        "type": "ui_gauge",
        "z": "072468ee5a218dc0",
        "name": "",
        "group": "a48b13904097fb6a",
        "order": 7,
        "width": 3,
        "height": 2,
        "gtype": "gage",
        "title": "Battery V",
        "label": "V",
        "format": "{{value | number:2}}",
        "min": "10",
        "max": "14",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "12",
        "seg2": "13",
        "className": "",
        "x": 860,
        "y": 760,
        "wires": []
    },
    {
        "id": "5ccaf5f3bf5ae5cf",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "[current V, minmax]",
        "func": "//batt_minmax = global.get(\"gui_state.batt_v_minmax\")\nbatt_minmax = msg.gui.batt_v_minmax\nmin = batt_minmax[0]\nmax = batt_minmax[1]\ncurrent = msg.base.batt_v\n\nif(current >= max){\n    max = current+2\n}\nif(current <= min){\n    min = current-2\n}\nglobal.set(\"robot_states['\"+msg.base.name+\"'].gui.batt_v_minmax\", [min, max])\n\n\nreturn [\n    {topic:\"batt\", payload:current},\n    {ui_control: {min:min, max:max}}\n    ]\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 760,
        "wires": [
            [
                "9a4668d9403279bb"
            ],
            [
                "9a4668d9403279bb"
            ]
        ]
    },
    {
        "id": "0ad56f79c71f0cc7",
        "type": "inject",
        "z": "072468ee5a218dc0",
        "name": "deploy",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 910,
        "y": 120,
        "wires": [
            [
                "92a2d6eb5f8e7b77"
            ]
        ]
    },
    {
        "id": "92a2d6eb5f8e7b77",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "reset robot_states on deploy",
        "rules": [
            {
                "t": "set",
                "p": "robot_states",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "828367982cce7ef2",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "Unselect if old, select on reconnect",
        "func": "if(msg){\n    robot_state = msg\n    since_last_update = (Date.now() - robot_state.last_update)/1000\n    gui_key = \"robot_states['\"+robot_state.base.name+\"'].gui\"\n    \n    if(since_last_update > 10*60){\n        global.set(gui_key+\".is_old\", true)\n        global.set(gui_key+\".selected\", false)\n        global.set(gui_key+\".dr.color\", \"grey\")\n        global.set(gui_key+\".dr.iconColor\", \"grey\")\n        global.set(gui_key+\".dr.label\", \"\")\n        return {enabled:false}\n    }\n    \n    if(since_last_update > 60){\n        global.set(gui_key+\".selected\", false)\n        global.set(gui_key+\".dr.color\", \"yellow\")\n        global.set(gui_key+\".dr.iconColor\", \"yellow\")\n        global.set(gui_key+\".dr.label\", \"\")\n        global.set(gui_key+\".is_old\", false)\n    }else{\n        global.set(gui_key+\".selected\", true)\n        global.set(gui_key+\".dr.color\", \"orange\")\n        global.set(gui_key+\".dr.iconColor\", \"orange\")\n        global.set(gui_key+\".dr.label\", robot_state.base.name)\n        global.set(gui_key+\".is_old\", false)\n    }\n    return {enabled:true}\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 440,
        "wires": [
            [
                "984d3208cf3f44dc",
                "cdf2cf72778b09da"
            ]
        ]
    },
    {
        "id": "984d3208cf3f44dc",
        "type": "debug",
        "z": "072468ee5a218dc0",
        "name": "",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": true,
        "complete": "enabled",
        "targetType": "msg",
        "statusVal": "enabled",
        "statusType": "auto",
        "x": 950,
        "y": 400,
        "wires": []
    },
    {
        "id": "b486adbab9a480eb",
        "type": "link in",
        "z": "072468ee5a218dc0",
        "name": "toggle readouts",
        "links": [
            "cf8fbcc8cd92e83a"
        ],
        "x": 345,
        "y": 700,
        "wires": [
            [
                "2e8781f4b35114a4",
                "4e4363d933c20d6c",
                "656a52f66d5d0bda",
                "d0bc35b89669966d",
                "edb7322d84e1824d",
                "5c9b93966cd3ce1c",
                "9a4668d9403279bb"
            ]
        ]
    },
    {
        "id": "27d98d0f695deeec",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "toggle readouts",
        "info": "",
        "x": 240,
        "y": 700,
        "wires": []
    },
    {
        "id": "cf8fbcc8cd92e83a",
        "type": "link out",
        "z": "072468ee5a218dc0",
        "name": "",
        "mode": "link",
        "links": [
            "b486adbab9a480eb",
            "dee9d1fab2fcec69"
        ],
        "x": 1055,
        "y": 460,
        "wires": []
    },
    {
        "id": "4eab10166ad7a6f6",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "toggle readouts",
        "info": "",
        "x": 1160,
        "y": 460,
        "wires": []
    },
    {
        "id": "cdf2cf72778b09da",
        "type": "delay",
        "z": "072468ee5a218dc0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 950,
        "y": 460,
        "wires": [
            [
                "cf8fbcc8cd92e83a"
            ]
        ]
    },
    {
        "id": "07c8e88c8e7446f2",
        "type": "link in",
        "z": "072468ee5a218dc0",
        "name": "helptext",
        "links": [
            "246b0fccde35e02f",
            "de2b74099f9267ca"
        ],
        "x": 615,
        "y": 1300,
        "wires": [
            [
                "bad9531a.ac42d"
            ]
        ]
    },
    {
        "id": "1356cb29988fd215",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "helptext",
        "info": "",
        "x": 540,
        "y": 1300,
        "wires": []
    },
    {
        "id": "bad9531a.ac42d",
        "type": "function",
        "z": "072468ee5a218dc0",
        "name": "helptext",
        "func": "if(!msg.payload) return;\n\nconst MAXLINES = 500;\nlet data = flow.get(\"data\") || [];\nif(msg.topic==\"clear\") {\n    data = [];\n} else {\n    t = new Date(Date.now()).toTimeString().slice(0,8)\n    line = \"<font color=gray>[\"+ t +\"]  \"\n    switch(msg.topic){\n        case \"connection\":\n            switch(msg.payload){\n                case \"connect\":\n                case \"change\":\n                    line += \"(\"+msg.socketip+\")\"\n            }\n            line += \" is here!\"\n            line = \"<font color=green>\" + line\n            break\n        default:\n            line += \"<font color=black>\"+ msg.payload\n    }\n    \n    data.unshift({title:line});\n    data = data.slice(0, MAXLINES);\n}\nflow.set(\"data\", data);\n\nreturn {payload:data}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1340,
        "wires": [
            [
                "14cef28c9b363aa9"
            ]
        ]
    },
    {
        "id": "8824d559b51e8ff1",
        "type": "ui_button",
        "z": "072468ee5a218dc0",
        "name": "clear",
        "group": "ba1fb12713836940",
        "order": 5,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Clears the help log",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "clear",
        "topicType": "str",
        "x": 580,
        "y": 1340,
        "wires": [
            [
                "bad9531a.ac42d"
            ]
        ]
    },
    {
        "id": "896214991f49dc69",
        "type": "ui_ui_control",
        "z": "072468ee5a218dc0",
        "name": "",
        "events": "connect",
        "x": 390,
        "y": 1260,
        "wires": [
            [
                "2aee03ce280bf49f",
                "35398d09d2f397c0"
            ]
        ]
    },
    {
        "id": "2aee03ce280bf49f",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "connection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 1260,
        "wires": [
            [
                "bad9531a.ac42d"
            ]
        ]
    },
    {
        "id": "35398d09d2f397c0",
        "type": "debug",
        "z": "072468ee5a218dc0",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 1220,
        "wires": []
    },
    {
        "id": "14cef28c9b363aa9",
        "type": "ui_list",
        "z": "072468ee5a218dc0",
        "group": "ba1fb12713836940",
        "name": "helptexts",
        "order": 3,
        "width": 11,
        "height": 2,
        "lineType": "one",
        "actionType": "none",
        "allowHTML": true,
        "outputs": 0,
        "topic": "",
        "x": 870,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b74e9e43d39d2943",
        "type": "ui_text_input",
        "z": "072468ee5a218dc0",
        "name": "usertext",
        "label": "Log something?",
        "tooltip": "Say something?",
        "group": "ba1fb12713836940",
        "order": 1,
        "width": 11,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "user",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 570,
        "y": 1380,
        "wires": [
            [
                "bad9531a.ac42d",
                "e394c4c322482237"
            ]
        ]
    },
    {
        "id": "a1ae28d9.0d25",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "Clear Value",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "null",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1440,
        "wires": [
            [
                "b74e9e43d39d2943"
            ]
        ]
    },
    {
        "id": "e394c4c322482237",
        "type": "delay",
        "z": "072468ee5a218dc0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 1440,
        "wires": [
            [
                "a1ae28d9.0d25"
            ]
        ]
    },
    {
        "id": "093f0d1ff195539a",
        "type": "ui_button",
        "z": "072468ee5a218dc0",
        "name": "ping",
        "group": "ba1fb12713836940",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Get attention",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "fa-volume-up",
        "payload": "I need an adult in node red please",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 310,
        "y": 1580,
        "wires": [
            [
                "916c4b8093a21ecc",
                "9ddd81dfb1ab5d51",
                "b119d0a4ac56786a"
            ]
        ]
    },
    {
        "id": "c816724e1c29b129",
        "type": "ui_switch",
        "z": "072468ee5a218dc0",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "ba1fb12713836940",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 280,
        "y": 1340,
        "wires": [
            [
                "426351cea6a5d463"
            ]
        ]
    },
    {
        "id": "426351cea6a5d463",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1340,
        "wires": [
            [
                "8824d559b51e8ff1"
            ]
        ]
    },
    {
        "id": "af9eda3169c82d4f",
        "type": "inject",
        "z": "072468ee5a218dc0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 150,
        "y": 1340,
        "wires": [
            [
                "c816724e1c29b129"
            ]
        ]
    },
    {
        "id": "47de367d43c3b66c",
        "type": "ui_audio",
        "z": "072468ee5a218dc0",
        "name": "",
        "group": "ba1fb12713836940",
        "voice": "urn:moz-tts:speechd:English%20(Great%20Britain)?en",
        "always": true,
        "x": 640,
        "y": 1580,
        "wires": []
    },
    {
        "id": "916c4b8093a21ecc",
        "type": "delay",
        "z": "072468ee5a218dc0",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "10",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 1580,
        "wires": [
            [
                "47de367d43c3b66c"
            ]
        ]
    },
    {
        "id": "9ddd81dfb1ab5d51",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1660,
        "wires": [
            [
                "093f0d1ff195539a",
                "a148da7fdd377498"
            ]
        ]
    },
    {
        "id": "a148da7fdd377498",
        "type": "delay",
        "z": "072468ee5a218dc0",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "5",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 500,
        "y": 1660,
        "wires": [
            [
                "7a7acdab644af9aa"
            ]
        ]
    },
    {
        "id": "7a7acdab644af9aa",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1660,
        "wires": [
            [
                "093f0d1ff195539a"
            ]
        ]
    },
    {
        "id": "de2b74099f9267ca",
        "type": "link out",
        "z": "072468ee5a218dc0",
        "name": "",
        "mode": "link",
        "links": [
            "07c8e88c8e7446f2"
        ],
        "x": 565,
        "y": 1540,
        "wires": []
    },
    {
        "id": "3691746500e38fa4",
        "type": "comment",
        "z": "072468ee5a218dc0",
        "name": "helptext",
        "info": "",
        "x": 640,
        "y": 1540,
        "wires": []
    },
    {
        "id": "b119d0a4ac56786a",
        "type": "change",
        "z": "072468ee5a218dc0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 1540,
        "wires": [
            [
                "de2b74099f9267ca"
            ]
        ]
    },
    {
        "id": "61ce2b718be73daf",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "Sweden.map",
        "func": "msg = {payload:{command:{}}};\nmsg.payload.command.map = {\n    \"overlay\":\"Bathy\", \n    \"url\":\"http://nodered.blue-robots.com/mapserver\",\n    \"opt\":{ \n        \"map\":\"/etc/mapserver/sweden.map\",\n        \"layers\":\"CONTOUR\",\n        \"format\":\"image/png\",\n        \"service\":\"wms\",\n        \"transparent\":true\n    },\n    \"wms\":true\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 500,
        "wires": [
            [
                "93d9f503a3372651"
            ]
        ]
    },
    {
        "id": "d8ab75012918ab43",
        "type": "ui_worldmap",
        "z": "65c60c3b274f73e3",
        "group": "542b5325cf729b8f",
        "order": 1,
        "width": 12,
        "height": 12,
        "name": "",
        "lat": "58.25089840041283",
        "lon": "11.4500587783608",
        "zoom": "16",
        "layer": "EsriS",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "deg",
        "showgrid": "true",
        "allowFileDrop": "false",
        "path": "/worldmap_v2",
        "overlist": "SN",
        "maplist": "EsriS,NatGeo",
        "mapname": "Bathy",
        "mapurl": "https://www.gebco.net/data_and_products/gebco_web_services/web_map_service/mapserv",
        "mapopt": "{ \"maxZoom\":22,\"attribution\":\"&copy; GEBCO\",\"format\":\"image/jpeg\",\"request\":\"getmap\",\"service\":\",\"layers\":\"gebco_latest_2_sub_ice_topo\"}",
        "mapwms": true,
        "x": 1270,
        "y": 80,
        "wires": []
    },
    {
        "id": "1e0bd19ab17b797e",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_worldmap",
        "links": [
            "93d9f503a3372651",
            "86db72e5aa5e61cc",
            "8fdedc66ae19b198",
            "f73d51a768277c0b",
            "eaae728ca769c3c1",
            "3910098f87fb5eac",
            "c7d4d5de96d19781",
            "b185f6dbb37952e9",
            "7e03fe39a9e4785c"
        ],
        "x": 1155,
        "y": 80,
        "wires": [
            [
                "d8ab75012918ab43"
            ]
        ]
    },
    {
        "id": "93d9f503a3372651",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 685,
        "y": 520,
        "wires": []
    },
    {
        "id": "74196b529b53271e",
        "type": "worldmap in",
        "z": "65c60c3b274f73e3",
        "name": "",
        "path": "/worldmap_v2",
        "events": "connect,point,layer,bounds,other",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "fd6727bdbf9a2edd",
                "f59da3a9a9790cbb"
            ]
        ]
    },
    {
        "id": "f59da3a9a9790cbb",
        "type": "debug",
        "z": "65c60c3b274f73e3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 290,
        "y": 20,
        "wires": []
    },
    {
        "id": "fd6727bdbf9a2edd",
        "type": "switch",
        "z": "65c60c3b274f73e3",
        "name": "map actions",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "connected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bounds",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "button",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "point",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "move",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 290,
        "y": 140,
        "wires": [
            [
                "ecb32f1e69ab1244"
            ],
            [
                "692a9362905a1825"
            ],
            [
                "acaa0403e6b2f92a"
            ],
            [
                "e2f686ad8c4ade79"
            ],
            [
                "7d660feb1bc9828d"
            ]
        ]
    },
    {
        "id": "ecb32f1e69ab1244",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_connected",
        "mode": "link",
        "links": [
            "5a7bf884410b6994",
            "6b9216a6aec78960",
            "34b418616dff4704",
            "c64c7c9fbc69557c",
            "6868207dbe3c8fe2",
            "07bfda0c88113da1",
            "844b7bcc930e1da0"
        ],
        "x": 435,
        "y": 60,
        "wires": []
    },
    {
        "id": "692a9362905a1825",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_bounds",
        "mode": "link",
        "links": [],
        "x": 435,
        "y": 100,
        "wires": []
    },
    {
        "id": "5a7bf884410b6994",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 445,
        "y": 500,
        "wires": [
            [
                "61ce2b718be73daf",
                "24bfe69168ea9d8c"
            ]
        ]
    },
    {
        "id": "db811466da709501",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 520,
        "y": 60,
        "wires": []
    },
    {
        "id": "733036b10ed33646",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "bounds",
        "info": "",
        "x": 510,
        "y": 100,
        "wires": []
    },
    {
        "id": "acaa0403e6b2f92a",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_button",
        "mode": "link",
        "links": [
            "608b681c2b10d2c7"
        ],
        "x": 435,
        "y": 140,
        "wires": []
    },
    {
        "id": "f2fa2605c1b981d7",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "button",
        "info": "",
        "x": 510,
        "y": 140,
        "wires": []
    },
    {
        "id": "e493560291ec0b19",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 360,
        "y": 500,
        "wires": []
    },
    {
        "id": "608b681c2b10d2c7",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_on_press",
        "links": [
            "acaa0403e6b2f92a"
        ],
        "x": 305,
        "y": 540,
        "wires": [
            [
                "be264f174c773c7e"
            ]
        ]
    },
    {
        "id": "0ffae76eff0a2978",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "button",
        "info": "",
        "x": 230,
        "y": 540,
        "wires": []
    },
    {
        "id": "d697d87f8e6123ae",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 770,
        "y": 520,
        "wires": []
    },
    {
        "id": "be264f174c773c7e",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "on_press",
        "func": "key = false\nswitch(msg.payload.name){\n    case(\"Toggle follow\"):\n        key = \"follow_selected_vehicle\"\n        break\n    case(\"Toggle tracks\"):\n        key = \"draw_tracks\"\n        break\n    default:\n        node.warn(\"Unhandled map button!\")\n}\n\nif(key){\n    key = \"gui.\"+key\n    if(global.get(key)){\n        global.set(key, false)\n    }else{\n        global.set(key, true)\n    }\n}\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 540,
        "wires": [
            [
                "24bfe69168ea9d8c"
            ]
        ]
    },
    {
        "id": "24bfe69168ea9d8c",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "map buttons",
        "func": "function make_button(button){\n    m = {payload:{command:{}}};\n    \n    if(global.get(\"gui.\"+button.global_key)){\n        icon = button.icon_true\n    }else{\n        icon = button.icon_false\n    }\n    \n    m.payload.command = { \n        \"button\": {\n            \"name\":button.name,\n            \"icon\": icon,\n            \"position\":\"topleft\" \n        } \n    }\n    return m\n}\n\nfunction remove_button(name){\n    m = {payload:{command:{}}};\n    m.payload.command = { \n        \"button\": {\n            \"name\":name,\n        } \n    }\n    return m\n}\n\n\nbuttons = [\n    // {\n    //     \"global_key\":\"draw_tracks\",\n    //     \"name\":\"Toggle tracks\",\n    //     \"icon_true\":\"fa-sheqel\",\n    //     \"icon_false\":\"fa-blind\"\n    // },\n    {\n        \"global_key\":\"follow_selected_vehicle\",\n        \"name\":\"Toggle follow\",\n        \"icon_true\":\"fa-eye\",\n        \"icon_false\":\"fa-low-vision\"\n    }\n]\n\nfor(var button of buttons){\n    node.send(remove_button(button.name))\n    node.send(make_button(button))\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 540,
        "wires": [
            [
                "93d9f503a3372651"
            ]
        ]
    },
    {
        "id": "0a961438ad73e32f",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "robot_drs",
        "func": "msg = {payload:[]}\nrobot_states = global.get(\"robot_states\")\nfor(const robot_name in robot_states){\n    r = robot_states[robot_name]\n    msg.payload.push(r.gui.dr)\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 240,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "327b70467ae735a8",
        "type": "inject",
        "z": "65c60c3b274f73e3",
        "name": "0.2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 710,
        "y": 260,
        "wires": [
            [
                "0a961438ad73e32f",
                "0599c19152ae4c80"
            ]
        ]
    },
    {
        "id": "0599c19152ae4c80",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "robot_gps's",
        "func": "msg = {payload:[]}\nrobot_states = global.get(\"robot_states\")\nfor(const robot_name in robot_states){\n    r = robot_states[robot_name]\n    msg.payload.push(r.gui.gps)\n}\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 280,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "84763f6e6162102a",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "center map on selected robot",
        "func": "gui_state = global.get(\"gui\")\n\nif(!(gui_state.follow_selected_vehicle)){\n    return\n}\n\n\nselected_robot_name = gui_state.selected_robot_name\nrobot_states = global.get(\"robot_states\")\n\nif(!(selected_robot_name in robot_states)){\n    return\n}\nr = robot_states[selected_robot_name]\n\nif(!(r.gui.selected)){\n    return\n}\n\nm = {\"payload\": {\n        \"command\":{\n            \"lat\": r.base.lat,\n            \"lon\": r.base.lon\n        }\n    }}\n    \nreturn m",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 320,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "eb0c3ad39ee41a83",
        "type": "inject",
        "z": "65c60c3b274f73e3",
        "name": "0.5s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 710,
        "y": 320,
        "wires": [
            [
                "84763f6e6162102a"
            ]
        ]
    },
    {
        "id": "87855a030ad4b56e",
        "type": "ui_switch",
        "z": "65c60c3b274f73e3",
        "name": "planning mode",
        "label": "Planning Mode",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 540,
        "y": 640,
        "wires": [
            [
                "d01a1c27b3eb717f",
                "5096e7318cafb35a"
            ]
        ]
    },
    {
        "id": "d01a1c27b3eb717f",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "set map clickability",
        "func": "return {\n    payload:{\n        command:{\n            hiderightclick: !msg.payload\n            \n        }}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 640,
        "wires": [
            [
                "7e03fe39a9e4785c"
            ]
        ]
    },
    {
        "id": "00cf2d88e242ecc9",
        "type": "config",
        "z": "65c60c3b274f73e3",
        "name": "planning",
        "properties": [
            {
                "p": "planning",
                "pt": "global",
                "to": "{\"plans\":{},\"tracks\":{}}",
                "tot": "json"
            }
        ],
        "active": false,
        "x": 1280,
        "y": 180,
        "wires": []
    },
    {
        "id": "c36e098b35484df1",
        "type": "ui_text_input",
        "z": "65c60c3b274f73e3",
        "name": "lat,lon",
        "label": "Lat,Lon",
        "tooltip": "LAT, LON input",
        "group": "a891e5f5f2effe35",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "latlon",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 2440,
        "wires": [
            [
                "959cd51c0cd7ca20"
            ]
        ]
    },
    {
        "id": "b35ff4ff8ec16352",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "get/set selected wp",
        "func": "reset = [\n    {payload:\"\"},\n    {payload:\"\"},\n    {payload:\"\"},\n    {payload:\"\"},\n    {payload:false}\n    ]\n    \ntitle = msg.payload.title\nif(title == \"--NO PLANS--\" || title == \"--NO WPS--\") return reset\n\nwp_name = title.slice(title.indexOf(\">\")+1)\n\nglobal.set(\"gui.selected_waypoint_name\", wp_name)\n\n\n\n\nplan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nif(!(plans)) return reset\nplan = plans[plan_name]\nif(!(plan)) return reset\nswp = plan.waypoints[wp_name]\nif(!(swp)) return reset\n\nlat = (swp.lat+\"\").substring(0,9)\nlon = (swp.lon+\"\").substring(0,9)\n\nreturn [\n    {payload: lat + \", \"+ lon},\n    {payload:swp.depth},\n    {payload:swp.rpm},\n    {payload:swp.speed},\n    {payload:swp.use_rpm}\n    ]",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2620,
        "wires": [
            [
                "c36e098b35484df1"
            ],
            [
                "6596fde6e6662884"
            ],
            [
                "1ce3149408193422"
            ],
            [
                "b5d55ffd8630fd60"
            ],
            [
                "7d1b8d23041dbcc3",
                "f265c0e56f9d21af"
            ]
        ]
    },
    {
        "id": "7d1b8d23041dbcc3",
        "type": "ui_switch",
        "z": "65c60c3b274f73e3",
        "name": "use_rpm",
        "label": "Use RPM",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 16,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "use_rpm",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 840,
        "y": 2600,
        "wires": [
            [
                "959cd51c0cd7ca20"
            ]
        ]
    },
    {
        "id": "6596fde6e6662884",
        "type": "ui_text_input",
        "z": "65c60c3b274f73e3",
        "name": "depth",
        "label": "Depth",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 13,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "depth",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 2480,
        "wires": [
            [
                "959cd51c0cd7ca20"
            ]
        ]
    },
    {
        "id": "1ce3149408193422",
        "type": "ui_text_input",
        "z": "65c60c3b274f73e3",
        "name": "RPM",
        "label": "RPM",
        "tooltip": "",
        "group": "a891e5f5f2effe35",
        "order": 14,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "rpm",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 2520,
        "wires": [
            [
                "959cd51c0cd7ca20"
            ]
        ]
    },
    {
        "id": "b5d55ffd8630fd60",
        "type": "ui_text_input",
        "z": "65c60c3b274f73e3",
        "name": "speed",
        "label": "Speed",
        "tooltip": "in m/s",
        "group": "a891e5f5f2effe35",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": false,
        "mode": "text",
        "delay": "0",
        "topic": "speed",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 830,
        "y": 2560,
        "wires": [
            [
                "959cd51c0cd7ca20"
            ]
        ]
    },
    {
        "id": "959cd51c0cd7ca20",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "validate and edit WP",
        "func": "plans = global.get(\"planning.plans\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplan = plans[plan_name]\nif(!(plan)){\n    return\n}\n\nname = global.get(\"gui.selected_waypoint_name\")\nif(!(name in plan.waypoints)){\n    return\n}\n\n\n\nswitch(msg.topic){\n    case(\"latlon\"):\n        // magic regex that checks for lat,lon formatting\n        const regexExp = /^((\\-?|\\+?)?\\d+(\\.\\d+)?),\\s*((\\-?|\\+?)?\\d+(\\.\\d+)?)$/gi;\n        if(regexExp.test(msg.payload)){\n            parts = msg.payload.split(\",\")\n            lat = parseFloat(parts[0])\n            lon = parseFloat(parts[1])\n            plan.waypoints[name].lat = lat\n            plan.waypoints[name].lon = lon\n        }else{\n            node.warn(\"Latlon format is bad:\"+msg.payload)\n            return {payload:false}    \n        }\n        break\n        \n    case(\"depth\"):\n        // should be a float\n        try{\n            depth = parseFloat(msg.payload) || 0\n            plan.waypoints[name].depth = depth\n        }catch{\n            node.warn(\"Depth is not float:\"+msg.payload)\n            return {payload:false}\n        }\n        break\n    case(\"rpm\"):\n        // should be an int\n        try{\n            rpm = parseInt(msg.payload) || 0\n            plan.waypoints[name].rpm = rpm\n        }catch{\n             node.warn(\"RPM is not int:\"+msg.payload)\n            return {payload:false}\n        }\n        break\n    case(\"speed\"):\n        // should be a float\n        try{\n            speed = parseFloat(msg.payload) || 0\n            plan.waypoints[name].speed = speed\n        }catch{\n            node.warn(\"Speed is not float:\"+msg.payload)\n            return {payload:false}\n        }\n        break\n    \n    case(\"use_rpm\"):\n        // the widget can only return good stuff, no need to check\n        plan.waypoints[name].use_rpm = msg.payload\n}\n\n// and finally, set the new version of the plan globally\nglobal.set(\"planning.plans\", plans)\nreturn {payload:true}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2520,
        "wires": [
            [
                "2a3c96232faf5eb1",
                "6ecdeb474d97bb05"
            ]
        ]
    },
    {
        "id": "2a3c96232faf5eb1",
        "type": "ui_led",
        "z": "65c60c3b274f73e3",
        "order": 17,
        "group": "a891e5f5f2effe35",
        "width": 3,
        "height": 1,
        "label": "OK:",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "#008000",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "square",
        "showGlow": true,
        "name": "wp gud",
        "x": 1320,
        "y": 2480,
        "wires": []
    },
    {
        "id": "0f340b20aa6be0bf",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "list plans",
        "func": "plans = global.get(\"planning.plans\")\n\n\nif(!(plans)){\n    return {payload:[{title:\"--NO PLANS--\"}]}  \n} \nif(Object.keys(plans).length < 1){\n    return {payload:[{title:\"--NO PLANS--\"}]}     \n}\n\nselected_plan_name = global.get(\"gui.selected_plan_name\")\nlist_items = []\nfor(const plan_name in plans){\n    \n    if(plan_name == selected_plan_name){\n        c = \"orange\"\n    }else{\n        c = \"black\"\n    }\n    title = \"<font color=\" + c +\">\" + plan_name\n    list_item = {title:title}\n    list_items.push(list_item)\n}\n\nreturn {payload:list_items}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 1640,
        "wires": [
            [
                "12e1c75e32095cfb"
            ]
        ]
    },
    {
        "id": "12e1c75e32095cfb",
        "type": "ui_list",
        "z": "65c60c3b274f73e3",
        "group": "a891e5f5f2effe35",
        "name": "Plan list",
        "order": 4,
        "width": 6,
        "height": 3,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 520,
        "y": 1640,
        "wires": [
            [
                "f1bfe65ccc40afd7"
            ]
        ]
    },
    {
        "id": "f1bfe65ccc40afd7",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "set selected plan",
        "func": "title = msg.payload.title\nif(title == \"--NO PLANS--\") return\nplan_name = title.slice(title.indexOf(\">\")+1)\n\nglobal.set(\"gui.selected_plan_name\", plan_name)\n\nreturn {payload:plan_name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1640,
        "wires": [
            [
                "183bd5b7b2e98b79",
                "a7eba2ef10edab1f",
                "66be8a1b9908737a",
                "389bc260103b7207"
            ]
        ]
    },
    {
        "id": "46fcc943a269e1d7",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "new plan",
        "group": "a891e5f5f2effe35",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "New Plan",
        "tooltip": "Create a new empty mission plan",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-map",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 380,
        "y": 1780,
        "wires": [
            [
                "5fc53fc5f677e010",
                "c4ac075074761e27"
            ]
        ]
    },
    {
        "id": "5fc53fc5f677e010",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "create and select new plan",
        "func": "function new_plan(){\n    t = new Date(Date.now()).toTimeString().slice(0,8)\n    return {\n        name:\"NEW PLAN-\"+ t,\n        waypoints:{},\n        waypoint_order:[]\n    }\n}\n\nplan = new_plan()\nplans = global.get(\"planning.plans\")\nplans[plan.name] = plan\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_plan_name\", plan.name)\n\nreturn {payload:plan, topic:\"new_plan\"}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1800,
        "wires": [
            [
                "06b52e62f1cf32f9"
            ]
        ]
    },
    {
        "id": "f68e69985169cd78",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "list waypoints",
        "func": "plans = global.get(\"planning.plans\")\nselected_plan_name = global.get(\"gui.selected_plan_name\")\nselected_waypoint_name = global.get(\"gui.selected_waypoint_name\")\nplan = plans[selected_plan_name]\nif(!(plan)) return {payload:[{title:\"--NO PLAN--\"}]}\n\nlist_items = []\nfor(const wp_name of plan.waypoint_order){\n    \n    if(wp_name == selected_waypoint_name){\n        c = \"orange\"\n    }else{\n        c = \"black\"\n    }\n    title = \"<font color=\" + c +\">\" + wp_name\n    \n    wp = plan.waypoints[wp_name]\n    desc = \"D:\"+wp.depth + \"m \"\n    if(wp.use_rpm) desc += wp.rpm+\"RPM\"\n    else desc += wp.speed+\" m/s\"\n    desc = \"<font color=\" + c +\">\" + desc\n    \n    list_item = {\n        title:title,\n        description:desc\n    }\n    list_items.push(list_item)\n}\n\nif(list_items.length > 0){\n    return {payload:list_items}    \n}else{\n    return {payload:[{title:\"--NO WPS--\"}]}\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 2640,
        "wires": [
            [
                "5e25569da4a16b0b"
            ]
        ]
    },
    {
        "id": "5e25569da4a16b0b",
        "type": "ui_list",
        "z": "65c60c3b274f73e3",
        "group": "a891e5f5f2effe35",
        "name": "wp list",
        "order": 11,
        "width": 6,
        "height": 3,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 470,
        "y": 2640,
        "wires": [
            [
                "b35ff4ff8ec16352"
            ]
        ]
    },
    {
        "id": "e2f686ad8c4ade79",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_point",
        "mode": "link",
        "links": [
            "42cf4dd1c1379d75"
        ],
        "x": 435,
        "y": 180,
        "wires": []
    },
    {
        "id": "bcee15afbe079e57",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "point",
        "info": "",
        "x": 510,
        "y": 180,
        "wires": []
    },
    {
        "id": "42cf4dd1c1379d75",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_from_point",
        "links": [
            "e2f686ad8c4ade79"
        ],
        "x": 265,
        "y": 820,
        "wires": [
            [
                "c371b50c74bc5dee"
            ]
        ]
    },
    {
        "id": "70ee094504298935",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "point",
        "info": "",
        "x": 190,
        "y": 820,
        "wires": []
    },
    {
        "id": "4dd57f589bb24f4f",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "point can only happen if planning mode = true",
        "info": "",
        "x": 310,
        "y": 780,
        "wires": []
    },
    {
        "id": "c371b50c74bc5dee",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "add new wp to selected_plan",
        "func": "point = msg.payload\nif(!point.name || point.name===\"\") return\n\nplans = global.get(\"planning.plans\")\nif(!(plans)){\n    node.warn(\"Plans:\"+plans)\n    return\n}\n\nplan_name = global.get(\"gui.selected_plan_name\")\nplan = plans[plan_name]\n\n\nfunction new_wp(point){\n    return {\n        name:point.name,\n        lat:point.lat,\n        lon:point.lon,\n        depth:0,\n        rpm:0,\n        speed:0,\n        use_rpm:false\n    }\n}\n\nwp = new_wp(point)\nplan.waypoints[wp.name] = wp\nplan.waypoint_order.push(wp.name)\nplans[plan_name] = plan\nglobal.set(\"planning.plans\", plans)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 820,
        "wires": [
            [
                "ea992bd9a2452f80",
                "c6111a3afd78f6dd",
                "50598fa1155faa55"
            ]
        ]
    },
    {
        "id": "ea992bd9a2452f80",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "remove point from map, select wp",
        "func": "global.set(\"gui.selected_waypoint_name\", msg.payload.name)\n\nreturn {payload:{\n    \"action\":\"delete\",\n    \"name\":msg.payload.name,\n    \"deleted\":true\n}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 820,
        "wires": [
            [
                "b185f6dbb37952e9"
            ]
        ]
    },
    {
        "id": "c60057a14b780187",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 730,
        "y": 860,
        "wires": []
    },
    {
        "id": "c1a9221f5cb68d31",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_update_listed_waypoints",
        "links": [
            "c6111a3afd78f6dd",
            "183bd5b7b2e98b79",
            "7e270ac4d823cbc0",
            "a89d30a55f0d8f15",
            "c4ac075074761e27",
            "2b59a55e85d5a494",
            "f9e34b689d61865f",
            "6ecdeb474d97bb05",
            "0db429c1a28c5125",
            "e892c74e5c27aee1",
            "2a1a62cfc5cae84d",
            "5c7f36f879d73a9b"
        ],
        "x": 215,
        "y": 2640,
        "wires": [
            [
                "f68e69985169cd78"
            ]
        ]
    },
    {
        "id": "c6111a3afd78f6dd",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31"
        ],
        "x": 625,
        "y": 860,
        "wires": []
    },
    {
        "id": "183bd5b7b2e98b79",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31"
        ],
        "x": 845,
        "y": 1660,
        "wires": []
    },
    {
        "id": "d68e96ba20db6bb1",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 960,
        "y": 1660,
        "wires": []
    },
    {
        "id": "1eaf2df713b5d698",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 100,
        "y": 2640,
        "wires": []
    },
    {
        "id": "f265c0e56f9d21af",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "just trigger",
        "func": "return {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2680,
        "wires": [
            [
                "c15482e7569c2dda",
                "5fa6ab3ca15b659e",
                "5c7f36f879d73a9b"
            ]
        ]
    },
    {
        "id": "c4ac075074761e27",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31"
        ],
        "x": 525,
        "y": 1760,
        "wires": []
    },
    {
        "id": "131e486d1857bc3d",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 640,
        "y": 1760,
        "wires": []
    },
    {
        "id": "6b9216a6aec78960",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 255,
        "y": 1680,
        "wires": [
            [
                "0f340b20aa6be0bf"
            ]
        ]
    },
    {
        "id": "60e607fcad0d938d",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 160,
        "y": 1680,
        "wires": []
    },
    {
        "id": "34b418616dff4704",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 215,
        "y": 2600,
        "wires": [
            [
                "f68e69985169cd78"
            ]
        ]
    },
    {
        "id": "bb746a1ebd04cf1f",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 120,
        "y": 2600,
        "wires": []
    },
    {
        "id": "d847bf3e1bd6143b",
        "type": "config",
        "z": "65c60c3b274f73e3",
        "name": "gui",
        "properties": [
            {
                "p": "gui",
                "pt": "global",
                "to": "{\"selected_robot_name\":null,\"selected_waypoint_name\":null,\"selected_plan_name\":null,\"selected_track_name\":null,\"drawn_track_names\":null,\"draw_tracks\":false,\"follow_selected_vehicle\":false,\"bt_tip_log_len\":20,\"planning_mode\":false,\"drawn_on_map\":null}",
                "tot": "json"
            }
        ],
        "active": true,
        "x": 1290,
        "y": 140,
        "wires": []
    },
    {
        "id": "c64c7c9fbc69557c",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 305,
        "y": 640,
        "wires": [
            [
                "84dfa6ecdba12005"
            ]
        ]
    },
    {
        "id": "71bfde50ae8e91d3",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 220,
        "y": 640,
        "wires": []
    },
    {
        "id": "84dfa6ecdba12005",
        "type": "change",
        "z": "65c60c3b274f73e3",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 640,
        "wires": [
            [
                "87855a030ad4b56e"
            ]
        ]
    },
    {
        "id": "5096e7318cafb35a",
        "type": "change",
        "z": "65c60c3b274f73e3",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gui.planning_mode",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 680,
        "wires": [
            [
                "836e9b2d666ea992"
            ]
        ]
    },
    {
        "id": "df49c5e8f94952de",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "put selected wp handle on map",
        "func": "planning_mode = global.get(\"gui.planning_mode\")\nif(!planning_mode) {\n    //node.warn(\"Not in planning\")\n    return\n}\n\nswp_name = global.get(\"gui.selected_waypoint_name\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nplan = plans[plan_name]\nif(!(plan)){\n    //node.warn(\"No plan\")\n    return\n}\nswp = plan.waypoints[swp_name]\n\n\n\n\n\n// then put the select wp on the map\n// if there is a selected wp\n//node.warn(\"Marker for\"+swp.name)\nif(swp){\n    return {payload:\n        {\n            action:\"point\",\n            name:swp.name+\"_handle\",\n            label:null,\n            layer:\"planning\",\n            draggable:true,\n            lat:swp.lat,\n            lon:swp.lon,\n            ttl:0,\n            icon:\"circle\",\n            iconColor:\"orange\"\n        }}\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1080,
        "wires": [
            [
                "c7d4d5de96d19781",
                "d443219a2ff95383"
            ]
        ]
    },
    {
        "id": "bb3002ce85983e34",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_update_markers_on_map",
        "links": [
            "836e9b2d666ea992",
            "c15482e7569c2dda",
            "503d00839a6bc893",
            "915f50a44adbc1b1",
            "a4c71623ce47e9e6",
            "50598fa1155faa55",
            "a7eba2ef10edab1f",
            "2a61996a1d3b6320",
            "86149028f57aa271",
            "5ad9f131ddd8bb21",
            "0e76935522f9aebc",
            "23c5e0d877fa805e"
        ],
        "x": 375,
        "y": 1060,
        "wires": [
            [
                "d2f284617e677636"
            ]
        ]
    },
    {
        "id": "52e8d0416334a3c6",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 240,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b27a799d2b2389a3",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1070,
        "y": 680,
        "wires": []
    },
    {
        "id": "836e9b2d666ea992",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 935,
        "y": 680,
        "wires": []
    },
    {
        "id": "95bf09d8a6505ee6",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1110,
        "y": 2640,
        "wires": []
    },
    {
        "id": "c15482e7569c2dda",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 975,
        "y": 2640,
        "wires": []
    },
    {
        "id": "6ecdeb474d97bb05",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31"
        ],
        "x": 1235,
        "y": 2520,
        "wires": []
    },
    {
        "id": "fc9dc6f796536d2c",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 1340,
        "y": 2520,
        "wires": []
    },
    {
        "id": "d2f284617e677636",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "clear planning layer",
        "func": "// get the list of stuff we drew before and delete them all\ndom = global.get(\"gui.drawn_on_map\")\nif(!dom){\n    dom = new Set()    \n} \n\n\n// delete all the markers one by one because\n// for some reason the clear layer\n// thing doesnt delete them proper?\nfor(const item of dom){\n    p = {name:item, deleted:true, lat:0, lon:0}\n    node.send({payload:p})\n}\ndom = new Set()\n\n// clear the planning layer\n// and trigger some other stuff\nreturn [\n    {payload:{command:{clear:\"planning\"}}},\n    {}\n]",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1060,
        "wires": [
            [
                "c7d4d5de96d19781"
            ],
            [
                "df49c5e8f94952de",
                "86c0559201508b50",
                "087bc95837a9d012"
            ]
        ]
    },
    {
        "id": "86c0559201508b50",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "draw plans",
        "func": "selected_plan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nselected_wp_name = global.get(\"gui.selected_waypoint_name\")\n\nfor(const plan_name in plans){\n    c = \"grey\"\n    line_width = 0.5\n    if(plan_name == selected_plan_name){\n        c = \"orange\"\n        line_width = 1.5\n    }\n    plan = plans[plan_name]\n    line = []\n    for(const wp_name of plan.waypoint_order){\n        wp = plan.waypoints[wp_name]\n        line.push([wp.lat, wp.lon])\n        \n        // also put a marker where the point is\n        // with the depth/rpm as label\n        // for the selected plan only\n        label = null\n        if(plan_name == selected_plan_name){\n            label = wp.name+\"(\"+wp.depth + \"m,\"\n            if(wp.use_rpm) label += wp.rpm+\"RPM)\"\n            else label += wp.speed+\" m/s)\"\n        }\n        \n        icon_color = \"grey\"\n        if(plan_name == selected_plan_name){\n            icon_color = \"#3f90bf\" //nice blue\n            if(wp_name == selected_wp_name) icon_color = \"orange\"\n        }\n        \n        \n        node.send({\n            payload:{\n                name: wp_name+\"_circle\",\n                radius: 3,\n                color: icon_color,\n                fillColor: icon_color,\n                lat: wp.lat,\n                lon: wp.lon,\n                label: label,\n                layer: \"planning\",\n                clickable: false\n            }\n        })\n    }\n    node.send(\n        {payload:{\n            name: plan_name+\"_plan_lines\",\n            line: line,\n            color: c,\n            layer: \"planning\",\n            width: line_width,\n        }})\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1120,
        "wires": [
            [
                "c7d4d5de96d19781",
                "d443219a2ff95383"
            ]
        ]
    },
    {
        "id": "7d660feb1bc9828d",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_move",
        "mode": "link",
        "links": [
            "098b89599a22a190"
        ],
        "x": 435,
        "y": 220,
        "wires": []
    },
    {
        "id": "9c91a7737e68d627",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "move",
        "info": "",
        "x": 510,
        "y": 220,
        "wires": []
    },
    {
        "id": "e52c7386b33fd223",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "update lat lon of wp",
        "func": "// {\"name\":\"t3\",\n// \"label\":\"t3\",\n// \"layer\":\"planning\",\n// \"draggable\":true,\n// \"lat\":58.251455,\n// \"lon\":11.456615,\n// \"hdg\":0,\n// \"ttl\":0,\n// \"icon\":\"circle\",\n// \"iconColor\":\"#910000\",\n// \"action\":\"move\",\n// \"from\":{\"lat\":58.251004,\"lon\":11.457687}}\n\nif(!global.get(\"gui.planning_mode\")) return {}\n\n// gotta assume a plan is selected\nselected_plan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nplan = plans[selected_plan_name]\n\nwp = msg.payload\n// wp.name is sth like \"XXX_handle\"\nreal_wp_name = wp.name.split(\"_\")[0]\n\nif(!(real_wp_name in plan.waypoints)){\n    node.warn(real_wp_name+\" not in selected plan:\"+selected_plan_name)\n    return\n}\n\nplan.waypoints[real_wp_name].lat = wp.lat\nplan.waypoints[real_wp_name].lon = wp.lon\n\nglobal.set(\"planning.plans\", plans)\n\nreturn {payload:{}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1280,
        "wires": [
            [
                "0db429c1a28c5125",
                "5a1eb09333cce11a",
                "915f50a44adbc1b1"
            ]
        ]
    },
    {
        "id": "098b89599a22a190",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "",
        "links": [
            "7d660feb1bc9828d"
        ],
        "x": 325,
        "y": 1280,
        "wires": [
            [
                "e52c7386b33fd223"
            ]
        ]
    },
    {
        "id": "8b199fc92fdeb6d7",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "move",
        "info": "",
        "x": 250,
        "y": 1280,
        "wires": []
    },
    {
        "id": "0db429c1a28c5125",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31"
        ],
        "x": 595,
        "y": 1240,
        "wires": []
    },
    {
        "id": "363c9e185561e5d1",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 720,
        "y": 1240,
        "wires": []
    },
    {
        "id": "e25ea0dde8910944",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "selected wp properties",
        "func": "wp_name = global.get(\"gui.selected_waypoint_name\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplans = global.get(\"planning.plans\")\nplan = plans[plan_name]\nswp = plan.waypoints[wp_name]\n\nlat = (swp.lat+\"\").substring(0,9)\nlon = (swp.lon+\"\").substring(0,9)\n\nreturn [\n    {payload: lat + \", \"+ lon},\n    {payload:swp.depth},\n    {payload:swp.rpm},\n    {payload:swp.speed},\n    {payload:swp.use_rpm}\n    ]",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2520,
        "wires": [
            [
                "c36e098b35484df1"
            ],
            [
                "6596fde6e6662884"
            ],
            [
                "1ce3149408193422"
            ],
            [
                "b5d55ffd8630fd60"
            ],
            [
                "7d1b8d23041dbcc3",
                "f265c0e56f9d21af"
            ]
        ]
    },
    {
        "id": "a4bca789dbb9018b",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_update_selected_wp_properties",
        "links": [
            "5a1eb09333cce11a"
        ],
        "x": 315,
        "y": 2520,
        "wires": [
            [
                "e25ea0dde8910944"
            ]
        ]
    },
    {
        "id": "b2750038d28e1920",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update selected wp properties",
        "info": "",
        "x": 160,
        "y": 2520,
        "wires": []
    },
    {
        "id": "d0e17223e8d9baa8",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update selected wp properties",
        "info": "",
        "x": 760,
        "y": 1280,
        "wires": []
    },
    {
        "id": "5a1eb09333cce11a",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "a4bca789dbb9018b"
        ],
        "x": 595,
        "y": 1280,
        "wires": []
    },
    {
        "id": "51fb13b3a7c63078",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 750,
        "y": 1320,
        "wires": []
    },
    {
        "id": "915f50a44adbc1b1",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 595,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d974149e3e68ba63",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "clear unknown layer",
        "func": "return {payload:{command:{clear:\"unknown\"}}}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 360,
        "wires": [
            [
                "3910098f87fb5eac"
            ]
        ]
    },
    {
        "id": "10e1cb2c6ad250d0",
        "type": "inject",
        "z": "65c60c3b274f73e3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 720,
        "y": 360,
        "wires": [
            [
                "d974149e3e68ba63"
            ]
        ]
    },
    {
        "id": "dd2579db1a75a915",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 760,
        "y": 900,
        "wires": []
    },
    {
        "id": "50598fa1155faa55",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 625,
        "y": 900,
        "wires": []
    },
    {
        "id": "07bfda0c88113da1",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 375,
        "y": 1020,
        "wires": [
            [
                "d2f284617e677636"
            ]
        ]
    },
    {
        "id": "a9fb56eca8203960",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 280,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2990ad9cc099196a",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 990,
        "y": 1620,
        "wires": []
    },
    {
        "id": "a7eba2ef10edab1f",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 845,
        "y": 1620,
        "wires": []
    },
    {
        "id": "a252ee0fd438b161",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_update_list_of_plans",
        "links": [
            "06b52e62f1cf32f9",
            "887a04d5bcde6631",
            "389bc260103b7207"
        ],
        "x": 255,
        "y": 1640,
        "wires": [
            [
                "0f340b20aa6be0bf",
                "ceae70c2ba4b7830",
                "a9e58882f4e7f8c8"
            ]
        ]
    },
    {
        "id": "50f814d2d1708729",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of plans",
        "info": "",
        "x": 130,
        "y": 1640,
        "wires": []
    },
    {
        "id": "06b52e62f1cf32f9",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "a252ee0fd438b161"
        ],
        "x": 1105,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d5844b9c1f827b61",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of plans",
        "info": "",
        "x": 1230,
        "y": 1800,
        "wires": []
    },
    {
        "id": "85fcefa190bd58ec",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "rename plan",
        "group": "a891e5f5f2effe35",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Rename",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-pencil",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 1860,
        "wires": [
            [
                "e6ae60c52e377774"
            ]
        ]
    },
    {
        "id": "f5a86263da39c811",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "delete plan",
        "group": "a891e5f5f2effe35",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Delete the selected plan",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 1900,
        "wires": [
            [
                "12de08ecd70dbfa4"
            ]
        ]
    },
    {
        "id": "200284fa17ca403a",
        "type": "ui_toast",
        "z": "65c60c3b274f73e3",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Rename",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "rename",
        "x": 720,
        "y": 1860,
        "wires": [
            [
                "0be06dba0165bcee"
            ]
        ]
    },
    {
        "id": "e6ae60c52e377774",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "Prepare rename",
        "func": "name = global.get(\"gui.selected_plan_name\")\nif(!name) return\nreturn {payload:\"Rename \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1860,
        "wires": [
            [
                "200284fa17ca403a"
            ]
        ]
    },
    {
        "id": "0be06dba0165bcee",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "rename selected plan",
        "func": "if(msg.payload == \"Cancel\") return\n\nnew_name = msg.payload\n\nplans = global.get(\"planning.plans\")\nif(new_name in Object.keys(plans)) return\n\nplan = plans[global.get(\"gui.selected_plan_name\")]\ndelete plans[plan.name]\n\nplan.name = new_name\nplans[new_name] = plan\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_plan_name\", new_name)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1860,
        "wires": [
            [
                "06b52e62f1cf32f9"
            ]
        ]
    },
    {
        "id": "12de08ecd70dbfa4",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "Prepare delete",
        "func": "name = global.get(\"gui.selected_plan_name\")\nif(!name) return\nreturn {payload:\"Delete \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1900,
        "wires": [
            [
                "f21a5b2d8b3c6c96"
            ]
        ]
    },
    {
        "id": "f21a5b2d8b3c6c96",
        "type": "ui_toast",
        "z": "65c60c3b274f73e3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "DELETE",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "delete",
        "x": 710,
        "y": 1900,
        "wires": [
            [
                "b0f090ceb3b734ad"
            ]
        ]
    },
    {
        "id": "b0f090ceb3b734ad",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "delete selected plan",
        "func": "if(msg.payload == \"Cancel\") return\n\nplans = global.get(\"planning.plans\")\nplan = plans[global.get(\"gui.selected_plan_name\")]\ndelete plans[plan.name]\n\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_plan_name\", null)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1900,
        "wires": [
            [
                "06b52e62f1cf32f9",
                "2a61996a1d3b6320",
                "e892c74e5c27aee1"
            ]
        ]
    },
    {
        "id": "5089a1246d3fb479",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1250,
        "y": 1900,
        "wires": []
    },
    {
        "id": "2a61996a1d3b6320",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 1105,
        "y": 1900,
        "wires": []
    },
    {
        "id": "e892c74e5c27aee1",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31"
        ],
        "x": 1105,
        "y": 1940,
        "wires": []
    },
    {
        "id": "a185f27882a0d846",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 1220,
        "y": 1940,
        "wires": []
    },
    {
        "id": "3910098f87fb5eac",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 1115,
        "y": 300,
        "wires": []
    },
    {
        "id": "01d1b68c023ae715",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 1200,
        "y": 300,
        "wires": []
    },
    {
        "id": "c7d4d5de96d19781",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 955,
        "y": 1060,
        "wires": []
    },
    {
        "id": "9178d4c8aa1e20e1",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 1030,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b185f6dbb37952e9",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 935,
        "y": 820,
        "wires": []
    },
    {
        "id": "314311b14f8985f4",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 1010,
        "y": 820,
        "wires": []
    },
    {
        "id": "d443219a2ff95383",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "accumulate drawn objects",
        "func": "dom = global.get(\"gui.drawn_on_map\")\nif(!dom){\n    dom = new Set()    \n} \ndom.add(msg.payload.name)\nglobal.set(\"gui.drawn_on_map\", dom)",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "7e03fe39a9e4785c",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_from_map_setup",
        "mode": "link",
        "links": [
            "1e0bd19ab17b797e"
        ],
        "x": 935,
        "y": 640,
        "wires": []
    },
    {
        "id": "af6505f909c5191f",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "map",
        "info": "",
        "x": 1010,
        "y": 640,
        "wires": []
    },
    {
        "id": "5e5e0abaf6ad063c",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "rename wp",
        "group": "a891e5f5f2effe35",
        "order": 18,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Rename",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-pencil",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 2800,
        "wires": [
            [
                "fd9f37f1f59d843a"
            ]
        ]
    },
    {
        "id": "e994850c3d34e5c7",
        "type": "ui_toast",
        "z": "65c60c3b274f73e3",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Rename",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "rename",
        "x": 660,
        "y": 2800,
        "wires": [
            [
                "e9b740d9e80845c1"
            ]
        ]
    },
    {
        "id": "fd9f37f1f59d843a",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "Prepare rename",
        "func": "name = global.get(\"gui.selected_waypoint_name\")\nif(!name) return\nreturn {payload:\"Rename \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2800,
        "wires": [
            [
                "e994850c3d34e5c7"
            ]
        ]
    },
    {
        "id": "e9b740d9e80845c1",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "rename selected wp",
        "func": "if(msg.payload == \"Cancel\") return\n\nnew_name = msg.payload\n\nplans = global.get(\"planning.plans\")\nplan_name = global.get(\"gui.selected_plan_name\")\nplan = plans[plan_name]\nif(new_name in Object.keys(plan.waypoints)) return\n\nwp = plan.waypoints[global.get(\"gui.selected_waypoint_name\")]\ndelete plan.waypoints[wp.name]\n\nwp_i = plan.waypoint_order.indexOf(wp.name)\nwp.name = new_name\n\nplan.waypoints[new_name] = wp\nplan.waypoint_order[wp_i] = wp.name\n\n\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_waypoint_name\", new_name)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 2800,
        "wires": [
            [
                "2a1a62cfc5cae84d",
                "86149028f57aa271"
            ]
        ]
    },
    {
        "id": "4c0d1f4c2b893c06",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "delete wp",
        "group": "a891e5f5f2effe35",
        "order": 19,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Delete the selected wp",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 320,
        "y": 2840,
        "wires": [
            [
                "6142dcb33f97df51"
            ]
        ]
    },
    {
        "id": "6142dcb33f97df51",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "Prepare delete",
        "func": "name = global.get(\"gui.selected_waypoint_name\")\nif(!name) return\nreturn {payload:\"Delete \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 2840,
        "wires": [
            [
                "35e64f7efad6744b"
            ]
        ]
    },
    {
        "id": "35e64f7efad6744b",
        "type": "ui_toast",
        "z": "65c60c3b274f73e3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "DELETE",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "delete",
        "x": 650,
        "y": 2840,
        "wires": [
            [
                "bc43cdcacce6b0b2"
            ]
        ]
    },
    {
        "id": "bc43cdcacce6b0b2",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "delete selected wp",
        "func": "if(msg.payload == \"Cancel\") return\n\nplans = global.get(\"planning.plans\")\nplan = plans[global.get(\"gui.selected_plan_name\")]\nwp = plan.waypoints[global.get(\"gui.selected_waypoint_name\")]\ndelete plan.waypoints[wp.name]\nwp_i = plan.waypoint_order.indexOf(wp.name)\nplan.waypoint_order.splice(wp_i, wp_i)\n\n\nglobal.set(\"planning.plans\", plans)\nglobal.set(\"gui.selected_waypoint_name\", null)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 2840,
        "wires": [
            [
                "2a1a62cfc5cae84d",
                "86149028f57aa271"
            ]
        ]
    },
    {
        "id": "2cf5581bf4aff64e",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 1140,
        "y": 2800,
        "wires": []
    },
    {
        "id": "2a1a62cfc5cae84d",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31"
        ],
        "x": 1025,
        "y": 2800,
        "wires": []
    },
    {
        "id": "fd895aa3247f4476",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1170,
        "y": 2840,
        "wires": []
    },
    {
        "id": "86149028f57aa271",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 1025,
        "y": 2840,
        "wires": []
    },
    {
        "id": "17b5ae972bf306a0",
        "type": "ui_list",
        "z": "65c60c3b274f73e3",
        "group": "c68132315359e81c",
        "name": "track list",
        "order": 4,
        "width": 6,
        "height": 4,
        "lineType": "two",
        "actionType": "click",
        "allowHTML": true,
        "outputs": 1,
        "topic": "",
        "x": 460,
        "y": 3080,
        "wires": [
            [
                "1ecb86213b200219"
            ]
        ]
    },
    {
        "id": "18ebb3de66d804a6",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "list tracks",
        "func": "tracks = global.get(\"planning.tracks\") || {}\nglobal.set(\"planning.tracks\", tracks)\n\ndrawn_tracks = global.get(\"gui.drawn_track_names\") || new Set()\nglobal.set(\"gui.drawn_track_names\", drawn_tracks)\n\n\nif(!(tracks)){\n    return {payload:[{title:\"--NO TRACKS--\"}]}  \n} \nif(Object.keys(tracks).length < 1){\n    return {payload:[{title:\"--NO TRACKS--\"}]}     \n}\n\nlist_items = []\nfor(const track_name in tracks){\n    track = tracks[track_name]\n    c = \"black\"\n    if(track_name == global.get(\"gui.selected_track_name\")){\n        c = \"orange\"\n    }\n    \n    title = \"<font color=\" + c +\">\" + track.name\n    \n    if(track.recording){\n        duration_str = \"🔴 \" + parseInt((Date.now() - track.start)/1000) + \"s \"\n        title = duration_str + title\n    }\n    \n    if(drawn_tracks.has(track_name)){\n        title = \"🗺 ️\" + title\n    }\n    \n    desc = \"\"\n    if(track.robot_name) desc += \"🤖:\"+track.robot_name\n    if(track.start && track.end){\n        duration = parseInt((track.end - track.start)/1000)\n        if(duration > 120) duration_str = parseInt(duration/60) + \"m\" + duration%60+\"s\"\n        else duration_str = duration + \"s\"\n        desc += \" ⏲️:\" + duration_str\n    }\n    \n    desc = \"<font color=\" + c +\">\" + desc\n    \n    list_item = {title:title, description:desc}\n    list_items.push(list_item)\n}\n\nreturn {payload:list_items}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 3080,
        "wires": [
            [
                "17b5ae972bf306a0"
            ]
        ]
    },
    {
        "id": "9e4dc1dfcbcf273a",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_update_track_list",
        "links": [
            "99a8b1e1f6f42347",
            "8a76125dbced6a15",
            "86c7eb05460bf065",
            "e8e6c12b50ea97fb",
            "0c34ba3ec1cfae86"
        ],
        "x": 205,
        "y": 3080,
        "wires": [
            [
                "18ebb3de66d804a6",
                "42294f1d6fd2420c"
            ]
        ]
    },
    {
        "id": "35d3cfdd994e02a9",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update track list",
        "info": "",
        "x": 100,
        "y": 3080,
        "wires": []
    },
    {
        "id": "548c98181954e0bb",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "new track",
        "group": "c68132315359e81c",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "New Track",
        "tooltip": "Create a new track",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-map",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 320,
        "y": 3220,
        "wires": [
            [
                "deceb8a24bb64930"
            ]
        ]
    },
    {
        "id": "deceb8a24bb64930",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "new track",
        "func": "function new_track(){\n    now = Date.now()\n    t = new Date(now).toTimeString().slice(0,8)\n    return {\n        // name should be\n        // start time - robot_name - mission name\n        name:\"Track-\"+ t,\n        start: null,\n        end: null,\n        robot_name: null,\n        recording: false,\n        data: []\n    }\n}\n\ntrack = new_track()\ntracks = global.get(\"planning.tracks\")\ntracks[track.name] = track\nglobal.set(\"planning.tracks\", tracks)\nglobal.set(\"gui.selected_track_name\", track.name)\n\nreturn {payload:track, topic:\"new_track\"}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 3220,
        "wires": [
            [
                "99a8b1e1f6f42347"
            ]
        ]
    },
    {
        "id": "99a8b1e1f6f42347",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "9e4dc1dfcbcf273a"
        ],
        "x": 595,
        "y": 3220,
        "wires": []
    },
    {
        "id": "1ecb86213b200219",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "set selected track",
        "func": "title = msg.payload.title\nif(title == \"--NO TRACKS--\") return\ntrack_name = title.slice(title.indexOf(\">\")+1)\n\nglobal.set(\"gui.selected_track_name\", track_name)\n\nreturn {payload:track_name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 3080,
        "wires": [
            [
                "18ebb3de66d804a6",
                "0e76935522f9aebc",
                "74addf97d915bda4"
            ]
        ]
    },
    {
        "id": "e33acbc846aa510f",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "delete track",
        "group": "c68132315359e81c",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "Delete the selected track",
        "color": "",
        "bgcolor": "Red",
        "className": "",
        "icon": "fa-trash",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 3260,
        "wires": [
            [
                "449b196d04392d97"
            ]
        ]
    },
    {
        "id": "449b196d04392d97",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "Prepare delete",
        "func": "name = global.get(\"gui.selected_track_name\")\nif(!name) return\nreturn {payload:\"Delete \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 3260,
        "wires": [
            [
                "e4c2a18511e58034"
            ]
        ]
    },
    {
        "id": "e4c2a18511e58034",
        "type": "ui_toast",
        "z": "65c60c3b274f73e3",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "DELETE",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "delete",
        "x": 670,
        "y": 3260,
        "wires": [
            [
                "0056037d4227ec33"
            ]
        ]
    },
    {
        "id": "0056037d4227ec33",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "delete selected track",
        "func": "if(msg.payload == \"Cancel\") return\n\ntracks = global.get(\"planning.tracks\")\ntrack = tracks[global.get(\"gui.selected_track_name\")]\ndelete tracks[track.name]\ndrawn_tracks = global.get(\"gui.drawn_track_names\")\ndrawn_tracks.delete(track.name)\n\nglobal.set(\"planning.tracks\", tracks)\nglobal.set(\"gui.selected_track_name\", null)\nglobal.set(\"gui.drawn_track_names\", drawn_tracks)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 3260,
        "wires": [
            [
                "8a76125dbced6a15",
                "23c5e0d877fa805e"
            ]
        ]
    },
    {
        "id": "8a76125dbced6a15",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "9e4dc1dfcbcf273a"
        ],
        "x": 1065,
        "y": 3300,
        "wires": []
    },
    {
        "id": "29f38a5e5f27cac5",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "rename track",
        "group": "c68132315359e81c",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Rename",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-pencil",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 3300,
        "wires": [
            [
                "d4f20f6df999404f"
            ]
        ]
    },
    {
        "id": "6342038c5b344e48",
        "type": "ui_toast",
        "z": "65c60c3b274f73e3",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Rename",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "rename",
        "x": 680,
        "y": 3300,
        "wires": [
            [
                "cbb10f7262a76111"
            ]
        ]
    },
    {
        "id": "d4f20f6df999404f",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "Prepare rename",
        "func": "name = global.get(\"gui.selected_track_name\")\nif(!name) return\nrtn = global.get(\"gui.recording_track_name\")\nif(name == rtn) return\nreturn {payload:\"Rename \"+ name}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 3300,
        "wires": [
            [
                "6342038c5b344e48"
            ]
        ]
    },
    {
        "id": "cbb10f7262a76111",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "rename selected track",
        "func": "if(msg.payload == \"Cancel\") return\n\nnew_name = msg.payload\n\ntracks = global.get(\"planning.tracks\")\nif(new_name in Object.keys(tracks)) return\n\ntrack = tracks[global.get(\"gui.selected_track_name\")]\ndelete tracks[track.name]\ndrawn_tracks = global.get(\"gui.drawn_track_names\")\ndrawn_tracks.delete(track.name)\n\n\ntrack.name = new_name\ntracks[new_name] = track\ndrawn_tracks.add(new_name)\nglobal.set(\"planning.tracks\", tracks)\nglobal.set(\"gui.selected_track_name\", new_name)\nglobal.set(\"gui.drawn_track_names\", drawn_tracks)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 3300,
        "wires": [
            [
                "8a76125dbced6a15",
                "23c5e0d877fa805e"
            ]
        ]
    },
    {
        "id": "2ffb972b3b696e28",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update track list",
        "info": "",
        "x": 1180,
        "y": 3300,
        "wires": []
    },
    {
        "id": "f55ec44e31806434",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "start record",
        "group": "c68132315359e81c",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Record",
        "tooltip": "Start recording tracks",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-play",
        "payload": "start",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 3340,
        "wires": [
            [
                "3aa5d353667931cd"
            ]
        ]
    },
    {
        "id": "b1f0b0408e1bf101",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "stop record",
        "group": "c68132315359e81c",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "Stop recording into this track",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-stop",
        "payload": "stop",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 3380,
        "wires": [
            [
                "3aa5d353667931cd"
            ]
        ]
    },
    {
        "id": "3aa5d353667931cd",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "setup recording",
        "func": "robot_name = global.get(\"gui.selected_robot_name\")\nif(!robot_name) return {}\n\ntracks = global.get(\"planning.tracks\")\nrecord = msg.payload == \"start\"\nstn = global.get(\"gui.selected_track_name\")\ntrack = tracks[stn]\n\nmessage = null\nif(record){\n    if(track.start == null) track.start = Date.now()\n    track.recording = true\n    track.robot_name = robot_name\n    message = \"recording_start\"\n}else{\n    if(track.recording) track.end = Date.now() \n    track.recording = false\n    track.data[track.data.length-1].annotation = \"recording_stop\"\n}\n        \n\nglobal.set(\"planning.tracks\", tracks)\n\nreturn {payload:message, topic:\"message\"}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 3360,
        "wires": [
            [
                "e8e6c12b50ea97fb",
                "c10d70cecc53d8e9"
            ]
        ]
    },
    {
        "id": "e8e6c12b50ea97fb",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "9e4dc1dfcbcf273a"
        ],
        "x": 975,
        "y": 3360,
        "wires": []
    },
    {
        "id": "dc0dd819532c75cd",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update track list",
        "info": "",
        "x": 1090,
        "y": 3360,
        "wires": []
    },
    {
        "id": "844b7bcc930e1da0",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_map_to_map_setup",
        "links": [
            "ecb32f1e69ab1244"
        ],
        "x": 205,
        "y": 3040,
        "wires": [
            [
                "18ebb3de66d804a6"
            ]
        ]
    },
    {
        "id": "611f228d1236484a",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "connected",
        "info": "",
        "x": 120,
        "y": 3040,
        "wires": []
    },
    {
        "id": "557d1122aa8559a7",
        "type": "inject",
        "z": "65c60c3b274f73e3",
        "name": "0.2s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "timestamp",
        "payload": "",
        "payloadType": "date",
        "x": 550,
        "y": 3400,
        "wires": [
            [
                "c10d70cecc53d8e9"
            ]
        ]
    },
    {
        "id": "c10d70cecc53d8e9",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "record",
        "func": "tracks = global.get(\"planning.tracks\")\nrobots = global.get(\"robot_states\")\n\nthere_is_recording = false\n\nfor(const track_name in tracks){\n    track = tracks[track_name]\n    if(track.recording){\n        robot = robots[track.robot_name]\n        // dont record if someone forgets to turn it off...\n        if(robot.gui.is_old){\n            track.recording = false\n            continue\n        }\n        // basically everything except the GUI stuff\n        r = {\n            last_update:robot.last_update,\n            base:JSON.parse(JSON.stringify(robot.base)),\n            bt:JSON.parse(JSON.stringify(robot.bt)),\n            annotation:null\n        }\n        if(msg.payload && msg.topic==\"message\"){\n            if(msg.payload != \"Cancel\") r.annotation = msg.payload\n        }\n        track.data.push(r)\n        there_is_recording = true\n    }\n}\n\n// only send a signal if there is a recording happening\nif(there_is_recording) return {}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 3400,
        "wires": [
            [
                "74752461385c4e8c"
            ]
        ]
    },
    {
        "id": "e2d73cfbd2e17b06",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "draw",
        "group": "c68132315359e81c",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Draw",
        "tooltip": "Draw the selected track on to the map",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-map-pin",
        "payload": "draw",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 3480,
        "wires": [
            [
                "bbc37a4e7da34fee"
            ]
        ]
    },
    {
        "id": "9d1bfd91b12283b6",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "delete",
        "group": "c68132315359e81c",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Remove",
        "tooltip": "Remove the selected track from the map",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-eraser",
        "payload": "delete",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 3520,
        "wires": [
            [
                "bbc37a4e7da34fee"
            ]
        ]
    },
    {
        "id": "bbc37a4e7da34fee",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "setup drawing",
        "func": "if(msg.payload == \"clear\"){\n    global.set(\"gui.drawn_track_names\", new Set())\n    return {}\n}\n\ntracks = global.get(\"planning.tracks\")\ndraw = msg.payload == \"draw\"\nstn = global.get(\"gui.selected_track_name\")\nif(!stn) return\n\ndrawn_track_names = global.get(\"gui.drawn_track_names\")\nif(drawn_track_names == null) drawn_track_names = new Set()\n\nif(draw) drawn_track_names.add(stn)\nelse drawn_track_names.delete(stn)\n\nglobal.set(\"gui.drawn_track_names\", drawn_track_names)\n\nreturn {}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 3520,
        "wires": [
            [
                "5ad9f131ddd8bb21",
                "0c34ba3ec1cfae86"
            ]
        ]
    },
    {
        "id": "32834dbd99db335a",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 810,
        "y": 3540,
        "wires": []
    },
    {
        "id": "5ad9f131ddd8bb21",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 675,
        "y": 3540,
        "wires": []
    },
    {
        "id": "442ccceadb377078",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "take note",
        "group": "c68132315359e81c",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Take note",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-indent",
        "payload": "Add text note to track",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 320,
        "y": 3420,
        "wires": [
            [
                "6609ceeeeb0325a4"
            ]
        ]
    },
    {
        "id": "6609ceeeeb0325a4",
        "type": "ui_toast",
        "z": "65c60c3b274f73e3",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Save",
        "cancel": "Cancel",
        "raw": false,
        "className": "",
        "topic": "message",
        "name": "take note",
        "x": 540,
        "y": 3440,
        "wires": [
            [
                "c10d70cecc53d8e9"
            ]
        ]
    },
    {
        "id": "087bc95837a9d012",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "draw tracks",
        "func": "drawn_track_names = global.get(\"gui.drawn_track_names\")\nif(!drawn_track_names) return\ntracks = global.get(\"planning.tracks\")\nselected_track_name = global.get(\"gui.selected_track_name\")\n\nfor(const track_name of drawn_track_names){\n    track = tracks[track_name]\n    line = []\n    // if we encounter a string instead of a state,\n    // we want to attach that string to the next state point\n    // and show that on the map\n    // obviously back-to-back strings will over-write but meh\n    point_icons = []\n    for(const i in track.data){\n        point = track.data[i]\n        \n        if(point.annotation){\n            point_icon = {\n                    action: \"point\",\n                    layer: \"tracks\",\n                    label: point.annotation,\n                    lat: point.base.lat,\n                    lon: point.base.lon,\n                    name: track_name+\"_annotation_\"+i,\n                    icon: \"fa-xl fa-sticky-note-o\",\n                    iconColor: \"cyan\"\n                }\n            \n            if(point.annotation === \"recording_start\"){\n                point_icon.icon = \"fa-xl fa-play\"\n                point_icon.label = null\n            } \n            if(point.annotation === \"recording_stop\"){\n                point_icon.icon = \"fa-xl fa-pause\"\n                point_icon.label = null\n            } \n            if(parseInt(i)+1 >= track.data.length){\n                point_icon.icon = \"fa-xl fa-stop\"\n                point_icon.label = null\n            }\n            if(i==0) point_icon.label = track_name\n            if(track_name != selected_track_name) point_icon.label = null\n            \n            node.send({payload:point_icon})\n        }\n        \n        line.push([point.base.lat,point.base.lon])\n    }\n    \n    color = \"cyan\"\n    if(track_name == selected_track_name) color=\"orange\"\n    node.send(\n        {payload:{\n            name: track_name+\"_track_lines\",\n            line: line,\n            color: color,\n            layer: \"tracks\",\n            width: 0.5,\n        }})\n    \n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1160,
        "wires": [
            [
                "c7d4d5de96d19781",
                "d443219a2ff95383"
            ]
        ]
    },
    {
        "id": "74752461385c4e8c",
        "type": "delay",
        "z": "65c60c3b274f73e3",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 860,
        "y": 3380,
        "wires": [
            [
                "e8e6c12b50ea97fb"
            ]
        ]
    },
    {
        "id": "366ebfd517618e5f",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 910,
        "y": 3080,
        "wires": []
    },
    {
        "id": "0e76935522f9aebc",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 775,
        "y": 3080,
        "wires": []
    },
    {
        "id": "0c34ba3ec1cfae86",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "9e4dc1dfcbcf273a"
        ],
        "x": 675,
        "y": 3500,
        "wires": []
    },
    {
        "id": "7cead59b70db4f36",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update track list",
        "info": "",
        "x": 780,
        "y": 3500,
        "wires": []
    },
    {
        "id": "0242a78a895ac92a",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update_markers_on_map",
        "info": "",
        "x": 1210,
        "y": 3260,
        "wires": []
    },
    {
        "id": "23c5e0d877fa805e",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "bb3002ce85983e34"
        ],
        "x": 1065,
        "y": 3260,
        "wires": []
    },
    {
        "id": "6b87ac50d37a8ff4",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "clear",
        "group": "c68132315359e81c",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Clear",
        "tooltip": "Remove all tracks from the map",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-trash",
        "payload": "clear",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 330,
        "y": 3560,
        "wires": [
            [
                "bbc37a4e7da34fee"
            ]
        ]
    },
    {
        "id": "2645246b449b3b32",
        "type": "ui_text",
        "z": "65c60c3b274f73e3",
        "group": "a891e5f5f2effe35",
        "order": 10,
        "width": 6,
        "height": 1,
        "name": "wp title",
        "label": "Waypoints of",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 620,
        "y": 1540,
        "wires": []
    },
    {
        "id": "7f9a76f30e75a916",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "toggle",
        "func": "function r(del, rename, start,stop, note){\n    return [\n        {enabled:del},\n        {enabled:rename},\n        {enabled:start},\n        {enabled:stop},\n        {enabled:note}\n        ]\n}\n\ndel = false\nrename = false\nstart = false\nstop = false\nnote = false\n\n\nstn = global.get(\"gui.selected_track_name\")\n// no selected track, disable all buttons\nif(!stn){\n    return r(del, rename, start, stop, note)\n}\n\ntracks = global.get(\"planning.tracks\")\ntrack = tracks[stn]\n\ndel = true\nrename = true\nstart = true\n\nif(track.recording){\n    stop = true\n    start = false\n    note = true\n}\n\nreturn r(del, rename, start, stop, note)\n",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 3360,
        "wires": [
            [
                "e33acbc846aa510f"
            ],
            [
                "29f38a5e5f27cac5",
                "e2d73cfbd2e17b06",
                "9d1bfd91b12283b6"
            ],
            [
                "f55ec44e31806434"
            ],
            [
                "b1f0b0408e1bf101"
            ],
            [
                "442ccceadb377078"
            ]
        ]
    },
    {
        "id": "df793e20cb200651",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_toggle track buttons",
        "links": [
            "74addf97d915bda4",
            "42294f1d6fd2420c"
        ],
        "x": 85,
        "y": 3360,
        "wires": [
            [
                "7f9a76f30e75a916"
            ]
        ]
    },
    {
        "id": "74addf97d915bda4",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "df793e20cb200651"
        ],
        "x": 775,
        "y": 3120,
        "wires": []
    },
    {
        "id": "fe096776962448ef",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle track buttons",
        "info": "",
        "x": 110,
        "y": 3300,
        "wires": []
    },
    {
        "id": "07d50675dad6e412",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle track buttons",
        "info": "",
        "x": 890,
        "y": 3120,
        "wires": []
    },
    {
        "id": "42294f1d6fd2420c",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "df793e20cb200651"
        ],
        "x": 275,
        "y": 3140,
        "wires": []
    },
    {
        "id": "917ae3064fdd9c5c",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle track buttons",
        "info": "",
        "x": 390,
        "y": 3140,
        "wires": []
    },
    {
        "id": "73b7afa63e760dc5",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "toggle",
        "func": "function r(mod, control){\n    return [\n        {enabled:mod},\n        {enabled:control}\n        ]\n}\n\nmod = false\ncontrol = false\n\nspn = global.get(\"gui.selected_plan_name\")\n// no selected track, disable all buttons\nif(!spn){\n    return r(mod, control)\n}\n\nplans = global.get(\"planning.plans\")\nplan = plans[spn]\n\nmod = true\ncontrol = true\n\nif(plan.waypoint_order.length == 0) control = false\n\nsrn = global.get(\"gui.selected_robot_name\")\nrobots = global.get(\"robot_states\")\nrob = robots[srn]\n\nif(!rob) control = false\nif(rob.gui.is_old) control = false\n\nreturn r(mod, control)\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 1960,
        "wires": [
            [
                "85fcefa190bd58ec",
                "f5a86263da39c811",
                "7dd2fd0c91d149d6"
            ],
            [
                "dc136a38e8883e83",
                "302e64093f16fce0",
                "1a59141260bce814",
                "9ec5bd30fbe9aa4b"
            ]
        ]
    },
    {
        "id": "2012902f23543fb8",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "v2_toggle plan buttons",
        "links": [
            "ceae70c2ba4b7830",
            "66be8a1b9908737a"
        ],
        "x": 95,
        "y": 1960,
        "wires": [
            [
                "73b7afa63e760dc5",
                "01868b25b2ab2ed7"
            ]
        ]
    },
    {
        "id": "03e2b806108ee187",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle plan buttons",
        "info": "",
        "x": 170,
        "y": 1920,
        "wires": []
    },
    {
        "id": "dc136a38e8883e83",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "send",
        "group": "a891e5f5f2effe35",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Send",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-send",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 1980,
        "wires": [
            [
                "07336c313cc6568e"
            ]
        ]
    },
    {
        "id": "98e4eb7e254e6efd",
        "type": "mqtt out",
        "z": "65c60c3b274f73e3",
        "name": "mission_control",
        "topic": "",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1301e8ab7fdd3e72",
        "x": 780,
        "y": 2000,
        "wires": []
    },
    {
        "id": "07336c313cc6568e",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "make mission control",
        "func": "selected_plan_name = global.get(\"gui.selected_plan_name\")\nif(!selected_plan_name) return\n\nplans = global.get(\"planning.plans\")\nplan = plans[selected_plan_name]\n\nproper_wps = []\nfor(var i in plan.waypoint_order){\n    wp_name = plan.waypoint_order[i]\n    wp = plan.waypoints[wp_name]\n    if(wp){\n        speed_control_mode = 2 // m/s\n        if(wp.use_rpm) speed_control_mode = 1 //rpm\n        wp_msg = {\n          \"pose\": {\n            \"header\": {\n              \"seq\": 0,\n              \"stamp\": {\n                \"secs\": 0,\n                \"nsecs\": 0\n              },\n              \"frame_id\": \"latlon\"\n            },\n            \"pose\": {\n              \"position\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"z\": 0\n              },\n              \"orientation\": {\n                \"x\": 0,\n                \"y\": 0,\n                \"z\": 0,\n                \"w\": 0\n              }\n            }\n          },\n          \"goal_tolerance\": 5,\n          \"z_control_mode\": 1, // depth\n          \"travel_altitude\": -1,\n          \"travel_depth\": wp.depth,\n          \"speed_control_mode\": speed_control_mode,\n          \"travel_rpm\": wp.rpm,\n          \"travel_speed\": wp.speed,\n          \"lat\": wp.lat,\n          \"lon\": wp.lon,\n          \"name\":wp.name\n        }\n        proper_wps.push(wp_msg)\n    }\n}\nmission_control = {\n    name: selected_plan_name,\n    command: 4, //set plan\n    waypoints: proper_wps\n}\n\nname = global.get(\"gui.selected_robot_name\")\nm = {\n    payload: mission_control,\n    topic: \"smarc/\"+name+\"/bt_cmd/mission_control\"\n}\nreturn m\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1980,
        "wires": [
            [
                "98e4eb7e254e6efd"
            ]
        ]
    },
    {
        "id": "302e64093f16fce0",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "Start",
        "group": "a891e5f5f2effe35",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "Start the currently selected plan",
        "color": "",
        "bgcolor": "green",
        "className": "",
        "icon": "fa-play",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 2020,
        "wires": [
            [
                "455a6ab8a54c744f"
            ]
        ]
    },
    {
        "id": "455a6ab8a54c744f",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "make command",
        "func": "selected_plan_name = global.get(\"gui.selected_plan_name\")\nif(!selected_plan_name) return\n\nrobot_name = global.get(\"gui.selected_robot_name\")\n\nmission_control = {\n    name: selected_plan_name,\n    command: msg.payload\n}\n\nreturn {\n    payload: mission_control,\n    topic: \"smarc/\" + robot_name + \"/bt_cmd/mission_control\"\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 2020,
        "wires": [
            [
                "98e4eb7e254e6efd"
            ]
        ]
    },
    {
        "id": "9ec5bd30fbe9aa4b",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "Pause",
        "group": "a891e5f5f2effe35",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Pause",
        "tooltip": "Pause the currently selected plan",
        "color": "",
        "bgcolor": "blue",
        "className": "",
        "icon": "fa-pause",
        "payload": "2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 2100,
        "wires": [
            [
                "455a6ab8a54c744f"
            ]
        ]
    },
    {
        "id": "1a59141260bce814",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "Stop",
        "group": "a891e5f5f2effe35",
        "order": 8,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "Stop the currently selected plan",
        "color": "",
        "bgcolor": "orange",
        "className": "",
        "icon": "fa-stop",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 2060,
        "wires": [
            [
                "455a6ab8a54c744f"
            ]
        ]
    },
    {
        "id": "2f207331e5c78091",
        "type": "ui_button",
        "z": "65c60c3b274f73e3",
        "name": "Abort",
        "group": "a48b13904097fb6a",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "ABORT",
        "tooltip": "Emergency stop, one-way street",
        "color": "",
        "bgcolor": "red",
        "className": "",
        "icon": "fa-eject",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 2140,
        "wires": [
            [
                "455a6ab8a54c744f"
            ]
        ]
    },
    {
        "id": "ceae70c2ba4b7830",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "2012902f23543fb8"
        ],
        "x": 335,
        "y": 1600,
        "wires": []
    },
    {
        "id": "63b2d28120775eb3",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle plan buttons",
        "info": "",
        "x": 450,
        "y": 1600,
        "wires": []
    },
    {
        "id": "66be8a1b9908737a",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "2012902f23543fb8"
        ],
        "x": 845,
        "y": 1580,
        "wires": []
    },
    {
        "id": "12a576379e429b98",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle plan buttons",
        "info": "",
        "x": 970,
        "y": 1580,
        "wires": []
    },
    {
        "id": "a9e58882f4e7f8c8",
        "type": "change",
        "z": "65c60c3b274f73e3",
        "name": "selected_plan_name",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "gui.selected_plan_name",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 1560,
        "wires": [
            [
                "2645246b449b3b32"
            ]
        ]
    },
    {
        "id": "96bd5e1f1141c77f",
        "type": "function",
        "z": "65c60c3b274f73e3",
        "name": "toggle",
        "func": "spn = global.get(\"gui.selected_plan_name\")\nif(!spn) return {enabled:false}\n\nplans = global.get(\"planning.plans\")\nplan = plans[spn]\n\nif(plan.waypoint_order.length == 0) return {enabled:false}\n\nswn = global.get(\"gui.selected_waypoint_name\")\nif(!swn) return {enabled:false}\n\nreturn {enabled:true}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2420,
        "wires": [
            [
                "c36e098b35484df1",
                "6596fde6e6662884",
                "1ce3149408193422",
                "b5d55ffd8630fd60",
                "7d1b8d23041dbcc3",
                "0d2ac32c332f0416"
            ]
        ]
    },
    {
        "id": "b3ea1b7b39673b5c",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "toggle_wp_properties",
        "links": [
            "0be397d4764637a6",
            "f49c58686629d1ad",
            "4308dd074208279a",
            "5fa6ab3ca15b659e",
            "01868b25b2ab2ed7"
        ],
        "x": 585,
        "y": 2420,
        "wires": [
            [
                "96bd5e1f1141c77f"
            ]
        ]
    },
    {
        "id": "204c6d50c2d5f9ad",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle wp props",
        "info": "",
        "x": 480,
        "y": 2420,
        "wires": []
    },
    {
        "id": "5fa6ab3ca15b659e",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "b3ea1b7b39673b5c"
        ],
        "x": 975,
        "y": 2680,
        "wires": []
    },
    {
        "id": "c39b8bf425cf1ed5",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle wp props",
        "info": "",
        "x": 1080,
        "y": 2680,
        "wires": []
    },
    {
        "id": "01868b25b2ab2ed7",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "b3ea1b7b39673b5c"
        ],
        "x": 175,
        "y": 2000,
        "wires": []
    },
    {
        "id": "0c4a3040fc26bbeb",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle wp props",
        "info": "",
        "x": 180,
        "y": 2040,
        "wires": []
    },
    {
        "id": "9463c51f5d5790c3",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "wp buttons toggle",
        "links": [
            "0d2ac32c332f0416"
        ],
        "x": 205,
        "y": 2820,
        "wires": [
            [
                "5e5e0abaf6ad063c",
                "4c0d1f4c2b893c06"
            ]
        ]
    },
    {
        "id": "1beb1ce8fd854a54",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "wp button toggle",
        "info": "",
        "x": 100,
        "y": 2820,
        "wires": []
    },
    {
        "id": "0d2ac32c332f0416",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "9463c51f5d5790c3",
            "dc432fd8c414a1e9"
        ],
        "x": 795,
        "y": 2400,
        "wires": []
    },
    {
        "id": "735cb3f658efa37a",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "wp button toggle",
        "info": "",
        "x": 900,
        "y": 2400,
        "wires": []
    },
    {
        "id": "85345819c7179b0b",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "wp button toggle",
        "info": "",
        "x": 1100,
        "y": 2460,
        "wires": []
    },
    {
        "id": "dc432fd8c414a1e9",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "wp buttons toggle",
        "links": [
            "0d2ac32c332f0416"
        ],
        "x": 1205,
        "y": 2460,
        "wires": [
            [
                "2a3c96232faf5eb1"
            ]
        ]
    },
    {
        "id": "404268e46f877811",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning_mode toggle",
        "links": [
            "7dd2fd0c91d149d6"
        ],
        "x": 425,
        "y": 600,
        "wires": [
            [
                "87855a030ad4b56e"
            ]
        ]
    },
    {
        "id": "41396310128c8091",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning mode toggle",
        "info": "",
        "x": 280,
        "y": 600,
        "wires": []
    },
    {
        "id": "7dd2fd0c91d149d6",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "404268e46f877811",
            "5a1ec79daf3b13c9",
            "0ec6c9c873d30dd2"
        ],
        "x": 335,
        "y": 1820,
        "wires": []
    },
    {
        "id": "34b015beb16d5216",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning mode toggle",
        "info": "",
        "x": 180,
        "y": 1820,
        "wires": []
    },
    {
        "id": "0415fe8d2492bfd5",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning mode toggle",
        "info": "",
        "x": 220,
        "y": 2700,
        "wires": []
    },
    {
        "id": "5a1ec79daf3b13c9",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning_mode toggle",
        "links": [
            "7dd2fd0c91d149d6"
        ],
        "x": 375,
        "y": 2700,
        "wires": [
            [
                "5e25569da4a16b0b"
            ]
        ]
    },
    {
        "id": "62b894f52a251e83",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning mode toggle",
        "info": "",
        "x": 360,
        "y": 1520,
        "wires": []
    },
    {
        "id": "0ec6c9c873d30dd2",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "toggle planning_mode toggle",
        "links": [
            "7dd2fd0c91d149d6"
        ],
        "x": 505,
        "y": 1520,
        "wires": [
            [
                "2645246b449b3b32"
            ]
        ]
    },
    {
        "id": "389bc260103b7207",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "a252ee0fd438b161"
        ],
        "x": 845,
        "y": 1700,
        "wires": []
    },
    {
        "id": "1aee60b690e0cd02",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of plans",
        "info": "",
        "x": 970,
        "y": 1700,
        "wires": []
    },
    {
        "id": "a2d92b46dda26406",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "update list of wps",
        "info": "",
        "x": 1080,
        "y": 2720,
        "wires": []
    },
    {
        "id": "5c7f36f879d73a9b",
        "type": "link out",
        "z": "65c60c3b274f73e3",
        "name": "",
        "mode": "link",
        "links": [
            "c1a9221f5cb68d31"
        ],
        "x": 975,
        "y": 2720,
        "wires": []
    },
    {
        "id": "6b234cf645da7fea",
        "type": "comment",
        "z": "65c60c3b274f73e3",
        "name": "toggle readouts",
        "info": "",
        "x": 140,
        "y": 2140,
        "wires": []
    },
    {
        "id": "dee9d1fab2fcec69",
        "type": "link in",
        "z": "65c60c3b274f73e3",
        "name": "toggle readouts",
        "links": [
            "cf8fbcc8cd92e83a"
        ],
        "x": 245,
        "y": 2140,
        "wires": [
            [
                "2f207331e5c78091"
            ]
        ]
    }
]